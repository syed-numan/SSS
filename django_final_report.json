{
    "bandit": {
        "status": "success",
        "results": [
            {
                "code": "111             app_module = import_module(entry)\n112         except Exception:\n113             pass\n114         else:\n",
                "col_offset": 8,
                "end_col_offset": 16,
                "filename": "open_source_repos\\django\\django\\apps\\config.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 112,
                "line_range": [
                    112,
                    113
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "162                 app_config_class = import_string(entry)\n163             except Exception:\n164                 pass\n165         # If both import_module and import_string failed, it means that entry\n",
                "col_offset": 12,
                "end_col_offset": 20,
                "filename": "open_source_repos\\django\\django\\apps\\config.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 163,
                "line_range": [
                    163,
                    164
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "205 EMAIL_HOST_USER = \"\"\n206 EMAIL_HOST_PASSWORD = \"\"\n207 EMAIL_USE_TLS = False\n",
                "col_offset": 22,
                "end_col_offset": 24,
                "filename": "open_source_repos\\django\\django\\conf\\global_settings.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 206,
                "line_range": [
                    206
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "271 # loudly.\n272 SECRET_KEY = \"\"\n273 \n",
                "col_offset": 13,
                "end_col_offset": 15,
                "filename": "open_source_repos\\django\\django\\conf\\global_settings.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 272,
                "line_range": [
                    272
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "9 MONTH_DAY_FORMAT = \"j F\"\n10 SHORT_DATE_FORMAT = \"d\u200f/m\u200f/Y\"\n11 # SHORT_DATETIME_FORMAT =\n12 # FIRST_DAY_OF_WEEK =\n",
                "col_offset": 23,
                "end_col_offset": 0,
                "filename": "open_source_repos\\django\\django\\conf\\locale\\ar\\formats.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 838,
                    "link": "https://cwe.mitre.org/data/definitions/838.html"
                },
                "issue_severity": "HIGH",
                "issue_text": "A Python source file contains bidirectional control characters ('\\u200f').",
                "line_number": 10,
                "line_range": [
                    0,
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b613_trojansource.html",
                "test_id": "B613",
                "test_name": "trojansource"
            },
            {
                "code": "10 SHORT_DATE_FORMAT = \"Y/n/j\"\n11 SHORT_DATETIME_FORMAT = \"Y/n/j\u060c\u200f G:i\"\n12 FIRST_DAY_OF_WEEK = 6\n13 \n",
                "col_offset": 32,
                "end_col_offset": 0,
                "filename": "open_source_repos\\django\\django\\conf\\locale\\ckb\\formats.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 838,
                    "link": "https://cwe.mitre.org/data/definitions/838.html"
                },
                "issue_severity": "HIGH",
                "issue_text": "A Python source file contains bidirectional control characters ('\\u200f').",
                "line_number": 11,
                "line_range": [
                    0,
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b613_trojansource.html",
                "test_id": "B613",
                "test_name": "trojansource"
            },
            {
                "code": "10 SHORT_DATE_FORMAT = \"Y/n/j\"\n11 SHORT_DATETIME_FORMAT = \"Y/n/j\u060c\u200f G:i\"\n12 FIRST_DAY_OF_WEEK = 6\n13 \n",
                "col_offset": 32,
                "end_col_offset": 0,
                "filename": "open_source_repos\\django\\django\\conf\\locale\\fa\\formats.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 838,
                    "link": "https://cwe.mitre.org/data/definitions/838.html"
                },
                "issue_severity": "HIGH",
                "issue_text": "A Python source file contains bidirectional control characters ('\\u200f').",
                "line_number": 11,
                "line_range": [
                    0,
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b613_trojansource.html",
                "test_id": "B613",
                "test_name": "trojansource"
            },
            {
                "code": "160     def errors(self):\n161         return mark_safe(\n162             \"\\n\".join(\n163                 self.form[f].errors.as_ul()\n164                 for f in self.fields\n165                 if f not in self.readonly_fields\n166             ).strip(\"\\n\")\n167         )\n168 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\helpers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 161,
                "line_range": [
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "160     def errors(self):\n161         return mark_safe(\n162             \"\\n\".join(\n163                 self.form[f].errors.as_ul()\n164                 for f in self.fields\n165                 if f not in self.readonly_fields\n166             ).strip(\"\\n\")\n167         )\n168 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\helpers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 161,
                "line_range": [
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "190         return self.field.label_tag(\n191             contents=mark_safe(contents),\n192             attrs=attrs,\n",
                "col_offset": 21,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\helpers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 191,
                "line_range": [
                    191
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "190         return self.field.label_tag(\n191             contents=mark_safe(contents),\n192             attrs=attrs,\n",
                "col_offset": 21,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\helpers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 191,
                "line_range": [
                    191
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "196     def errors(self):\n197         return mark_safe(self.field.errors.as_ul())\n198 \n",
                "col_offset": 15,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\helpers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 197,
                "line_range": [
                    197
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "196     def errors(self):\n197         return mark_safe(self.field.errors.as_ul())\n198 \n",
                "col_offset": 15,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\helpers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 197,
                "line_range": [
                    197
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "380         try:\n381             return mark_safe(self.empty_value_display)\n382         except AttributeError:\n",
                "col_offset": 19,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\options.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 381,
                "line_range": [
                    381
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "380         try:\n381             return mark_safe(self.empty_value_display)\n382         except AttributeError:\n",
                "col_offset": 19,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\options.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 381,
                "line_range": [
                    381
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "382         except AttributeError:\n383             return mark_safe(self.admin_site.empty_value_display)\n384 \n",
                "col_offset": 19,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\options.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 383,
                "line_range": [
                    383
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "382         except AttributeError:\n383             return mark_safe(self.admin_site.empty_value_display)\n384 \n",
                "col_offset": 19,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\options.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 383,
                "line_range": [
                    383
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "49             cl.get_query_string({PAGE_VAR: i}),\n50             mark_safe(' class=\"end\"' if i == cl.paginator.num_pages else \"\"),\n51             i,\n",
                "col_offset": 12,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 50,
                "line_range": [
                    50
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "49             cl.get_query_string({PAGE_VAR: i}),\n50             mark_safe(' class=\"end\"' if i == cl.paginator.num_pages else \"\"),\n51             i,\n",
                "col_offset": 12,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 50,
                "line_range": [
                    50
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "102                 yield {\n103                     \"text\": mark_safe(\n104                         f'<input type=\"checkbox\" id=\"action-toggle\" '\n105                         f'aria-label=\"{aria_label}\">'\n106                     ),\n107                     \"class_attrib\": mark_safe(' class=\"action-checkbox-column\"'),\n",
                "col_offset": 28,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 103,
                "line_range": [
                    103,
                    104,
                    105,
                    106
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "102                 yield {\n103                     \"text\": mark_safe(\n104                         f'<input type=\"checkbox\" id=\"action-toggle\" '\n105                         f'aria-label=\"{aria_label}\">'\n106                     ),\n107                     \"class_attrib\": mark_safe(' class=\"action-checkbox-column\"'),\n",
                "col_offset": 28,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 103,
                "line_range": [
                    103,
                    104,
                    105,
                    106
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "106                     ),\n107                     \"class_attrib\": mark_safe(' class=\"action-checkbox-column\"'),\n108                     \"sortable\": False,\n",
                "col_offset": 36,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 107,
                "line_range": [
                    107
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "247                     row_classes.append(\"nowrap\")\n248         row_class = mark_safe(' class=\"%s\"' % \" \".join(row_classes))\n249         # If list_display_links not defined, add the link tag to the first field\n",
                "col_offset": 20,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 248,
                "line_range": [
                    248
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "247                     row_classes.append(\"nowrap\")\n248         row_class = mark_safe(' class=\"%s\"' % \" \".join(row_classes))\n249         # If list_display_links not defined, add the link tag to the first field\n",
                "col_offset": 20,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 248,
                "line_range": [
                    248
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "297                 bf = form[field_name]\n298                 result_repr = mark_safe(str(bf.errors) + str(bf))\n299             yield format_html(\"<td{}>{}</td>\", row_class, result_repr)\n",
                "col_offset": 30,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 298,
                "line_range": [
                    298
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "297                 bf = form[field_name]\n298                 result_repr = mark_safe(str(bf.errors) + str(bf))\n299             yield format_html(\"<td{}>{}</td>\", row_class, result_repr)\n",
                "col_offset": 30,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 298,
                "line_range": [
                    298
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "328             if form[cl.model._meta.pk.name].is_hidden:\n329                 yield mark_safe(form[cl.model._meta.pk.name])\n330 \n",
                "col_offset": 22,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 329,
                "line_range": [
                    329
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "328             if form[cl.model._meta.pk.name].is_hidden:\n329                 yield mark_safe(form[cl.model._meta.pk.name])\n330 \n",
                "col_offset": 22,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\django\\contrib\\admin\\templatetags\\admin_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 329,
                "line_range": [
                    329
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "87     )\n88     return mark_safe(parts[\"fragment\"])\n89 \n",
                "col_offset": 11,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\django\\contrib\\admindocs\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 88,
                "line_range": [
                    88
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "87     )\n88     return mark_safe(parts[\"fragment\"])\n89 \n",
                "col_offset": 11,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\django\\contrib\\admindocs\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 88,
                "line_range": [
                    88
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "263 def strip_p_tags(value):\n264     return mark_safe(value.replace(\"<p>\", \"\").replace(\"</p>\", \"\"))\n",
                "col_offset": 11,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\contrib\\admindocs\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 264,
                "line_range": [
                    264
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "263 def strip_p_tags(value):\n264     return mark_safe(value.replace(\"<p>\", \"\").replace(\"</p>\", \"\"))\n",
                "col_offset": 11,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\contrib\\admindocs\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 264,
                "line_range": [
                    264
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "156     @sensitive_variables(\"password\")\n157     def validate_password_for_user(self, user, password_field_name=\"password2\"):\n158         password = self.cleaned_data.get(password_field_name)\n159         if password:\n160             try:\n161                 password_validation.validate_password(password, user)\n162             except ValidationError as error:\n163                 self.add_error(password_field_name, error)\n164 \n",
                "col_offset": 4,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password2'",
                "line_number": 157,
                "line_range": [
                    157,
                    158,
                    159,
                    160,
                    161,
                    162,
                    163
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b107_hardcoded_password_default.html",
                "test_id": "B107",
                "test_name": "hardcoded_password_default"
            },
            {
                "code": "164 \n165     def set_password_and_save(self, user, password_field_name=\"password1\", commit=True):\n166         user.set_password(self.cleaned_data[password_field_name])\n167         if commit:\n168             user.save()\n169         return user\n170 \n",
                "col_offset": 4,
                "end_col_offset": 19,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password1'",
                "line_number": 165,
                "line_range": [
                    165,
                    166,
                    167,
                    168,
                    169
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b107_hardcoded_password_default.html",
                "test_id": "B107",
                "test_name": "hardcoded_password_default"
            },
            {
                "code": "21 \n22 UNUSABLE_PASSWORD_PREFIX = \"!\"  # This will never be a valid encoded hash\n23 UNUSABLE_PASSWORD_SUFFIX_LENGTH = (\n",
                "col_offset": 27,
                "end_col_offset": 30,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: '!'",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "332         algorithm, iterations, salt, hash = encoded.split(\"$\", 3)\n333         assert algorithm == self.algorithm\n334         return {\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 333,
                "line_range": [
                    333
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "411         algorithm, rest = encoded.split(\"$\", 1)\n412         assert algorithm == self.algorithm\n413         params = argon2.extract_parameters(\"$\" + rest)\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 412,
                "line_range": [
                    412
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "432         algorithm, rest = encoded.split(\"$\", 1)\n433         assert algorithm == self.algorithm\n434         try:\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 433,
                "line_range": [
                    433
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "513         algorithm, empty, algostr, work_factor, data = encoded.split(\"$\", 4)\n514         assert algorithm == self.algorithm\n515         return {\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 514,
                "line_range": [
                    514
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "524         algorithm, data = encoded.split(\"$\", 1)\n525         assert algorithm == self.algorithm\n526         encoded_2 = self.encode(password, data.encode(\"ascii\"))\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 525,
                "line_range": [
                    525
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "602         )\n603         assert algorithm == self.algorithm\n604         return {\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 603,
                "line_range": [
                    603
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "657         self._check_encode_args(password, salt)\n658         hash = hashlib.md5((salt + password).encode()).hexdigest()\n659         return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n",
                "col_offset": 15,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 658,
                "line_range": [
                    658
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "662         algorithm, salt, hash = encoded.split(\"$\", 2)\n663         assert algorithm == self.algorithm\n664         return {\n",
                "col_offset": 8,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\hashers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 663,
                "line_range": [
                    663
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "22 \n23 PASSWORD_FIELD = \"password\"\n24 \n",
                "col_offset": 17,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\management\\commands\\createsuperuser.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 23,
                "line_range": [
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "245 \n246 INTERNAL_RESET_SESSION_TOKEN = \"_password_reset_token\"\n247 \n",
                "col_offset": 31,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: '_password_reset_token'",
                "line_number": 246,
                "line_range": [
                    246
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "259     post_reset_login_backend = None\n260     reset_url_token = \"set-password\"\n261     success_url = reverse_lazy(\"password_reset_complete\")\n",
                "col_offset": 22,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\contrib\\auth\\views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'set-password'",
                "line_number": 260,
                "line_range": [
                    260
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "66     # content in the first place).\n67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n",
                "col_offset": 14,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\contrib\\flatpages\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "66     # content in the first place).\n67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n",
                "col_offset": 14,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\contrib\\flatpages\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n69 \n",
                "col_offset": 16,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\contrib\\flatpages\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 68,
                "line_range": [
                    68
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "67     f.title = mark_safe(f.title)\n68     f.content = mark_safe(f.content)\n69 \n",
                "col_offset": 16,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\contrib\\flatpages\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 68,
                "line_range": [
                    68
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "203                 raise ImproperlyConfigured(\n204                     'Cannot determine PostGIS version for database \"%s\" '\n205                     'using command \"SELECT postgis_lib_version()\". '\n206                     \"GeoDjango requires at least PostGIS version 3.1. \"\n207                     \"Was the database created from a spatial database \"\n208                     \"template?\" % self.connection.settings_dict[\"NAME\"]\n209                 )\n",
                "col_offset": 20,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\django\\contrib\\gis\\db\\backends\\postgis\\operations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 204,
                "line_range": [
                    204,
                    205,
                    206,
                    207,
                    208
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "62     # Mark value safe so i18n does not break with <sup> or <sub> see #19988\n63     return mark_safe(value)\n64 \n",
                "col_offset": 11,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\contrib\\humanize\\templatetags\\humanize.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 63,
                "line_range": [
                    63
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "62     # Mark value safe so i18n does not break with <sup> or <sub> see #19988\n63     return mark_safe(value)\n64 \n",
                "col_offset": 11,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\contrib\\humanize\\templatetags\\humanize.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 63,
                "line_range": [
                    63
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "37                 if obj[1]:\n38                     obj[3] = mark_safe(obj[3])\n39                 return Message(*obj[2:])\n",
                "col_offset": 29,
                "end_col_offset": 46,
                "filename": "open_source_repos\\django\\django\\contrib\\messages\\storage\\cookie.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 38,
                "line_range": [
                    38
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "37                 if obj[1]:\n38                     obj[3] = mark_safe(obj[3])\n39                 return Message(*obj[2:])\n",
                "col_offset": 29,
                "end_col_offset": 46,
                "filename": "open_source_repos\\django\\django\\contrib\\messages\\storage\\cookie.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 38,
                "line_range": [
                    38
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "138             logger.warning(\"Session data corrupted\")\n139         except Exception:\n140             # ValueError, unpickling exceptions. If any of these happen, just\n141             # return an empty dictionary (an empty session).\n142             pass\n143         return {}\n",
                "col_offset": 8,
                "end_col_offset": 16,
                "filename": "open_source_repos\\django\\django\\contrib\\sessions\\backends\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 139,
                "line_range": [
                    139,
                    140,
                    141,
                    142
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "129             return None\n130         hasher = md5(usedforsecurity=False)\n131         for chunk in content.chunks():\n",
                "col_offset": 17,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\contrib\\staticfiles\\storage.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 130,
                "line_range": [
                    130
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "241                 # Otherwise the condition above would have returned prematurely.\n242                 assert url_path.startswith(settings.STATIC_URL)\n243                 target_name = url_path.removeprefix(settings.STATIC_URL)\n",
                "col_offset": 16,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\django\\contrib\\staticfiles\\storage.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 242,
                "line_range": [
                    242
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "2 import base64\n3 import pickle\n4 from datetime import datetime, timezone\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "68             cursor.execute(\n69                 \"SELECT %s, %s, %s FROM %s WHERE %s IN (%s)\"\n70                 % (\n71                     quote_name(\"cache_key\"),\n72                     quote_name(\"value\"),\n73                     quote_name(\"expires\"),\n74                     table,\n75                     quote_name(\"cache_key\"),\n76                     \", \".join([\"%s\"] * len(key_map)),\n77                 ),\n78                 list(key_map),\n",
                "col_offset": 16,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 69,
                "line_range": [
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "94                 value = connection.ops.process_clob(value)\n95                 value = pickle.loads(base64.b64decode(value.encode()))\n96                 result[key_map.get(key)] = value\n",
                "col_offset": 24,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 95,
                "line_range": [
                    95
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "119         with connection.cursor() as cursor:\n120             cursor.execute(\"SELECT COUNT(*) FROM %s\" % table)\n121             num = cursor.fetchone()[0]\n",
                "col_offset": 27,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 120,
                "line_range": [
                    120
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "142                     cursor.execute(\n143                         \"SELECT %s, %s FROM %s WHERE %s = %%s\"\n144                         % (\n145                             quote_name(\"cache_key\"),\n146                             quote_name(\"expires\"),\n147                             table,\n148                             quote_name(\"cache_key\"),\n149                         ),\n150                         [key],\n",
                "col_offset": 24,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 143,
                "line_range": [
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "168                         cursor.execute(\n169                             \"UPDATE %s SET %s = %%s WHERE %s = %%s\"\n170                             % (table, quote_name(\"expires\"), quote_name(\"cache_key\")),\n171                             [exp, key],\n",
                "col_offset": 28,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 169,
                "line_range": [
                    169,
                    170
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "176                         cursor.execute(\n177                             \"UPDATE %s SET %s = %%s, %s = %%s WHERE %s = %%s\"\n178                             % (\n179                                 table,\n180                                 quote_name(\"value\"),\n181                                 quote_name(\"expires\"),\n182                                 quote_name(\"cache_key\"),\n183                             ),\n184                             [b64encoded, exp, key],\n",
                "col_offset": 28,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 177,
                "line_range": [
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "187                         cursor.execute(\n188                             \"INSERT INTO %s (%s, %s, %s) VALUES (%%s, %%s, %%s)\"\n189                             % (\n190                                 table,\n191                                 quote_name(\"cache_key\"),\n192                                 quote_name(\"value\"),\n193                                 quote_name(\"expires\"),\n194                             ),\n195                             [key, b64encoded, exp],\n",
                "col_offset": 28,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 188,
                "line_range": [
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "223             cursor.execute(\n224                 \"DELETE FROM %s WHERE %s IN (%s)\"\n225                 % (\n226                     table,\n227                     quote_name(\"cache_key\"),\n228                     \", \".join([\"%s\"] * len(keys)),\n229                 ),\n230                 keys,\n",
                "col_offset": 16,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 224,
                "line_range": [
                    224,
                    225,
                    226,
                    227,
                    228,
                    229
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "244             cursor.execute(\n245                 \"SELECT %s FROM %s WHERE %s = %%s and %s > %%s\"\n246                 % (\n247                     quote_name(\"cache_key\"),\n248                     quote_name(self._table),\n249                     quote_name(\"cache_key\"),\n250                     quote_name(\"expires\"),\n251                 ),\n252                 [key, connection.ops.adapt_datetimefield_value(now)],\n",
                "col_offset": 16,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 245,
                "line_range": [
                    245,
                    246,
                    247,
                    248,
                    249,
                    250,
                    251
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "262             cursor.execute(\n263                 \"DELETE FROM %s WHERE %s < %%s\"\n264                 % (\n265                     table,\n266                     connection.ops.quote_name(\"expires\"),\n267                 ),\n268                 [connection.ops.adapt_datetimefield_value(now)],\n",
                "col_offset": 16,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 263,
                "line_range": [
                    263,
                    264,
                    265,
                    266,
                    267
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "279                     cursor.execute(\n280                         \"DELETE FROM %s WHERE %s < %%s\"\n281                         % (\n282                             table,\n283                             connection.ops.quote_name(\"cache_key\"),\n284                         ),\n285                         [last_cache_key[0]],\n",
                "col_offset": 24,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 280,
                "line_range": [
                    280,
                    281,
                    282,
                    283,
                    284
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "292         with connection.cursor() as cursor:\n293             cursor.execute(\"DELETE FROM %s\" % table)\n",
                "col_offset": 27,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\db.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 293,
                "line_range": [
                    293
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "3 import os\n4 import pickle\n5 import random\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\filebased.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 4,
                "line_range": [
                    4
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "35                 if not self._is_expired(f):\n36                     return pickle.loads(zlib.decompress(f.read()))\n37         except FileNotFoundError:\n",
                "col_offset": 27,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\filebased.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 36,
                "line_range": [
                    36
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "68                     else:\n69                         previous_value = pickle.loads(zlib.decompress(f.read()))\n70                         f.seek(0)\n",
                "col_offset": 41,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\filebased.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 69,
                "line_range": [
                    69
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "134                 [\n135                     md5(key.encode(), usedforsecurity=False).hexdigest(),\n136                     self.cache_suffix,\n",
                "col_offset": 20,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\filebased.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 135,
                "line_range": [
                    135
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "152         try:\n153             exp = pickle.load(f)\n154         except EOFError:\n",
                "col_offset": 18,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\filebased.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 153,
                "line_range": [
                    153
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1 \"Thread-safe in-memory cache backend.\"\n2 import pickle\n3 import time\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\locmem.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "41             self._cache.move_to_end(key, last=False)\n42         return pickle.loads(pickled)\n43 \n",
                "col_offset": 15,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\locmem.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 42,
                "line_range": [
                    42
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "71             pickled = self._cache[key]\n72             value = pickle.loads(pickled)\n73             new_value = value + delta\n",
                "col_offset": 20,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\locmem.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 72,
                "line_range": [
                    72
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "2 \n3 import pickle\n4 import random\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\redis.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "26         except ValueError:\n27             return pickle.loads(data)\n28 \n",
                "col_offset": 19,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\redis.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 27,
                "line_range": [
                    27
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "67             return 0\n68         return random.randint(1, len(self._servers) - 1)\n69 \n",
                "col_offset": 15,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\django\\core\\cache\\backends\\redis.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 68,
                "line_range": [
                    68
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "6 def make_template_fragment_key(fragment_name, vary_on=None):\n7     hasher = md5(usedforsecurity=False)\n8     if vary_on is not None:\n",
                "col_offset": 13,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\django\\core\\cache\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 7,
                "line_range": [
                    7
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "21 \n22 SECRET_KEY_INSECURE_PREFIX = \"django-insecure-\"\n23 SECRET_KEY_MIN_LENGTH = 50\n",
                "col_offset": 29,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\django\\core\\checks\\security\\base.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'django-insecure-'",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "238         # This should never happen.\n239         assert False, \"Invalid ASGI message after request body: %s\" % message[\"type\"]\n240 \n",
                "col_offset": 8,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\django\\core\\handlers\\asgi.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 239,
                "line_range": [
                    239
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1 import subprocess\n2 \n3 from django.core.management.base import BaseCommand, CommandError\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\core\\management\\commands\\dbshell.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "178         elif self.addr == \"0\":\n179             addr = \"0.0.0.0\"\n180         else:\n",
                "col_offset": 19,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\django\\core\\management\\commands\\runserver.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 605,
                    "link": "https://cwe.mitre.org/data/definitions/605.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible binding to all interfaces.",
                "line_number": 179,
                "line_range": [
                    179
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
                "test_id": "B104",
                "test_name": "hardcoded_bind_all_interfaces"
            },
            {
                "code": "77                 try:\n78                     exec(compile(pythonrc_code, pythonrc, \"exec\"), imported_objects)\n79                 except Exception:\n",
                "col_offset": 20,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\django\\core\\management\\commands\\shell.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of exec detected.",
                "line_number": 78,
                "line_range": [
                    78
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html",
                "test_id": "B102",
                "test_name": "exec_used"
            },
            {
                "code": "116         if options[\"command\"]:\n117             exec(options[\"command\"], globals())\n118             return\n",
                "col_offset": 12,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\django\\core\\management\\commands\\shell.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of exec detected.",
                "line_number": 117,
                "line_range": [
                    117
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html",
                "test_id": "B102",
                "test_name": "exec_used"
            },
            {
                "code": "126         ):\n127             exec(sys.stdin.read(), globals())\n128             return\n",
                "col_offset": 12,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\django\\core\\management\\commands\\shell.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of exec detected.",
                "line_number": 127,
                "line_range": [
                    127
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html",
                "test_id": "B102",
                "test_name": "exec_used"
            },
            {
                "code": "3 import shutil\n4 import subprocess\n5 from pathlib import Path\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\core\\management\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 4,
                "line_range": [
                    4
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "5 from pathlib import Path\n6 from subprocess import run\n7 \n",
                "col_offset": 0,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\django\\core\\management\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 6,
                "line_range": [
                    6
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "21     try:\n22         p = run(args, capture_output=True, close_fds=os.name != \"nt\")\n23     except OSError as err:\n",
                "col_offset": 12,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\django\\core\\management\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "171     if black_path:\n172         subprocess.run(\n173             [black_path, \"--fast\", \"--\", *written_files],\n174             capture_output=True,\n175         )\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\core\\management\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 172,
                "line_range": [
                    172,
                    173,
                    174,
                    175
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "5 import json\n6 from xml.dom import pulldom\n7 from xml.sax import handler\n",
                "col_offset": 0,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\core\\serializers\\xml_serializer.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using pulldom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace pulldom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 6,
                "line_range": [
                    6
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b409-import-xml-pulldom",
                "test_id": "B409",
                "test_name": "blacklist"
            },
            {
                "code": "6 from xml.dom import pulldom\n7 from xml.sax import handler\n8 from xml.sax.expatreader import ExpatParser as _ExpatParser\n",
                "col_offset": 0,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\core\\serializers\\xml_serializer.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using handler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace handler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 7,
                "line_range": [
                    7
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b406-import-xml-sax",
                "test_id": "B406",
                "test_name": "blacklist"
            },
            {
                "code": "7 from xml.sax import handler\n8 from xml.sax.expatreader import ExpatParser as _ExpatParser\n9 \n",
                "col_offset": 0,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\django\\core\\serializers\\xml_serializer.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using ExpatParser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ExpatParser with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 8,
                "line_range": [
                    8
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b406-import-xml-sax",
                "test_id": "B406",
                "test_name": "blacklist"
            },
            {
                "code": "200         self.handle_forward_references = options.pop(\"handle_forward_references\", False)\n201         self.event_stream = pulldom.parse(self.stream, self._make_parser())\n202         self.db = using\n",
                "col_offset": 28,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\django\\core\\serializers\\xml_serializer.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.pulldom.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.pulldom.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 201,
                "line_range": [
                    201
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-pulldom",
                "test_id": "B319",
                "test_name": "blacklist"
            },
            {
                "code": "1 import os\n2 import subprocess\n3 \n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\db\\backends\\base\\client.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "27         env = {**os.environ, **env} if env else None\n28         subprocess.run(args, env=env, check=True)\n",
                "col_offset": 8,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\django\\db\\backends\\base\\client.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "96         cache_key = self.quote_name(\"cache_key\")\n97         return f\"SELECT {cache_key} FROM %s ORDER BY {cache_key} LIMIT 1 OFFSET %%s\"\n98 \n",
                "col_offset": 15,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\django\\db\\backends\\base\\operations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 97,
                "line_range": [
                    97
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "345                     cursor.execute(\n346                         \"\"\"\n347                         SELECT REFERRING.`%s`, REFERRING.`%s` FROM `%s` as REFERRING\n348                         LEFT JOIN `%s` as REFERRED\n349                         ON (REFERRING.`%s` = REFERRED.`%s`)\n350                         WHERE REFERRING.`%s` IS NOT NULL AND REFERRED.`%s` IS NULL\n351                         \"\"\"\n352                         % (\n353                             primary_key_column_name,\n354                             column_name,\n355                             table_name,\n356                             referenced_table_name,\n357                             column_name,\n358                             referenced_column_name,\n359                             column_name,\n360                             referenced_column_name,\n361                         )\n362                     )\n",
                "col_offset": 24,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\db\\backends\\mysql\\base.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 346,
                "line_range": [
                    346,
                    347,
                    348,
                    349,
                    350,
                    351,
                    352,
                    353,
                    354,
                    355,
                    356,
                    357,
                    358,
                    359,
                    360,
                    361
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "1 import os\n2 import subprocess\n3 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\db\\backends\\mysql\\creation.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "76 \n77         with subprocess.Popen(\n78             dump_cmd, stdout=subprocess.PIPE, env=dump_env\n79         ) as dump_proc:\n80             with subprocess.Popen(\n",
                "col_offset": 13,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\db\\backends\\mysql\\creation.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 77,
                "line_range": [
                    77,
                    78,
                    79
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "79         ) as dump_proc:\n80             with subprocess.Popen(\n81                 load_cmd,\n82                 stdin=dump_proc.stdout,\n83                 stdout=subprocess.DEVNULL,\n84                 env=load_env,\n85             ):\n86                 # Allow dump_proc to receive a SIGPIPE if the load process exits.\n",
                "col_offset": 17,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\db\\backends\\mysql\\creation.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 80,
                "line_range": [
                    80,
                    81,
                    82,
                    83,
                    84,
                    85
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "154         cursor.execute(\n155             \"SELECT * FROM %s LIMIT 1\" % self.connection.ops.quote_name(table_name)\n156         )\n",
                "col_offset": 12,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\django\\db\\backends\\mysql\\introspection.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 155,
                "line_range": [
                    155
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "119             self.execute(\n120                 \"UPDATE %(table)s SET %(column)s = %%s\"\n121                 % {\n122                     \"table\": self.quote_name(model._meta.db_table),\n123                     \"column\": self.quote_name(field.column),\n124                 },\n125                 [effective_default],\n",
                "col_offset": 16,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\db\\backends\\mysql\\schema.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 120,
                "line_range": [
                    120,
                    121,
                    122,
                    123,
                    124
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "290                 cursor.execute(\n291                     \"SELECT 1 FROM DUAL WHERE DUMMY %s\"\n292                     % self._standard_operators[\"contains\"],\n293                     [\"X\"],\n",
                "col_offset": 20,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\base.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 291,
                "line_range": [
                    291,
                    292
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "285         if not success and self._test_settings_get(\"PASSWORD\") is None:\n286             set_password = 'ALTER USER %(user)s IDENTIFIED BY \"%(password)s\"'\n287             self._execute_statements(cursor, [set_password], parameters, verbosity)\n",
                "col_offset": 27,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\creation.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'ALTER USER %(user)s IDENTIFIED BY \"%(password)s\"'",
                "line_number": 286,
                "line_range": [
                    286
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "179         cursor.execute(\n180             \"SELECT * FROM {} WHERE ROWNUM < 2 AND {} > 0\".format(\n181                 self.connection.ops.quote_name(table_name), self.cache_bust_counter\n",
                "col_offset": 12,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\introspection.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 180,
                "line_range": [
                    180
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "74         return (\n75             f\"SELECT {cache_key} \"\n76             f\"FROM %s \"\n77             f\"ORDER BY {cache_key} OFFSET %%s ROWS FETCH FIRST 1 ROWS ONLY\"\n78         )\n",
                "col_offset": 12,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\operations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 75,
                "line_range": [
                    75,
                    76,
                    77
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "698         # UNION operator. To prevent incorrect SQL, move UNION to a subquery.\n699         return \"SELECT * FROM (%s)\" % \" UNION ALL \".join(query)\n700 \n",
                "col_offset": 15,
                "end_col_offset": 35,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\operations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 699,
                "line_range": [
                    699
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "54         self.execute(\n55             \"\"\"\n56             DECLARE\n57                 i INTEGER;\n58             BEGIN\n59                 SELECT COUNT(1) INTO i FROM USER_SEQUENCES\n60                     WHERE SEQUENCE_NAME = '%(sq_name)s';\n61                 IF i = 1 THEN\n62                     EXECUTE IMMEDIATE 'DROP SEQUENCE \"%(sq_name)s\"';\n63                 END IF;\n64             END;\n65         /\"\"\"\n66             % {\n67                 \"sq_name\": self.connection.ops._get_no_autofield_sequence_name(\n68                     model._meta.db_table\n69                 )\n70             }\n71         )\n",
                "col_offset": 12,
                "end_col_offset": 12,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\schema.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 55,
                "line_range": [
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "144         self.execute(\n145             \"UPDATE %s set %s=%s\"\n146             % (\n147                 self.quote_name(model._meta.db_table),\n148                 self.quote_name(new_temp_field.column),\n149                 new_value,\n150             )\n151         )\n",
                "col_offset": 12,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\django\\db\\backends\\oracle\\schema.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 145,
                "line_range": [
                    145,
                    146,
                    147,
                    148,
                    149,
                    150
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "112         cursor.execute(\n113             \"SELECT * FROM %s LIMIT 1\" % self.connection.ops.quote_name(table_name)\n114         )\n",
                "col_offset": 12,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\django\\db\\backends\\postgresql\\introspection.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 113,
                "line_range": [
                    113
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "393         if on_conflict == OnConflict.UPDATE:\n394             return \"ON CONFLICT(%s) DO UPDATE SET %s\" % (\n395                 \", \".join(map(self.quote_name, unique_fields)),\n396                 \", \".join(\n397                     [\n398                         f\"{field} = EXCLUDED.{field}\"\n399                         for field in map(self.quote_name, update_fields)\n400                     ]\n401                 ),\n402             )\n403         return super().on_conflict_suffix_sql(\n",
                "col_offset": 19,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\django\\db\\backends\\postgresql\\operations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 394,
                "line_range": [
                    394,
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401,
                    402
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "400         return None\n401     return md5(text.encode()).hexdigest()\n402 \n",
                "col_offset": 11,
                "end_col_offset": 29,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\_functions.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 401,
                "line_range": [
                    401
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "446         return None\n447     return sha1(text.encode()).hexdigest()\n448 \n",
                "col_offset": 11,
                "end_col_offset": 30,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\_functions.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 447,
                "line_range": [
                    447
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "295                 primary_key_value, bad_value = cursor.execute(\n296                     \"SELECT %s, %s FROM %s WHERE rowid = %%s\"\n297                     % (\n298                         self.ops.quote_name(primary_key_column_name),\n299                         self.ops.quote_name(column_name),\n300                         self.ops.quote_name(table_name),\n301                     ),\n302                     (rowid,),\n",
                "col_offset": 20,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\base.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 296,
                "line_range": [
                    296,
                    297,
                    298,
                    299,
                    300,
                    301
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "433             for index, token in enumerate(tokens):\n434                 if token == \"COLLATE\":\n435                     collation = tokens[index + 1]\n",
                "col_offset": 28,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\introspection.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'COLLATE'",
                "line_number": 434,
                "line_range": [
                    434
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "415         ):\n416             return \"ON CONFLICT(%s) DO UPDATE SET %s\" % (\n417                 \", \".join(map(self.quote_name, unique_fields)),\n418                 \", \".join(\n419                     [\n420                         f\"{field} = EXCLUDED.{field}\"\n421                         for field in map(self.quote_name, update_fields)\n422                     ]\n423                 ),\n424             )\n425         return super().on_conflict_suffix_sql(\n",
                "col_offset": 19,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\operations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 416,
                "line_range": [
                    416,
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "246         self.execute(\n247             \"INSERT INTO %s (%s) SELECT %s FROM %s\"\n248             % (\n249                 self.quote_name(new_model._meta.db_table),\n250                 \", \".join(self.quote_name(x) for x in mapping),\n251                 \", \".join(mapping.values()),\n252                 self.quote_name(model._meta.db_table),\n253             )\n254         )\n",
                "col_offset": 12,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\schema.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 247,
                "line_range": [
                    247,
                    248,
                    249,
                    250,
                    251,
                    252,
                    253
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "446         self.execute(\n447             \"INSERT INTO %s (%s) SELECT %s FROM %s\"\n448             % (\n449                 self.quote_name(new_field.remote_field.through._meta.db_table),\n450                 \", \".join(\n451                     [\n452                         \"id\",\n453                         new_field.m2m_column_name(),\n454                         new_field.m2m_reverse_name(),\n455                     ]\n456                 ),\n457                 \", \".join(\n458                     [\n459                         \"id\",\n460                         old_field.m2m_column_name(),\n461                         old_field.m2m_reverse_name(),\n462                     ]\n463                 ),\n464                 self.quote_name(old_field.remote_field.through._meta.db_table),\n465             )\n466         )\n",
                "col_offset": 12,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\db\\backends\\sqlite3\\schema.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 447,
                "line_range": [
                    447,
                    448,
                    449,
                    450,
                    451,
                    452,
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    459,
                    460,
                    461,
                    462,
                    463,
                    464,
                    465
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "308     \"\"\"\n309     h = md5(usedforsecurity=False)\n310     for arg in args:\n",
                "col_offset": 8,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\django\\db\\backends\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 309,
                "line_range": [
                    309
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "863             model_state = self.to_state.models[app_label, model_name]\n864             assert model_state.options.get(\"proxy\")\n865             # Depend on the deletion of any possible non-proxy version of us\n",
                "col_offset": 12,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\db\\migrations\\autodetector.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 864,
                "line_range": [
                    864
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "996             model_state = self.from_state.models[app_label, model_name]\n997             assert model_state.options.get(\"proxy\")\n998             self.add_operation(\n",
                "col_offset": 12,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\db\\migrations\\autodetector.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 997,
                "line_range": [
                    997
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "90     def add_node(self, key, migration):\n91         assert key not in self.node_map\n92         node = Node(key)\n",
                "col_offset": 8,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\django\\db\\migrations\\graph.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 91,
                "line_range": [
                    91
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "161                 try:\n162                     return eval(code, {}, {\"datetime\": datetime, \"timezone\": timezone})\n163                 except Exception as e:\n",
                "col_offset": 27,
                "end_col_offset": 87,
                "filename": "open_source_repos\\django\\django\\db\\migrations\\questioner.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
                "line_number": 162,
                "line_range": [
                    162
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b307-eval",
                "test_id": "B307",
                "test_name": "blacklist"
            },
            {
                "code": "105         else:\n106             assert isinstance(real_apps, set)\n107         self.real_apps = real_apps\n",
                "col_offset": 12,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\django\\db\\migrations\\state.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 106,
                "line_range": [
                    106
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "451             # alter_field().\n452             assert field_name not in relations_to_remote_model[model_key]\n453             relations_to_remote_model[model_key][field_name] = field\n",
                "col_offset": 12,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\django\\db\\migrations\\state.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 452,
                "line_range": [
                    452
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "971         using = using or router.db_for_write(self.__class__, instance=self)\n972         assert not (force_insert and (force_update or update_fields))\n973         assert update_fields is None or update_fields\n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\django\\db\\models\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 972,
                "line_range": [
                    972
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "972         assert not (force_insert and (force_update or update_fields))\n973         assert update_fields is None or update_fields\n974         cls = origin = self.__class__\n",
                "col_offset": 8,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\django\\db\\models\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 973,
                "line_range": [
                    973
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "207     def set_source_expressions(self, exprs):\n208         assert not exprs\n209 \n",
                "col_offset": 8,
                "end_col_offset": 24,
                "filename": "open_source_repos\\django\\django\\db\\models\\expressions.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 208,
                "line_range": [
                    208
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1360     def set_source_expressions(self, exprs):\n1361         assert all(isinstance(expr, Col) and expr.alias == self.alias for expr in exprs)\n1362         self.targets = [col.target for col in exprs]\n",
                "col_offset": 8,
                "end_col_offset": 88,
                "filename": "open_source_repos\\django\\django\\db\\models\\expressions.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1361,
                "line_range": [
                    1361
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1399         else:\n1400             assert isinstance(value, datetime.date)\n1401             lower = lower.date()\n",
                "col_offset": 12,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\db\\models\\fields\\__init__.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1400,
                "line_range": [
                    1400
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1486         else:\n1487             assert from_model is not None, (\n1488                 \"ManyToManyField with intermediate \"\n1489                 \"tables cannot be checked if you don't pass the model \"\n1490                 \"where the field is attached to.\"\n1491             )\n1492             # Set some useful local variables\n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\db\\models\\fields\\related.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1487,
                "line_range": [
                    1487,
                    1488,
                    1489,
                    1490,
                    1491
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1619             else:\n1620                 assert from_model is not None, (\n1621                     \"ManyToManyField with intermediate \"\n1622                     \"tables cannot be checked if you don't pass the model \"\n1623                     \"where the field is attached to.\"\n1624                 )\n1625 \n",
                "col_offset": 16,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\db\\models\\fields\\related.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1620,
                "line_range": [
                    1620,
                    1621,
                    1622,
                    1623,
                    1624
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1182             qn = connection.ops.quote_name\n1183             queryset = queryset.extra(\n1184                 select={\n1185                     \"_prefetch_related_val_%s\"\n1186                     % f.attname: \"%s.%s\"\n1187                     % (qn(join_table), qn(f.column))\n1188                     for f in fk.local_related_fields\n1189                 }\n1190             )\n1191             return (\n",
                "col_offset": 23,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\db\\models\\fields\\related_descriptors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 1183,
                "line_range": [
                    1183,
                    1184,
                    1185,
                    1186,
                    1187,
                    1188,
                    1189,
                    1190
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "81             # assert should never be hit.\n82             assert False, \"Tried to Extract from an invalid type.\"\n83         return sql, params\n",
                "col_offset": 12,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\db\\models\\functions\\datetime.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 82,
                "line_range": [
                    82
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "270             template=(\n271                 \"(SELECT LISTAGG(s) WITHIN GROUP (ORDER BY n DESC) FROM \"\n272                 f\"(SELECT LEVEL n, SUBSTR(%(expressions)s, LEVEL, 1) s{suffix} \"\n273                 \"CONNECT BY LEVEL <= LENGTH(%(expressions)s)) \"\n274                 \"GROUP BY %(expressions)s)\"\n275             ),\n",
                "col_offset": 16,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\db\\models\\functions\\text.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 271,
                "line_range": [
                    271,
                    272,
                    273,
                    274
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "832                 ):\n833                     assert len(returned_columns) == len(objs_without_pk)\n834                 for obj_without_pk, results in zip(objs_without_pk, returned_columns):\n",
                "col_offset": 20,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\django\\db\\models\\query.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 833,
                "line_range": [
                    833
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "249         annotations = {}\n250         assert not (self.query.select and self.query.default_cols)\n251         select_mask = self.query.get_select_mask()\n",
                "col_offset": 8,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 250,
                "line_range": [
                    250
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "271                 *(\n272                     (alias, RawSQL(*args))\n273                     for alias, args in self.query.extra_select.items()\n",
                "col_offset": 28,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 272,
                "line_range": [
                    272
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "436                     OrderBy(\n437                         RawSQL(\n438                             \"%s.%s\" % (self.quote_name_unless_alias(table), col), []\n439                         ),\n440                         descending=descending,\n",
                "col_offset": 24,
                "end_col_offset": 25,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 437,
                "line_range": [
                    437,
                    438,
                    439
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "449                         OrderBy(\n450                             Ref(col, RawSQL(*self.query.extra[col])),\n451                             descending=descending,\n",
                "col_offset": 37,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 450,
                "line_range": [
                    450
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "456                     yield (\n457                         OrderBy(RawSQL(*self.query.extra[col]), descending=descending),\n458                         False,\n",
                "col_offset": 32,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 457,
                "line_range": [
                    457
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "641             if not features.supports_parentheses_in_compound:\n642                 part_sql = \"SELECT * FROM ({})\".format(part_sql)\n643             # Add parentheses when combining with compound query if not\n",
                "col_offset": 27,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 642,
                "line_range": [
                    642
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "966                         sub_params.extend(subparams)\n967                 return \"SELECT %s FROM (%s) subquery\" % (\n968                     \", \".join(sub_selects),\n969                     \" \".join(result),\n970                 ), tuple(sub_params + params)\n971 \n",
                "col_offset": 23,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 967,
                "line_range": [
                    967,
                    968,
                    969,
                    970
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "1628             rhs = \"%s.%s\" % (qn(alias), qn2(columns[index]))\n1629             query.where.add(RawSQL(\"%s = %s\" % (lhs_sql, rhs), lhs_params), AND)\n1630 \n",
                "col_offset": 28,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 1629,
                "line_range": [
                    1629
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "1837     def execute_sql(self, returning_fields=None):\n1838         assert not (\n1839             returning_fields\n1840             and len(self.query.objs) != 1\n1841             and not self.connection.features.can_return_rows_from_bulk_insert\n1842         )\n1843         opts = self.query.get_meta()\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1838,
                "line_range": [
                    1838,
                    1839,
                    1840,
                    1841,
                    1842
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1857             elif self.connection.features.can_return_columns_from_insert:\n1858                 assert len(self.query.objs) == 1\n1859                 rows = [\n",
                "col_offset": 16,
                "end_col_offset": 48,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1858,
                "line_range": [
                    1858
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1910     def _as_sql(self, query):\n1911         delete = \"DELETE FROM %s\" % self.quote_name_unless_alias(query.base_table)\n1912         try:\n",
                "col_offset": 17,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 1911,
                "line_range": [
                    1911
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "1937             sql, params = innerq.get_compiler(connection=self.connection).as_sql()\n1938             innerq = RawSQL(\"SELECT * FROM (%s) subquery\" % sql, params)\n1939         outerq.add_filter(\"pk__in\", innerq)\n",
                "col_offset": 21,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 1938,
                "line_range": [
                    1938
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "1937             sql, params = innerq.get_compiler(connection=self.connection).as_sql()\n1938             innerq = RawSQL(\"SELECT * FROM (%s) subquery\" % sql, params)\n1939         outerq.add_filter(\"pk__in\", innerq)\n",
                "col_offset": 28,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 1938,
                "line_range": [
                    1938
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "2112         ).as_sql(with_col_aliases=True)\n2113         sql = \"SELECT %s FROM (%s) subquery\" % (sql, inner_query_sql)\n2114         params += inner_query_params\n",
                "col_offset": 14,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\compiler.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 2113,
                "line_range": [
                    2113
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "937             # Only the first alias (skipped above) should have None join_type\n938             assert self.alias_map[alias].join_type is not None\n939             parent_alias = self.alias_map[alias].parent_alias\n",
                "col_offset": 12,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\query.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 938,
                "line_range": [
                    938
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "993         # on their order in change_map.\n994         assert set(change_map).isdisjoint(change_map.values())\n995 \n",
                "col_offset": 8,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\query.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 994,
                "line_range": [
                    994
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "2497                         extra_names.append(f)\n2498                         selected[f] = RawSQL(*extra)\n2499                     elif f in self.annotation_select:\n",
                "col_offset": 38,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\query.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 2498,
                "line_range": [
                    2498
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "199     def set_source_expressions(self, children):\n200         assert len(children) == len(self.children)\n201         self.children = children\n",
                "col_offset": 8,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\django\\db\\models\\sql\\where.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 200,
                "line_range": [
                    200
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "18             model_tuple = model._meta.app_label, model._meta.model_name\n19         assert len(model_tuple) == 2\n20         return model_tuple\n",
                "col_offset": 8,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\db\\models\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "54         context = context or self.get_context()\n55         return mark_safe(renderer.render(template, context))\n56 \n",
                "col_offset": 15,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\django\\forms\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 55,
                "line_range": [
                    55
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "54         context = context or self.get_context()\n55         return mark_safe(renderer.render(template, context))\n56 \n",
                "col_offset": 15,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\django\\forms\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 55,
                "line_range": [
                    55
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "96     def render(self):\n97         return mark_safe(\n98             \"\\n\".join(\n99                 chain.from_iterable(\n100                     getattr(self, \"render_\" + name)() for name in MEDIA_TYPES\n101                 )\n102             )\n103         )\n104 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\forms\\widgets.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 97,
                "line_range": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "96     def render(self):\n97         return mark_safe(\n98             \"\\n\".join(\n99                 chain.from_iterable(\n100                     getattr(self, \"render_\" + name)() for name in MEDIA_TYPES\n101                 )\n102             )\n103         )\n104 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\forms\\widgets.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 97,
                "line_range": [
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "286             renderer = get_default_renderer()\n287         return mark_safe(renderer.render(template_name, context))\n288 \n",
                "col_offset": 15,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\django\\forms\\widgets.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 287,
                "line_range": [
                    287
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "286             renderer = get_default_renderer()\n287         return mark_safe(renderer.render(template_name, context))\n288 \n",
                "col_offset": 15,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\django\\forms\\widgets.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 287,
                "line_range": [
                    287
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "454             while remaining != 0:\n455                 assert remaining > 0, \"remaining bytes to read should never go negative\"\n456 \n",
                "col_offset": 16,
                "end_col_offset": 88,
                "filename": "open_source_repos\\django\\django\\http\\multipartparser.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 455,
                "line_range": [
                    455
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "330                 closer()\n331             except Exception:\n332                 pass\n333         # Free resources that were still referenced.\n",
                "col_offset": 12,
                "end_col_offset": 20,
                "filename": "open_source_repos\\django\\django\\http\\response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 331,
                "line_range": [
                    331,
                    332
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "405                     value.close()\n406                 except Exception:\n407                     pass\n408         else:\n",
                "col_offset": 16,
                "end_col_offset": 24,
                "filename": "open_source_repos\\django\\django\\http\\response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 406,
                "line_range": [
                    406,
                    407
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "32 REASON_NO_CSRF_COOKIE = \"CSRF cookie not set.\"\n33 REASON_CSRF_TOKEN_MISSING = \"CSRF token missing.\"\n34 REASON_MALFORMED_REFERER = \"Referer checking failed - Referer is malformed.\"\n",
                "col_offset": 28,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\django\\middleware\\csrf.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'CSRF token missing.'",
                "line_number": 33,
                "line_range": [
                    33
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "155         request_csrf_token = _unmask_cipher_token(request_csrf_token)\n156     assert len(request_csrf_token) == CSRF_SECRET_LENGTH\n157     return constant_time_compare(request_csrf_token, csrf_secret)\n",
                "col_offset": 4,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\django\\middleware\\csrf.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 156,
                "line_range": [
                    156
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "342     def _bad_token_message(self, reason, token_source):\n343         if token_source != \"POST\":\n344             # Assume it is a settings.CSRF_HEADER_NAME value.\n",
                "col_offset": 27,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\django\\middleware\\csrf.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'POST'",
                "line_number": 343,
                "line_range": [
                    343
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "364         # Check non-cookie token for match.\n365         request_csrf_token = \"\"\n366         if request.method == \"POST\":\n",
                "col_offset": 29,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\django\\middleware\\csrf.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 365,
                "line_range": [
                    365
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "375 \n376         if request_csrf_token == \"\":\n377             # Fall back to X-CSRFToken, to make things easier for AJAX, and\n",
                "col_offset": 33,
                "end_col_offset": 35,
                "filename": "open_source_repos\\django\\django\\middleware\\csrf.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 376,
                "line_range": [
                    376
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "388         else:\n389             token_source = \"POST\"\n390 \n",
                "col_offset": 27,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\django\\middleware\\csrf.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'POST'",
                "line_number": 389,
                "line_range": [
                    389
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "395                 # BLOCK_TAG_START was handled above.\n396                 assert token_start == COMMENT_TAG_START\n397                 return Token(TokenType.COMMENT, content, position, lineno)\n",
                "col_offset": 16,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 396,
                "line_range": [
                    396
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "740                 if not lookup:\n741                     arg_vals.append(mark_safe(arg))\n742                 else:\n",
                "col_offset": 36,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 741,
                "line_range": [
                    741
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "740                 if not lookup:\n741                     arg_vals.append(mark_safe(arg))\n742                 else:\n",
                "col_offset": 36,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 741,
                "line_range": [
                    741
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "750             if getattr(func, \"is_safe\", False) and isinstance(obj, SafeData):\n751                 obj = mark_safe(new_obj)\n752             else:\n",
                "col_offset": 22,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 751,
                "line_range": [
                    751
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "750             if getattr(func, \"is_safe\", False) and isinstance(obj, SafeData):\n751                 obj = mark_safe(new_obj)\n752             else:\n",
                "col_offset": 22,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 751,
                "line_range": [
                    751
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "838             try:\n839                 self.literal = mark_safe(unescape_string_literal(var))\n840             except ValueError:\n",
                "col_offset": 31,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 839,
                "line_range": [
                    839
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "838             try:\n839                 self.literal = mark_safe(unescape_string_literal(var))\n840             except ValueError:\n",
                "col_offset": 31,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 839,
                "line_range": [
                    839
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "860             msgid = value.replace(\"%\", \"%%\")\n861             msgid = mark_safe(msgid) if is_safe else msgid\n862             if self.message_context:\n",
                "col_offset": 20,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 861,
                "line_range": [
                    861
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "860             msgid = value.replace(\"%\", \"%%\")\n861             msgid = mark_safe(msgid) if is_safe else msgid\n862             if self.message_context:\n",
                "col_offset": 20,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 861,
                "line_range": [
                    861
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "1015     def render(self, context):\n1016         return SafeString(\"\".join([node.render_annotated(context) for node in self]))\n1017 \n",
                "col_offset": 15,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\django\\template\\base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 1016,
                "line_range": [
                    1016
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "48         if isinstance(first, SafeData) and getattr(unwrap(func), \"is_safe\", False):\n49             result = mark_safe(result)\n50         return result\n",
                "col_offset": 21,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 49,
                "line_range": [
                    49
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "48         if isinstance(first, SafeData) and getattr(unwrap(func), \"is_safe\", False):\n49             result = mark_safe(result)\n50         return result\n",
                "col_offset": 21,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 49,
                "line_range": [
                    49
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "183     if not m and p <= 0:\n184         return mark_safe(\n185             formats.number_format(\n186                 \"%d\" % (int(d)),\n187                 0,\n188                 use_l10n=use_l10n,\n189                 force_grouping=force_grouping,\n190             )\n191         )\n192 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 184,
                "line_range": [
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "183     if not m and p <= 0:\n184         return mark_safe(\n185             formats.number_format(\n186                 \"%d\" % (int(d)),\n187                 0,\n188                 use_l10n=use_l10n,\n189                 force_grouping=force_grouping,\n190             )\n191         )\n192 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 184,
                "line_range": [
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "211     number = \"\".join(reversed(digits))\n212     return mark_safe(\n213         formats.number_format(\n214             number,\n215             abs(p),\n216             use_l10n=use_l10n,\n217             force_grouping=force_grouping,\n218         )\n219     )\n220 \n",
                "col_offset": 11,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 212,
                "line_range": [
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "211     number = \"\".join(reversed(digits))\n212     return mark_safe(\n213         formats.number_format(\n214             number,\n215             abs(p),\n216             use_l10n=use_l10n,\n217             force_grouping=force_grouping,\n218         )\n219     )\n220 \n",
                "col_offset": 11,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 212,
                "line_range": [
                    212,
                    213,
                    214,
                    215,
                    216,
                    217,
                    218,
                    219
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "242             lines[i] = (\"%0\" + width + \"d. %s\") % (i + 1, escape(line))\n243     return mark_safe(\"\\n\".join(lines))\n244 \n",
                "col_offset": 11,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 243,
                "line_range": [
                    243
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "242             lines[i] = (\"%0\" + width + \"d. %s\") % (i + 1, escape(line))\n243     return mark_safe(\"\\n\".join(lines))\n244 \n",
                "col_offset": 11,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 243,
                "line_range": [
                    243
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "383     \"\"\"Convert URLs in plain text into clickable links.\"\"\"\n384     return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))\n385 \n",
                "col_offset": 11,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 384,
                "line_range": [
                    384
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "383     \"\"\"Convert URLs in plain text into clickable links.\"\"\"\n384     return mark_safe(_urlize(value, nofollow=True, autoescape=autoescape))\n385 \n",
                "col_offset": 11,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 384,
                "line_range": [
                    384
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "395     \"\"\"\n396     return mark_safe(\n397         _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)\n398     )\n399 \n",
                "col_offset": 11,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 396,
                "line_range": [
                    396,
                    397,
                    398
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "395     \"\"\"\n396     return mark_safe(\n397         _urlize(value, trim_url_limit=int(limit), nofollow=True, autoescape=autoescape)\n398     )\n399 \n",
                "col_offset": 11,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 396,
                "line_range": [
                    396,
                    397,
                    398
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "442     if safe and arg != \";\":\n443         return mark_safe(value)\n444     return value\n",
                "col_offset": 15,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 443,
                "line_range": [
                    443
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "442     if safe and arg != \";\":\n443         return mark_safe(value)\n444     return value\n",
                "col_offset": 15,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 443,
                "line_range": [
                    443
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "488     autoescape = autoescape and not isinstance(value, SafeData)\n489     return mark_safe(linebreaks(value, autoescape))\n490 \n",
                "col_offset": 11,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 489,
                "line_range": [
                    489
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "488     autoescape = autoescape and not isinstance(value, SafeData)\n489     return mark_safe(linebreaks(value, autoescape))\n490 \n",
                "col_offset": 11,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 489,
                "line_range": [
                    489
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "502         value = escape(value)\n503     return mark_safe(value.replace(\"\\n\", \"<br>\"))\n504 \n",
                "col_offset": 11,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 503,
                "line_range": [
                    503
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "502         value = escape(value)\n503     return mark_safe(value.replace(\"\\n\", \"<br>\"))\n504 \n",
                "col_offset": 11,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 503,
                "line_range": [
                    503
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "509     \"\"\"Mark the value as a string that should not be auto-escaped.\"\"\"\n510     return mark_safe(value)\n511 \n",
                "col_offset": 11,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 510,
                "line_range": [
                    510
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "509     \"\"\"Mark the value as a string that should not be auto-escaped.\"\"\"\n510     return mark_safe(value)\n511 \n",
                "col_offset": 11,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 510,
                "line_range": [
                    510
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "519     \"\"\"\n520     return [mark_safe(obj) for obj in value]\n521 \n",
                "col_offset": 12,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 520,
                "line_range": [
                    520
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "519     \"\"\"\n520     return [mark_safe(obj) for obj in value]\n521 \n",
                "col_offset": 12,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 520,
                "line_range": [
                    520
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "615         return value\n616     return mark_safe(data)\n617 \n",
                "col_offset": 11,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 616,
                "line_range": [
                    616
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "615         return value\n616     return mark_safe(data)\n617 \n",
                "col_offset": 11,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 616,
                "line_range": [
                    616
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "640     try:\n641         return random_module.choice(value)\n642     except IndexError:\n",
                "col_offset": 15,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 641,
                "line_range": [
                    641
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "731 \n732     return mark_safe(list_formatter(value))\n733 \n",
                "col_offset": 11,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 732,
                "line_range": [
                    732
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "731 \n732     return mark_safe(list_formatter(value))\n733 \n",
                "col_offset": 11,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\template\\defaultfilters.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 732,
                "line_range": [
                    732
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "57         if self.setting:\n58             return mark_safe(output)\n59         else:\n",
                "col_offset": 19,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\template\\defaulttags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 58,
                "line_range": [
                    58
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "57         if self.setting:\n58             return mark_safe(output)\n59         else:\n",
                "col_offset": 19,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\template\\defaulttags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 58,
                "line_range": [
                    58
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "75         if csrf_token:\n76             if csrf_token == \"NOTPROVIDED\":\n77                 return format_html(\"\")\n",
                "col_offset": 29,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\template\\defaulttags.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'NOTPROVIDED'",
                "line_number": 76,
                "line_range": [
                    76
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "249                     context.pop()\n250         return mark_safe(\"\".join(nodelist))\n251 \n",
                "col_offset": 15,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\template\\defaulttags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 250,
                "line_range": [
                    250
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "249                     context.pop()\n250         return mark_safe(\"\".join(nodelist))\n251 \n",
                "col_offset": 15,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\template\\defaulttags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 250,
                "line_range": [
                    250
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "80         ):\n81             return mark_safe(self.render(self.context))\n82         return \"\"\n",
                "col_offset": 19,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\template\\loader_tags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 81,
                "line_range": [
                    81
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "80         ):\n81             return mark_safe(self.render(self.context))\n82         return \"\"\n",
                "col_offset": 19,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\template\\loader_tags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 81,
                "line_range": [
                    81
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "95     def generate_hash(self, values):\n96         return hashlib.sha1(\"|\".join(values).encode()).hexdigest()\n97 \n",
                "col_offset": 15,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\django\\template\\loaders\\cached.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 96,
                "line_range": [
                    96
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "164             token = tokens[i]\n165             if token == \"is\" and i + 1 < num_tokens and tokens[i + 1] == \"not\":\n166                 token = \"is not\"\n",
                "col_offset": 24,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\django\\template\\smartif.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'is'",
                "line_number": 165,
                "line_range": [
                    165
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "165             if token == \"is\" and i + 1 < num_tokens and tokens[i + 1] == \"not\":\n166                 token = \"is not\"\n167                 i += 1  # skip 'not'\n",
                "col_offset": 24,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\template\\smartif.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'is not'",
                "line_number": 166,
                "line_range": [
                    166
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "167                 i += 1  # skip 'not'\n168             elif token == \"not\" and i + 1 < num_tokens and tokens[i + 1] == \"in\":\n169                 token = \"not in\"\n",
                "col_offset": 26,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\django\\template\\smartif.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'not'",
                "line_number": 168,
                "line_range": [
                    168
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "168             elif token == \"not\" and i + 1 < num_tokens and tokens[i + 1] == \"in\":\n169                 token = \"not in\"\n170                 i += 1  # skip 'in'\n",
                "col_offset": 24,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\template\\smartif.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'not in'",
                "line_number": 169,
                "line_range": [
                    169
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "95         value = value.replace(\"%%\", \"%\")\n96         value = mark_safe(value) if is_safe else value\n97         if self.asvar:\n",
                "col_offset": 16,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\templatetags\\i18n.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 96,
                "line_range": [
                    96
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "95         value = value.replace(\"%%\", \"%\")\n96         value = mark_safe(value) if is_safe else value\n97         if self.asvar:\n",
                "col_offset": 16,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\templatetags\\i18n.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 96,
                "line_range": [
                    96
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "200         if self.asvar:\n201             context[self.asvar] = SafeString(result)\n202             return \"\"\n",
                "col_offset": 34,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\django\\templatetags\\i18n.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 201,
                "line_range": [
                    201
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "91             size = self.__len\n92         assert (\n93             self.__len >= size\n94         ), \"Cannot read more than the available bytes from the HTTP incoming data.\"\n95         content = self.__content.read(size)\n",
                "col_offset": 8,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\django\\test\\client.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 92,
                "line_range": [
                    92,
                    93,
                    94
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "104             size = self.__len\n105         assert (\n106             self.__len >= size\n107         ), \"Cannot read more than the available bytes from the HTTP incoming data.\"\n108         content = self.__content.readline(size)\n",
                "col_offset": 8,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\django\\test\\client.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 105,
                "line_range": [
                    105,
                    106,
                    107
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "9 import os\n10 import pickle\n11 import random\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\test\\runner.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 10,
                "line_range": [
                    10
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "185         \"\"\"\n186         pickle.loads(pickle.dumps(obj))\n187 \n",
                "col_offset": 8,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\django\\test\\runner.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 186,
                "line_range": [
                    186
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "621             # Limit seeds to 10 digits for simpler output.\n622             seed = random.randint(0, 10**10 - 1)\n623             seed_source = \"generated\"\n",
                "col_offset": 19,
                "end_col_offset": 48,
                "filename": "open_source_repos\\django\\django\\test\\runner.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 622,
                "line_range": [
                    622
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "904             if os.path.exists(label_as_path):\n905                 assert tests is None\n906                 raise RuntimeError(\n",
                "col_offset": 16,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\test\\runner.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 905,
                "line_range": [
                    905
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "3 import logging\n4 import pickle\n5 import posixpath\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\django\\test\\testcases.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 4,
                "line_range": [
                    4
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "104     try:\n105         pickle.loads(pickle.dumps(obj))\n106     except (AttributeError, TypeError, pickle.PickleError):\n",
                "col_offset": 8,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\django\\test\\testcases.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 105,
                "line_range": [
                    105
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "14 from unittest import TestCase, skipIf, skipUnless\n15 from xml.dom.minidom import Node, parseString\n16 \n",
                "col_offset": 0,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\django\\test\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using Node to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Node with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 15,
                "line_range": [
                    15
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "551             # Hack used when instantiating from SimpleTestCase.setUpClass.\n552             assert not kwargs\n553             self.operations = args[0]\n",
                "col_offset": 12,
                "end_col_offset": 29,
                "filename": "open_source_repos\\django\\django\\test\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 552,
                "line_range": [
                    552
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "554         else:\n555             assert not args\n556             self.operations = list(kwargs.items())\n",
                "col_offset": 12,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\django\\test\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 555,
                "line_range": [
                    555
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "686     # Parse the want and got strings, and compare the parsings.\n687     want_root = first_node(parseString(want))\n688     got_root = first_node(parseString(got))\n",
                "col_offset": 27,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\django\\test\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 687,
                "line_range": [
                    687
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "687     want_root = first_node(parseString(want))\n688     got_root = first_node(parseString(got))\n689 \n",
                "col_offset": 26,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\test\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 688,
                "line_range": [
                    688
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "13 from importlib import import_module\n14 from pickle import PicklingError\n15 from urllib.parse import quote\n",
                "col_offset": 0,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\urls\\resolvers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with PicklingError module.",
                "line_number": 14,
                "line_range": [
                    14
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "4 import signal\n5 import subprocess\n6 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\utils\\autoreload.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 5,
                "line_range": [
                    5
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "273     while True:\n274         p = subprocess.run(args, env=new_environ, close_fds=False)\n275         if p.returncode != 3:\n",
                "col_offset": 12,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\utils\\autoreload.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 274,
                "line_range": [
                    274
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "337             get_resolver().urlconf_module\n338         except Exception:\n339             # Loading the urlconf can result in errors during development.\n340             # If this occurs then swallow the error and continue.\n341             pass\n342         logger.debug(\"Apps ready_event triggered. Sending autoreload_started signal.\")\n",
                "col_offset": 8,
                "end_col_offset": 16,
                "filename": "open_source_repos\\django\\django\\utils\\autoreload.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 338,
                "line_range": [
                    338,
                    339,
                    340,
                    341
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "121         response.headers[\"ETag\"] = quote_etag(\n122             md5(response.content, usedforsecurity=False).hexdigest(),\n123         )\n",
                "col_offset": 12,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\django\\utils\\cache.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 122,
                "line_range": [
                    122
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "351     \"\"\"Return a cache key from the headers given in the header list.\"\"\"\n352     ctx = md5(usedforsecurity=False)\n353     for header in headerlist:\n",
                "col_offset": 10,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\django\\utils\\cache.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 352,
                "line_range": [
                    352
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "356             ctx.update(value.encode())\n357     url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n358     cache_key = \"views.decorators.cache.cache_page.%s.%s.%s.%s\" % (\n",
                "col_offset": 10,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\django\\utils\\cache.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 357,
                "line_range": [
                    357
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "368     \"\"\"Return a cache key for the header cache.\"\"\"\n369     url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n370     cache_key = \"views.decorators.cache.cache_header.%s.%s\" % (\n",
                "col_offset": 10,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\django\\utils\\cache.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 369,
                "line_range": [
                    369
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "54     \"\"\"\n55     return SafeString(html.escape(str(text)))\n56 \n",
                "col_offset": 11,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 55,
                "line_range": [
                    55
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "79     \"\"\"Hex encode characters for use in JavaScript strings.\"\"\"\n80     return mark_safe(str(value).translate(_js_escapes))\n81 \n",
                "col_offset": 11,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 80,
                "line_range": [
                    80
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "79     \"\"\"Hex encode characters for use in JavaScript strings.\"\"\"\n80     return mark_safe(str(value).translate(_js_escapes))\n81 \n",
                "col_offset": 11,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 80,
                "line_range": [
                    80
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "102         template = '<script id=\"{}\" type=\"application/json\">{}</script>'\n103         args = (element_id, mark_safe(json_str))\n104     else:\n",
                "col_offset": 28,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 103,
                "line_range": [
                    103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "102         template = '<script id=\"{}\" type=\"application/json\">{}</script>'\n103         args = (element_id, mark_safe(json_str))\n104     else:\n",
                "col_offset": 28,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 103,
                "line_range": [
                    103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "105         template = '<script type=\"application/json\">{}</script>'\n106         args = (mark_safe(json_str),)\n107     return format_html(template, *args)\n",
                "col_offset": 16,
                "end_col_offset": 35,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 106,
                "line_range": [
                    106
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "105         template = '<script type=\"application/json\">{}</script>'\n106         args = (mark_safe(json_str),)\n107     return format_html(template, *args)\n",
                "col_offset": 16,
                "end_col_offset": 35,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 106,
                "line_range": [
                    106
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "140     kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}\n141     return mark_safe(format_string.format(*args_safe, **kwargs_safe))\n142 \n",
                "col_offset": 11,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 141,
                "line_range": [
                    141
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "140     kwargs_safe = {k: conditional_escape(v) for (k, v) in kwargs.items()}\n141     return mark_safe(format_string.format(*args_safe, **kwargs_safe))\n142 \n",
                "col_offset": 11,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 141,
                "line_range": [
                    141
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "157     \"\"\"\n158     return mark_safe(\n159         conditional_escape(sep).join(\n160             (\n161                 format_html(format_string, **args)\n162                 if isinstance(args, Mapping)\n163                 else format_html(format_string, *args)\n164             )\n165             for args in args_generator\n166         )\n167     )\n168 \n",
                "col_offset": 11,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 158,
                "line_range": [
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "157     \"\"\"\n158     return mark_safe(\n159         conditional_escape(sep).join(\n160             (\n161                 format_html(format_string, **args)\n162                 if isinstance(args, Mapping)\n163                 else format_html(format_string, *args)\n164             )\n165             for args in args_generator\n166         )\n167     )\n168 \n",
                "col_offset": 11,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 158,
                "line_range": [
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "366                 )\n367                 return mark_safe(f\"{lead}{middle}{trail}\")\n368             else:\n",
                "col_offset": 23,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 367,
                "line_range": [
                    367
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "366                 )\n367                 return mark_safe(f\"{lead}{middle}{trail}\")\n368             else:\n",
                "col_offset": 23,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 367,
                "line_range": [
                    367
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "369                 if safe_input:\n370                     return mark_safe(word)\n371                 elif autoescape:\n",
                "col_offset": 27,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 370,
                "line_range": [
                    370
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "369                 if safe_input:\n370                     return mark_safe(word)\n371                 elif autoescape:\n",
                "col_offset": 27,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 370,
                "line_range": [
                    370
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "373         elif safe_input:\n374             return mark_safe(word)\n375         elif autoescape:\n",
                "col_offset": 19,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 374,
                "line_range": [
                    374
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "373         elif safe_input:\n374             return mark_safe(word)\n375         elif autoescape:\n",
                "col_offset": 19,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 374,
                "line_range": [
                    374
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "507     klass_str = klass.__str__\n508     klass.__str__ = lambda self: mark_safe(klass_str(self))\n509     klass.__html__ = lambda self: str(self)\n",
                "col_offset": 33,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 508,
                "line_range": [
                    508
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "507     klass_str = klass.__str__\n508     klass.__str__ = lambda self: mark_safe(klass_str(self))\n509     klass.__html__ = lambda self: str(self)\n",
                "col_offset": 33,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\django\\utils\\html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 508,
                "line_range": [
                    508
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "142         return parse_http_date(date)\n143     except Exception:\n144         pass\n145 \n",
                "col_offset": 4,
                "end_col_offset": 12,
                "filename": "open_source_repos\\django\\django\\utils\\http.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 143,
                "line_range": [
                    143,
                    144
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "234     sections = [\n235         \" \".join(random.sample(WORDS, random.randint(3, 12)))\n236         for i in range(random.randint(1, 5))\n",
                "col_offset": 38,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\django\\utils\\lorem_ipsum.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 235,
                "line_range": [
                    235
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "235         \" \".join(random.sample(WORDS, random.randint(3, 12)))\n236         for i in range(random.randint(1, 5))\n237     ]\n",
                "col_offset": 23,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\django\\utils\\lorem_ipsum.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 236,
                "line_range": [
                    236
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "239     # Convert to sentence case and add end punctuation.\n240     return \"%s%s%s\" % (s[0].upper(), s[1:], random.choice(\"?.\"))\n241 \n",
                "col_offset": 44,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\django\\utils\\lorem_ipsum.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 240,
                "line_range": [
                    240
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "248     \"\"\"\n249     return \" \".join(sentence() for i in range(random.randint(1, 4)))\n250 \n",
                "col_offset": 46,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\django\\utils\\lorem_ipsum.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 249,
                "line_range": [
                    249
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "28     if number is None or number == \"\":\n29         return mark_safe(number)\n30     if use_l10n is None:\n",
                "col_offset": 15,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\numberformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 29,
                "line_range": [
                    29
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "28     if number is None or number == \"\":\n29         return mark_safe(number)\n30     if use_l10n is None:\n",
                "col_offset": 15,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\numberformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 29,
                "line_range": [
                    29
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "36     if isinstance(number, int) and not use_grouping and not decimal_pos:\n37         return mark_safe(number)\n38     # sign\n",
                "col_offset": 15,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\numberformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 37,
                "line_range": [
                    37
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "36     if isinstance(number, int) and not use_grouping and not decimal_pos:\n37         return mark_safe(number)\n38     # sign\n",
                "col_offset": 15,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\numberformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 37,
                "line_range": [
                    37
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "350         else:\n351             assert not flags, \"flags must be empty if regex is passed pre-compiled\"\n352             return regex\n",
                "col_offset": 12,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\django\\utils\\regex_helper.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 351,
                "line_range": [
                    351
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "388     if isinstance(message, SafeData):\n389         return mark_safe(result)\n390 \n",
                "col_offset": 15,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\translation\\trans_real.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 389,
                "line_range": [
                    389
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "388     if isinstance(message, SafeData):\n389         return mark_safe(result)\n390 \n",
                "col_offset": 15,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\translation\\trans_real.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 389,
                "line_range": [
                    389
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "400     elif isinstance(message, SafeData):\n401         result = mark_safe(result)\n402     return result\n",
                "col_offset": 17,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\django\\utils\\translation\\trans_real.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 401,
                "line_range": [
                    401
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "400     elif isinstance(message, SafeData):\n401         result = mark_safe(result)\n402     return result\n",
                "col_offset": 17,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\django\\utils\\translation\\trans_real.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 401,
                "line_range": [
                    401
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "3 import os\n4 import subprocess\n5 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\django\\utils\\version.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 4,
                "line_range": [
                    4
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "63     else:\n64         assert len(version) == 5\n65         assert version[3] in (\"alpha\", \"beta\", \"rc\", \"final\")\n",
                "col_offset": 8,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\django\\utils\\version.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 64,
                "line_range": [
                    64
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "64         assert len(version) == 5\n65         assert version[3] in (\"alpha\", \"beta\", \"rc\", \"final\")\n66 \n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\django\\utils\\version.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 65,
                "line_range": [
                    65
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "90     repo_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n91     git_log = subprocess.run(\n92         \"git log --pretty=format:%ct --quiet -1 HEAD\",\n93         capture_output=True,\n94         shell=True,\n95         cwd=repo_dir,\n96         text=True,\n97     )\n98     timestamp = git_log.stdout\n",
                "col_offset": 14,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\utils\\version.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Starting a process with a partial executable path",
                "line_number": 91,
                "line_range": [
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html",
                "test_id": "B607",
                "test_name": "start_process_with_partial_path"
            },
            {
                "code": "93         capture_output=True,\n94         shell=True,\n95         cwd=repo_dir,\n96         text=True,\n97     )\n98     timestamp = git_log.stdout\n99     tz = datetime.timezone.utc\n100     try:\n101         timestamp = datetime.datetime.fromtimestamp(int(timestamp), tz=tz)\n",
                "col_offset": 14,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\django\\utils\\version.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell",
                "line_number": 94,
                "line_range": [
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b602_subprocess_popen_with_shell_equals_true.html",
                "test_id": "B602",
                "test_name": "subprocess_popen_with_shell_equals_true"
            },
            {
                "code": "5 import re\n6 from xml.sax.saxutils import XMLGenerator\n7 \n",
                "col_offset": 0,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\django\\utils\\xmlutils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using XMLGenerator to parse untrusted XML data is known to be vulnerable to XML attacks. Replace XMLGenerator with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 6,
                "line_range": [
                    6
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b406-import-xml-sax",
                "test_id": "B406",
                "test_name": "blacklist"
            },
            {
                "code": "319                     changed = True\n320                 elif token == \"make\":\n321                     token = \"make.bat\"\n",
                "col_offset": 30,
                "end_col_offset": 36,
                "filename": "open_source_repos\\django\\docs\\_ext\\djangodocs.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'make'",
                "line_number": 320,
                "line_range": [
                    320
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "320                 elif token == \"make\":\n321                     token = \"make.bat\"\n322                     changed = True\n",
                "col_offset": 28,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\docs\\_ext\\djangodocs.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'make.bat'",
                "line_number": 321,
                "line_range": [
                    321
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "25 from datetime import datetime\n26 from subprocess import run\n27 \n",
                "col_offset": 0,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "51 \n52     assert api_token, \"Please define the TRANSIFEX_API_TOKEN env var.\"\n53     headers = {\"Authorization\": f\"Bearer {api_token}\"}\n",
                "col_offset": 4,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 52,
                "line_range": [
                    52
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "59 \n60     response = requests.get(resources_url, headers=headers, params=base_params)\n61     assert response.ok, response.content\n",
                "col_offset": 15,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 400,
                    "link": "https://cwe.mitre.org/data/definitions/400.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Call to requests without timeout",
                "line_number": 60,
                "line_range": [
                    60
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
                "test_id": "B113",
                "test_name": "request_without_timeout"
            },
            {
                "code": "60     response = requests.get(resources_url, headers=headers, params=base_params)\n61     assert response.ok, response.content\n62     data = response.json()[\"data\"]\n",
                "col_offset": 4,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 61,
                "line_range": [
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "70         params.update({\"filter[resource]\": resource_id})\n71         stats = requests.get(resource_stats_url, headers=headers, params=params)\n72         stats_data = stats.json()[\"data\"]\n",
                "col_offset": 16,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 400,
                    "link": "https://cwe.mitre.org/data/definitions/400.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Call to requests without timeout",
                "line_number": 71,
                "line_range": [
                    71
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
                "test_id": "B113",
                "test_name": "request_without_timeout"
            },
            {
                "code": "155         capture_output=True,\n156         shell=True,\n157     )\n158     num_changes = int(p.stdout.strip())\n159     print(\"%d changed/added messages in '%s' catalog.\" % (num_changes, cat_name))\n160 \n161 \n",
                "col_offset": 8,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "HIGH",
                "issue_text": "subprocess call with shell=True identified, security issue.",
                "line_number": 156,
                "line_range": [
                    153,
                    154,
                    155,
                    156,
                    157
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b602_subprocess_popen_with_shell_equals_true.html",
                "test_id": "B602",
                "test_name": "subprocess_popen_with_shell_equals_true"
            },
            {
                "code": "203             )\n204             p = run(\n205                 [\"msgfmt\", \"-vc\", \"-o\", \"/dev/null\", po_path],\n206                 capture_output=True,\n207                 env={\"LANG\": \"C\"},\n208                 encoding=\"utf-8\",\n209             )\n210             if p.returncode == 0:\n",
                "col_offset": 16,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Starting a process with a partial executable path",
                "line_number": 204,
                "line_range": [
                    204,
                    205,
                    206,
                    207,
                    208,
                    209
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html",
                "test_id": "B607",
                "test_name": "start_process_with_partial_path"
            },
            {
                "code": "203             )\n204             p = run(\n205                 [\"msgfmt\", \"-vc\", \"-o\", \"/dev/null\", po_path],\n206                 capture_output=True,\n207                 env={\"LANG\": \"C\"},\n208                 encoding=\"utf-8\",\n209             )\n210             if p.returncode == 0:\n",
                "col_offset": 16,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 204,
                "line_range": [
                    204,
                    205,
                    206,
                    207,
                    208,
                    209
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "237         if languages is None:\n238             run(cmd + [\"--all\"])\n239             target_langs = sorted(\n",
                "col_offset": 12,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 238,
                "line_range": [
                    238
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "243             for lang in languages:\n244                 run(cmd + [\"-l\", lang])\n245             target_langs = languages\n",
                "col_offset": 16,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 244,
                "line_range": [
                    244
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "261                 continue\n262             run([\"msgcat\", \"--no-location\", \"-o\", po_path, po_path])\n263             msgfmt = run([\"msgfmt\", \"-c\", \"-o\", \"%s.mo\" % po_path[:-3], po_path])\n",
                "col_offset": 12,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Starting a process with a partial executable path",
                "line_number": 262,
                "line_range": [
                    262
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html",
                "test_id": "B607",
                "test_name": "start_process_with_partial_path"
            },
            {
                "code": "261                 continue\n262             run([\"msgcat\", \"--no-location\", \"-o\", po_path, po_path])\n263             msgfmt = run([\"msgfmt\", \"-c\", \"-o\", \"%s.mo\" % po_path[:-3], po_path])\n",
                "col_offset": 12,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 262,
                "line_range": [
                    262
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "262             run([\"msgcat\", \"--no-location\", \"-o\", po_path, po_path])\n263             msgfmt = run([\"msgfmt\", \"-c\", \"-o\", \"%s.mo\" % po_path[:-3], po_path])\n264             if msgfmt.returncode != 0:\n",
                "col_offset": 21,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Starting a process with a partial executable path",
                "line_number": 263,
                "line_range": [
                    263
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b607_start_process_with_partial_path.html",
                "test_id": "B607",
                "test_name": "start_process_with_partial_path"
            },
            {
                "code": "262             run([\"msgcat\", \"--no-location\", \"-o\", po_path, po_path])\n263             msgfmt = run([\"msgfmt\", \"-c\", \"-o\", \"%s.mo\" % po_path[:-3], po_path])\n264             if msgfmt.returncode != 0:\n",
                "col_offset": 21,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 263,
                "line_range": [
                    263
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "359     cmd = kwargs.pop(\"cmd\")\n360     eval(cmd)(**kwargs)\n",
                "col_offset": 4,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\scripts\\manage_translations.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
                "line_number": 360,
                "line_range": [
                    360
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b307-eval",
                "test_id": "B307",
                "test_name": "blacklist"
            },
            {
                "code": "17     def setUpTestData(cls):\n18         cls.superuser = User.objects.create_superuser(\n19             username=\"super\", email=\"a@b.com\", password=\"xxx\"\n20         )\n21 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\test_date_hierarchy.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'xxx'",
                "line_number": 18,
                "line_range": [
                    18,
                    19,
                    20
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "95     def setUpTestData(cls):\n96         cls.superuser = User.objects.create_superuser(\n97             username=\"super\", email=\"a@b.com\", password=\"xxx\"\n98         )\n99 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'xxx'",
                "line_number": 96,
                "line_range": [
                    96,
                    97,
                    98
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "100     def _create_superuser(self, username):\n101         return User.objects.create_superuser(\n102             username=username, email=\"a@b.com\", password=\"xxx\"\n103         )\n104 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'xxx'",
                "line_number": 101,
                "line_range": [
                    101,
                    102,
                    103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1815         \"\"\"{% get_admin_log %} works without specifying a user.\"\"\"\n1816         user = User(username=\"jondoe\", password=\"secret\", email=\"super@example.com\")\n1817         user.save()\n",
                "col_offset": 15,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1816,
                "line_range": [
                    1816
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1856     def setUp(self):\n1857         User.objects.create_superuser(username=\"super\", password=\"secret\", email=None)\n1858 \n",
                "col_offset": 8,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1857,
                "line_range": [
                    1857
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1864 \n1865         self.admin_login(username=\"super\", password=\"secret\")\n1866         self.selenium.get(self.live_server_url + reverse(\"admin:auth_user_changelist\"))\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1865,
                "line_range": [
                    1865
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1912         Parent.objects.bulk_create([Parent(name=\"parent%d\" % i) for i in range(5)])\n1913         self.admin_login(username=\"super\", password=\"secret\")\n1914         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1913,
                "line_range": [
                    1913
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1934 \n1935         self.admin_login(username=\"super\", password=\"secret\")\n1936         self.selenium.get(self.live_server_url + reverse(\"admin:auth_user_changelist\"))\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1935,
                "line_range": [
                    1935
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1970         Parent.objects.bulk_create([Parent(name=\"parent%d\" % i) for i in range(101)])\n1971         self.admin_login(username=\"super\", password=\"secret\")\n1972         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1971,
                "line_range": [
                    1971
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2029 \n2030         self.admin_login(username=\"super\", password=\"secret\")\n2031         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2030,
                "line_range": [
                    2030
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2055 \n2056         self.admin_login(username=\"super\", password=\"secret\")\n2057         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2056,
                "line_range": [
                    2056
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2084 \n2085         self.admin_login(username=\"super\", password=\"secret\")\n2086         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2085,
                "line_range": [
                    2085
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2107 \n2108         self.admin_login(username=\"super\", password=\"secret\")\n2109         self.selenium.get(self.live_server_url + reverse(\"admin:auth_user_changelist\"))\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2108,
                "line_range": [
                    2108
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2159 \n2160         self.admin_login(username=\"super\", password=\"secret\")\n2161         changelist_url = reverse(\"admin:admin_changelist_proxyuser_changelist\")\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2160,
                "line_range": [
                    2160
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2186 \n2187         self.admin_login(username=\"super\", password=\"secret\")\n2188         changelist_url = reverse(\"admin:admin_changelist_grandchild_changelist\")\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_changelist\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2187,
                "line_range": [
                    2187
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "23     def setUpTestData(cls):\n24         cls.superuser = User.objects.create_superuser(\n25             username=\"super\", password=\"secret\", email=\"super@example.com\"\n26         )\n27         Action.objects.create(name=\"delete\", description=\"Remove things.\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_custom_urls\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 24,
                "line_range": [
                    24,
                    25,
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "493         )\n494         staff_user = User.objects.create_user(\n495             username=\"staff\", password=\"secret\", is_staff=True\n496         )\n497         self.client.force_login(staff_user)\n",
                "col_offset": 21,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_docs\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 494,
                "line_range": [
                    494,
                    495,
                    496
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "541     def test_model_index_with_model_permission(self):\n542         staff_user = User.objects.create_user(\n543             username=\"staff\", password=\"secret\", is_staff=True\n544         )\n545         self.client.force_login(staff_user)\n",
                "col_offset": 21,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_docs\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 542,
                "line_range": [
                    542,
                    543,
                    544
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7     def setUpTestData(cls):\n8         cls.superuser = User.objects.create_superuser(\n9             username=\"super\", password=\"secret\", email=\"super@example.com\"\n10         )\n11 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_docs\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8,
                "line_range": [
                    8,
                    9,
                    10
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "59         while not self.rand_pk:\n60             test_pk = random.randint(1, 99999)\n61             if not NonAutoPKBook.objects.filter(rand_pk=test_pk).exists():\n",
                "col_offset": 22,
                "end_col_offset": 46,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\models.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 60,
                "line_range": [
                    60
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "58     def setUpTestData(cls):\n59         cls.superuser = User.objects.create_superuser(\n60             username=\"super\", email=\"super@example.com\", password=\"secret\"\n61         )\n62 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 59,
                "line_range": [
                    59,
                    60,
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "77 \n78         cls.view_only_user = User.objects.create_user(\n79             username=\"user\",\n80             password=\"pwd\",\n81             is_staff=True,\n82         )\n83         parent_ct = ContentType.objects.get_for_model(SomeParentModel)\n",
                "col_offset": 29,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'pwd'",
                "line_number": 78,
                "line_range": [
                    78,
                    79,
                    80,
                    81,
                    82
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1391     def setUpTestData(cls):\n1392         cls.user = User.objects.create_user(\n1393             \"testing\", password=\"password\", is_staff=True\n1394         )\n1395         cls.user.user_permissions.add(\n",
                "col_offset": 19,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 1392,
                "line_range": [
                    1392,
                    1393,
                    1394
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1879     def setUp(self):\n1880         User.objects.create_superuser(\n1881             username=\"super\", password=\"secret\", email=\"super@example.com\"\n1882         )\n1883 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1880,
                "line_range": [
                    1880,
                    1881,
                    1882
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1890 \n1891         self.admin_login(username=\"super\", password=\"secret\")\n1892         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1891,
                "line_range": [
                    1891
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1909 \n1910         self.admin_login(username=\"super\", password=\"secret\")\n1911         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1910,
                "line_range": [
                    1910
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1937 \n1938         self.admin_login(username=\"super\", password=\"secret\")\n1939         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1938,
                "line_range": [
                    1938
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2003 \n2004         self.admin_login(username=\"super\", password=\"secret\")\n2005         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2004,
                "line_range": [
                    2004
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2074 \n2075         self.admin_login(username=\"super\", password=\"secret\")\n2076         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2075,
                "line_range": [
                    2075
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2159 \n2160         user = User.objects.create_user(\"testing\", password=\"password\", is_staff=True)\n2161         user.user_permissions.add(\n",
                "col_offset": 15,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 2160,
                "line_range": [
                    2160
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2172         )\n2173         self.admin_login(username=\"testing\", password=\"password\")\n2174         poll = Poll.objects.create(name=\"Survey\")\n",
                "col_offset": 8,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 2173,
                "line_range": [
                    2173
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2183 \n2184         self.admin_login(username=\"super\", password=\"secret\")\n2185         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2184,
                "line_range": [
                    2184
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2241         # Collapsed inlines use details and summary elements.\n2242         self.admin_login(username=\"super\", password=\"secret\")\n2243         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2242,
                "line_range": [
                    2242
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2268 \n2269         self.admin_login(username=\"super\", password=\"secret\")\n2270         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2269,
                "line_range": [
                    2269
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2316 \n2317         self.admin_login(username=\"super\", password=\"secret\")\n2318         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2317,
                "line_range": [
                    2317
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2359 \n2360         self.admin_login(username=\"super\", password=\"secret\")\n2361         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2360,
                "line_range": [
                    2360
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2405 \n2406         self.admin_login(username=\"super\", password=\"secret\")\n2407         # Hide sidebar.\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2406,
                "line_range": [
                    2406
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2463 \n2464         self.admin_login(username=\"super\", password=\"secret\")\n2465         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_inlines\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2464,
                "line_range": [
                    2464
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "11 import stat\n12 import subprocess\n13 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\admin_scripts\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 12,
                "line_range": [
                    12
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "134 \n135         p = subprocess.run(\n136             [sys.executable, *args],\n137             capture_output=True,\n138             cwd=self.test_dir,\n139             env=test_environ,\n140             text=True,\n141             umask=umask,\n142         )\n143         return p.stdout, p.stderr\n",
                "col_offset": 12,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_scripts\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 135,
                "line_range": [
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "1673     def test_runner_custom_defaults(self):\n1674         self.cmd.default_addr = \"0.0.0.0\"\n1675         self.cmd.default_port = \"5000\"\n",
                "col_offset": 32,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\admin_scripts\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 605,
                    "link": "https://cwe.mitre.org/data/definitions/605.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible binding to all interfaces.",
                "line_number": 1674,
                "line_range": [
                    1674
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
                "test_id": "B104",
                "test_name": "hardcoded_bind_all_interfaces"
            },
            {
                "code": "1676         call_command(self.cmd)\n1677         self.assertServerSettings(\"0.0.0.0\", \"5000\")\n1678 \n",
                "col_offset": 34,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\admin_scripts\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 605,
                    "link": "https://cwe.mitre.org/data/definitions/605.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible binding to all interfaces.",
                "line_number": 1677,
                "line_range": [
                    1677
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
                "test_id": "B104",
                "test_name": "hardcoded_bind_all_interfaces"
            },
            {
                "code": "383         class MyForm(forms.Form):\n384             text = forms.CharField(label=mark_safe(\"<i>text</i>\"))\n385             cb = forms.BooleanField(label=mark_safe(\"<i>cb</i>\"))\n",
                "col_offset": 41,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\admin_utils\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 384,
                "line_range": [
                    384
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "384             text = forms.CharField(label=mark_safe(\"<i>text</i>\"))\n385             cb = forms.BooleanField(label=mark_safe(\"<i>cb</i>\"))\n386 \n",
                "col_offset": 42,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\admin_utils\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 385,
                "line_range": [
                    385
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "625     def multiline_html(self, instance):\n626         return mark_safe(\"Multiline<br>\\nhtml<br>\\ncontent\")\n627 \n",
                "col_offset": 15,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\admin_views\\admin.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 626,
                "line_range": [
                    626
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "20     index_template = [\"custom_admin/index.html\"]  # a list, to test fix for #18697\n21     password_change_template = \"custom_admin/password_change_form.html\"\n22     password_change_done_template = \"custom_admin/password_change_done.html\"\n",
                "col_offset": 31,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\admin_views\\customadmin.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'custom_admin/password_change_form.html'",
                "line_number": 21,
                "line_range": [
                    21
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "21     password_change_template = \"custom_admin/password_change_form.html\"\n22     password_change_done_template = \"custom_admin/password_change_done.html\"\n23 \n",
                "col_offset": 36,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_views\\customadmin.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'custom_admin/password_change_done.html'",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "30     def setUpTestData(cls):\n31         cls.superuser = User.objects.create_superuser(\n32             username=\"super\", password=\"secret\", email=\"super@example.com\"\n33         )\n34         cls.s1 = ExternalSubscriber.objects.create(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_actions.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 31,
                "line_range": [
                    31,
                    32,
                    33
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "504         )\n505         cls.user = User.objects.create_user(\n506             username=\"user\",\n507             password=\"secret\",\n508             email=\"user@example.com\",\n509             is_staff=True,\n510         )\n511         permission = Permission.objects.get(codename=\"change_subscriber\")\n",
                "col_offset": 19,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_actions.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 505,
                "line_range": [
                    505,
                    506,
                    507,
                    508,
                    509,
                    510
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "40     def setUpTestData(cls):\n41         cls.u1 = User.objects.create_superuser(\n42             username=\"super\", password=\"secret\", email=\"super@example.com\"\n43         )\n44 \n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_adminsite.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 41,
                "line_range": [
                    41,
                    42,
                    43
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "90     def setUpTestData(cls):\n91         cls.user = User.objects.create_user(\n92             username=\"user\",\n93             password=\"secret\",\n94             email=\"user@example.com\",\n95             is_staff=True,\n96         )\n97         super().setUpTestData()\n",
                "col_offset": 19,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_autocomplete_view.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 91,
                "line_range": [
                    91,
                    92,
                    93,
                    94,
                    95,
                    96
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "400     def setUp(self):\n401         self.superuser = User.objects.create_superuser(\n402             username=\"super\",\n403             password=\"secret\",\n404             email=\"super@example.com\",\n405         )\n406         self.admin_login(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_autocomplete_view.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 401,
                "line_range": [
                    401,
                    402,
                    403,
                    404,
                    405
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "405         )\n406         self.admin_login(\n407             username=\"super\",\n408             password=\"secret\",\n409             login_url=reverse(\"autocomplete_admin:index\"),\n410         )\n411 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_autocomplete_view.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 406,
                "line_range": [
                    406,
                    407,
                    408,
                    409,
                    410
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "9     def setUpTestData(cls):\n10         cls.superuser = User.objects.create_superuser(\n11             username=\"super\",\n12             password=\"secret\",\n13             email=\"super@example.com\",\n14         )\n15 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_breadcrumbs.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 10,
                "line_range": [
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "16     def setUpTestData(cls):\n17         User.objects.create_user(\n18             username=\"inactive\", password=\"password\", is_active=False\n19         )\n20 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 17,
                "line_range": [
                    17,
                    18,
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "14     def setUpTestData(cls):\n15         cls.superuser = User.objects.create_superuser(\n16             username=\"super\",\n17             password=\"secret\",\n18             email=\"super@example.com\",\n19         )\n20 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_history_view.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 15,
                "line_range": [
                    15,
                    16,
                    17,
                    18,
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "57     def setUp(self):\n58         self.superuser = User.objects.create_superuser(\n59             username=\"super\",\n60             password=\"secret\",\n61             email=\"super@example.com\",\n62         )\n63         for i in range(1, 1101):\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_history_view.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 58,
                "line_range": [
                    58,
                    59,
                    60,
                    61,
                    62
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "70             )\n71         self.admin_login(\n72             username=\"super\",\n73             password=\"secret\",\n74             login_url=reverse(\"admin:index\"),\n75         )\n76 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_history_view.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 71,
                "line_range": [
                    71,
                    72,
                    73,
                    74,
                    75
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "50             Router.target_db = db\n51             cls.superusers[db] = User.objects.create_superuser(\n52                 username=\"admin\",\n53                 password=\"something\",\n54                 email=\"test@test.org\",\n55             )\n56             b = Book(name=\"Test Book\")\n",
                "col_offset": 33,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_multidb.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'something'",
                "line_number": 51,
                "line_range": [
                    51,
                    52,
                    53,
                    54,
                    55
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "198         book = Book.objects.using(\"other\").create(name=\"other book\")\n199         user = User.objects.create_superuser(\n200             username=\"super\", password=\"secret\", email=\"super@example.com\"\n201         )\n202 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_multidb.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 199,
                "line_range": [
                    199,
                    200,
                    201
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "33     def setUpTestData(cls):\n34         cls.superuser = User.objects.create_superuser(\n35             username=\"super\",\n36             password=\"secret\",\n37             email=\"super@example.com\",\n38         )\n39 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_nav_sidebar.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 34,
                "line_range": [
                    34,
                    35,
                    36,
                    37,
                    38
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "125     def setUp(self):\n126         self.superuser = User.objects.create_superuser(\n127             username=\"super\",\n128             password=\"secret\",\n129             email=\"super@example.com\",\n130         )\n131         self.admin_login(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_nav_sidebar.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 126,
                "line_range": [
                    126,
                    127,
                    128,
                    129,
                    130
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "130         )\n131         self.admin_login(\n132             username=\"super\",\n133             password=\"secret\",\n134             login_url=reverse(\"test_with_sidebar:index\"),\n135         )\n136         self.selenium.execute_script(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_nav_sidebar.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 131,
                "line_range": [
                    131,
                    132,
                    133,
                    134,
                    135
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "11     def setUp(self):\n12         self.superuser = User.objects.create_superuser(\n13             username=\"super\",\n14             password=\"secret\",\n15             email=\"super@example.com\",\n16         )\n17 \n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_password_form.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 12,
                "line_range": [
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "27         user_add_url = reverse(\"auth_test_admin:auth_user_add\")\n28         self.admin_login(username=\"super\", password=\"secret\")\n29         self.selenium.get(self.live_server_url + user_add_url)\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_password_form.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "74 \n75         user = User.objects.create_user(\n76             username=\"ada\", password=\"charles\", email=\"ada@example.com\"\n77         )\n78         user_url = reverse(\"auth_test_admin:auth_user_password_change\", args=(user.pk,))\n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_password_form.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'charles'",
                "line_number": 75,
                "line_range": [
                    75,
                    76,
                    77
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "78         user_url = reverse(\"auth_test_admin:auth_user_password_change\", args=(user.pk,))\n79         self.admin_login(username=\"super\", password=\"secret\")\n80         self.selenium.get(self.live_server_url + user_url)\n",
                "col_offset": 8,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_password_form.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 79,
                "line_range": [
                    79
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "13     def setUp(self):\n14         self.superuser = User.objects.create_superuser(\n15             username=\"super\", password=\"secret\", email=\"super@example.com\"\n16         )\n17         self.admin_login(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_related_object_lookups.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 14,
                "line_range": [
                    14,
                    15,
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "16         )\n17         self.admin_login(\n18             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n19         )\n20 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_related_object_lookups.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 17,
                "line_range": [
                    17,
                    18,
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "11     def setUp(self):\n12         self.superuser = User.objects.create_superuser(\n13             username=\"super\",\n14             password=\"secret\",\n15             email=\"super@example.com\",\n16         )\n17 \n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_skip_link_to_content.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 12,
                "line_range": [
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "22 \n23         self.admin_login(\n24             username=\"super\",\n25             password=\"secret\",\n26             login_url=reverse(\"admin:index\"),\n27         )\n28 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_skip_link_to_content.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 23,
                "line_range": [
                    23,
                    24,
                    25,
                    26,
                    27
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "73 \n74         self.admin_login(\n75             username=\"super\",\n76             password=\"secret\",\n77             login_url=reverse(\"admin:index\"),\n78         )\n79 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_skip_link_to_content.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 74,
                "line_range": [
                    74,
                    75,
                    76,
                    77,
                    78
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "103         with override_settings(LANGUAGE_CODE=\"ar\"):\n104             self.admin_login(\n105                 username=\"super\",\n106                 password=\"secret\",\n107                 login_url=reverse(\"admin:index\"),\n108             )\n109 \n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_skip_link_to_content.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 104,
                "line_range": [
                    104,
                    105,
                    106,
                    107,
                    108
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "37     def test_submit_row_save_as_new_add_permission_required(self):\n38         change_user = User.objects.create_user(\n39             username=\"change_user\", password=\"secret\", is_staff=True\n40         )\n41         change_user.user_permissions.add(\n",
                "col_offset": 22,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_templatetags.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 38,
                "line_range": [
                    38,
                    39,
                    40
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "53 \n54         add_user = User.objects.create_user(\n55             username=\"add_user\", password=\"secret\", is_staff=True\n56         )\n57         add_user.user_permissions.add(\n",
                "col_offset": 19,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_templatetags.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 54,
                "line_range": [
                    54,
                    55,
                    56
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "139     def setUpTestData(cls):\n140         cls.superuser = User.objects.create_superuser(\n141             username=\"super\", password=\"secret\", email=\"super@example.com\"\n142         )\n143 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\test_templatetags.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 140,
                "line_range": [
                    140,
                    141,
                    142
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "194     def setUpTestData(cls):\n195         cls.superuser = User.objects.create_superuser(\n196             username=\"super\", password=\"secret\", email=\"super@example.com\"\n197         )\n198         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 195,
                "line_range": [
                    195,
                    196,
                    197
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1527     def test_view_subtitle_per_object(self):\n1528         viewuser = User.objects.create_user(\n1529             username=\"viewuser\",\n1530             password=\"secret\",\n1531             is_staff=True,\n1532         )\n1533         viewuser.user_permissions.add(\n",
                "col_offset": 19,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1528,
                "line_range": [
                    1528,
                    1529,
                    1530,
                    1531,
                    1532
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1888     def setUpTestData(cls):\n1889         cls.superuser = User.objects.create_superuser(\n1890             username=\"super\", password=\"secret\", email=\"super@example.com\"\n1891         )\n1892         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1889,
                "line_range": [
                    1889,
                    1890,
                    1891
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1949     def setUpTestData(cls):\n1950         cls.superuser = User.objects.create_superuser(\n1951             username=\"super\", password=\"secret\", email=\"super@example.com\"\n1952         )\n1953 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1950,
                "line_range": [
                    1950,
                    1951,
                    1952
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1980     def setUpTestData(cls):\n1981         cls.superuser = User.objects.create_superuser(\n1982             username=\"super\", password=\"secret\", email=\"super@example.com\"\n1983         )\n1984         cls.per1 = Person.objects.create(name=\"John Mauchly\", gender=1, alive=True)\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1981,
                "line_range": [
                    1981,
                    1982,
                    1983
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2193     def setUpTestData(cls):\n2194         cls.superuser = User.objects.create_superuser(\n2195             username=\"super\", password=\"secret\", email=\"super@example.com\"\n2196         )\n2197         cls.viewuser = User.objects.create_user(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2194,
                "line_range": [
                    2194,
                    2195,
                    2196
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2196         )\n2197         cls.viewuser = User.objects.create_user(\n2198             username=\"viewuser\", password=\"secret\", is_staff=True\n2199         )\n2200         cls.adduser = User.objects.create_user(\n",
                "col_offset": 23,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2197,
                "line_range": [
                    2197,
                    2198,
                    2199
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2199         )\n2200         cls.adduser = User.objects.create_user(\n2201             username=\"adduser\", password=\"secret\", is_staff=True\n2202         )\n2203         cls.changeuser = User.objects.create_user(\n",
                "col_offset": 22,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2200,
                "line_range": [
                    2200,
                    2201,
                    2202
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2202         )\n2203         cls.changeuser = User.objects.create_user(\n2204             username=\"changeuser\", password=\"secret\", is_staff=True\n2205         )\n2206         cls.deleteuser = User.objects.create_user(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2203,
                "line_range": [
                    2203,
                    2204,
                    2205
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2205         )\n2206         cls.deleteuser = User.objects.create_user(\n2207             username=\"deleteuser\", password=\"secret\", is_staff=True\n2208         )\n2209         cls.joepublicuser = User.objects.create_user(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2206,
                "line_range": [
                    2206,
                    2207,
                    2208
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2208         )\n2209         cls.joepublicuser = User.objects.create_user(\n2210             username=\"joepublic\", password=\"secret\"\n2211         )\n2212         cls.nostaffuser = User.objects.create_user(\n",
                "col_offset": 28,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2209,
                "line_range": [
                    2209,
                    2210,
                    2211
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2211         )\n2212         cls.nostaffuser = User.objects.create_user(\n2213             username=\"nostaff\", password=\"secret\"\n2214         )\n2215         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 26,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2212,
                "line_range": [
                    2212,
                    2213,
                    2214
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2339         self.assertContains(login, ERROR_MESSAGE)\n2340         new_user = User(username=\"jondoe\", password=\"secret\", email=\"super@example.com\")\n2341         new_user.save()\n",
                "col_offset": 19,
                "end_col_offset": 88,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 2340,
                "line_range": [
                    2340
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3438     def setUpTestData(cls):\n3439         cls.viewuser = User.objects.create_user(\n3440             username=\"viewuser\", password=\"secret\", is_staff=True\n3441         )\n3442         cls.adduser = User.objects.create_user(\n",
                "col_offset": 23,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3439,
                "line_range": [
                    3439,
                    3440,
                    3441
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3441         )\n3442         cls.adduser = User.objects.create_user(\n3443             username=\"adduser\", password=\"secret\", is_staff=True\n3444         )\n3445         cls.changeuser = User.objects.create_user(\n",
                "col_offset": 22,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3442,
                "line_range": [
                    3442,
                    3443,
                    3444
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3444         )\n3445         cls.changeuser = User.objects.create_user(\n3446             username=\"changeuser\", password=\"secret\", is_staff=True\n3447         )\n3448         cls.deleteuser = User.objects.create_user(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3445,
                "line_range": [
                    3445,
                    3446,
                    3447
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3447         )\n3448         cls.deleteuser = User.objects.create_user(\n3449             username=\"deleteuser\", password=\"secret\", is_staff=True\n3450         )\n3451         # Setup permissions.\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3448,
                "line_range": [
                    3448,
                    3449,
                    3450
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3465         # UserProxy instances.\n3466         cls.user_proxy = UserProxy.objects.create(\n3467             username=\"user_proxy\", password=\"secret\"\n3468         )\n3469 \n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3466,
                "line_range": [
                    3466,
                    3467,
                    3468
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3525         # User who can change Reports\n3526         cls.changeuser = User.objects.create_user(\n3527             username=\"changeuser\", password=\"secret\", is_staff=True\n3528         )\n3529         cls.changeuser.user_permissions.add(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3526,
                "line_range": [
                    3526,
                    3527,
                    3528
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3546     def setUpTestData(cls):\n3547         cls.superuser = User.objects.create_superuser(\n3548             username=\"super\", password=\"secret\", email=\"super@example.com\"\n3549         )\n3550         cls.deleteuser = User.objects.create_user(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3547,
                "line_range": [
                    3547,
                    3548,
                    3549
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3549         )\n3550         cls.deleteuser = User.objects.create_user(\n3551             username=\"deleteuser\", password=\"secret\", is_staff=True\n3552         )\n3553         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3550,
                "line_range": [
                    3550,
                    3551,
                    3552
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3829     def setUpTestData(cls):\n3830         cls.superuser = User.objects.create_superuser(\n3831             username=\"super\", password=\"secret\", email=\"super@example.com\"\n3832         )\n3833         cls.v1 = Villain.objects.create(name=\"Adam\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3830,
                "line_range": [
                    3830,
                    3831,
                    3832
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "3850     def setUpTestData(cls):\n3851         cls.superuser = User.objects.create_superuser(\n3852             username=\"super\", password=\"secret\", email=\"super@example.com\"\n3853         )\n3854         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 3851,
                "line_range": [
                    3851,
                    3852,
                    3853
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4112     def setUpTestData(cls):\n4113         cls.superuser = User.objects.create_superuser(\n4114             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4115         )\n4116         cls.b1 = Book.objects.create(name=\"L\u00e6rdommer\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4113,
                "line_range": [
                    4113,
                    4114,
                    4115
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4207     def setUpTestData(cls):\n4208         cls.superuser = User.objects.create_superuser(\n4209             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4210         )\n4211         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4208,
                "line_range": [
                    4208,
                    4209,
                    4210
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4645     def setUpTestData(cls):\n4646         cls.superuser = User.objects.create_superuser(\n4647             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4648         )\n4649         cls.joepublicuser = User.objects.create_user(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4646,
                "line_range": [
                    4646,
                    4647,
                    4648
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4648         )\n4649         cls.joepublicuser = User.objects.create_user(\n4650             username=\"joepublic\", password=\"secret\"\n4651         )\n4652         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 28,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4649,
                "line_range": [
                    4649,
                    4650,
                    4651
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4821     def setUpTestData(cls):\n4822         cls.superuser = User.objects.create_superuser(\n4823             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4824         )\n4825 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4822,
                "line_range": [
                    4822,
                    4823,
                    4824
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4912     def setUpTestData(cls):\n4913         cls.superuser = User.objects.create_superuser(\n4914             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4915         )\n4916 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4913,
                "line_range": [
                    4913,
                    4914,
                    4915
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4938     def setUpTestData(cls):\n4939         cls.superuser = User.objects.create_superuser(\n4940             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4941         )\n4942 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4939,
                "line_range": [
                    4939,
                    4940,
                    4941
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4957     def setUpTestData(cls):\n4958         cls.superuser = User.objects.create_superuser(\n4959             username=\"super\", password=\"secret\", email=\"super@example.com\"\n4960         )\n4961         cls.pks = [EmptyModel.objects.create().id for i in range(3)]\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 4958,
                "line_range": [
                    4958,
                    4959,
                    4960
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "5259     def setUpTestData(cls):\n5260         cls.superuser = User.objects.create_superuser(\n5261             username=\"super\", password=\"secret\", email=\"super@example.com\"\n5262         )\n5263         file1 = tempfile.NamedTemporaryFile(suffix=\".file1\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 5260,
                "line_range": [
                    5260,
                    5261,
                    5262
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "5312     def setUpTestData(cls):\n5313         cls.superuser = User.objects.create_superuser(\n5314             username=\"super\", password=\"secret\", email=\"super@example.com\"\n5315         )\n5316         cls.collector = Collector.objects.create(pk=1, name=\"John Fowles\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 5313,
                "line_range": [
                    5313,
                    5314,
                    5315
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "5638     def setUpTestData(cls):\n5639         cls.superuser = User.objects.create_superuser(\n5640             username=\"super\", password=\"secret\", email=\"super@example.com\"\n5641         )\n5642         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 5639,
                "line_range": [
                    5639,
                    5640,
                    5641
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "5719     def setUpTestData(cls):\n5720         cls.superuser = User.objects.create_superuser(\n5721             username=\"super\", password=\"secret\", email=\"super@example.com\"\n5722         )\n5723         cls.p1 = PrePopulatedPost.objects.create(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 5720,
                "line_range": [
                    5720,
                    5721,
                    5722
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "5796     def setUp(self):\n5797         self.superuser = User.objects.create_superuser(\n5798             username=\"super\", password=\"secret\", email=\"super@example.com\"\n5799         )\n5800         self.p1 = PrePopulatedPost.objects.create(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 5797,
                "line_range": [
                    5797,
                    5798,
                    5799
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "5826 \n5827         self.admin_login(\n5828             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n5829         )\n5830         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 5827,
                "line_range": [
                    5827,
                    5828,
                    5829
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6079         )\n6080         self.admin_login(\n6081             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6082         )\n6083 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6080,
                "line_range": [
                    6080,
                    6081,
                    6082
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6117 \n6118         self.admin_login(\n6119             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6120         )\n6121         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6118,
                "line_range": [
                    6118,
                    6119,
                    6120
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6133 \n6134         self.admin_login(\n6135             username=\"super\",\n6136             password=\"secret\",\n6137             login_url=reverse(\"admin7:index\"),\n6138         )\n6139         url = self.live_server_url + reverse(\"admin7:admin_views_pizza_add\")\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6134,
                "line_range": [
                    6134,
                    6135,
                    6136,
                    6137,
                    6138
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6161 \n6162         self.admin_login(\n6163             username=\"super\",\n6164             password=\"secret\",\n6165             login_url=reverse(\"admin7:index\"),\n6166         )\n6167         url = self.live_server_url + reverse(\"admin7:admin_views_question_add\")\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6162,
                "line_range": [
                    6162,
                    6163,
                    6164,
                    6165,
                    6166
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6194 \n6195         self.admin_login(\n6196             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6197         )\n6198         # Create a new user to ensure that no extra permissions have been set.\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6195,
                "line_range": [
                    6195,
                    6196,
                    6197
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6198         # Create a new user to ensure that no extra permissions have been set.\n6199         user = User.objects.create_user(username=\"new\", password=\"newuser\")\n6200         url = self.live_server_url + reverse(\"admin:auth_user_change\", args=[user.id])\n",
                "col_offset": 15,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'newuser'",
                "line_number": 6199,
                "line_range": [
                    6199
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6251         # First form field has a single widget\n6252         self.admin_login(\n6253             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6254         )\n6255         with self.wait_page_loaded():\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6252,
                "line_range": [
                    6252,
                    6253,
                    6254
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6282         full_url = self.live_server_url + url\n6283         self.admin_login(\n6284             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6285         )\n6286         self.selenium.get(full_url)\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6283,
                "line_range": [
                    6283,
                    6284,
                    6285
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6307         full_url = self.live_server_url + url\n6308         self.admin_login(\n6309             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6310         )\n6311         self.selenium.get(full_url)\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6308,
                "line_range": [
                    6308,
                    6309,
                    6310
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6334         )\n6335         self.admin_login(\n6336             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6337         )\n6338         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6335,
                "line_range": [
                    6335,
                    6336,
                    6337
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6388         related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)\n6389         self.admin_login(\n6390             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6391         )\n6392         change_url = reverse(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6389,
                "line_range": [
                    6389,
                    6390,
                    6391
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6412 \n6413         self.admin_login(\n6414             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6415         )\n6416         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6413,
                "line_range": [
                    6413,
                    6414,
                    6415
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6437         related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)\n6438         self.admin_login(\n6439             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6440         )\n6441         change_url = reverse(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6438,
                "line_range": [
                    6438,
                    6439,
                    6440
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6463         related_with_parent = RelatedWithUUIDPKModel.objects.create(parent=parent)\n6464         self.admin_login(\n6465             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6466         )\n6467         change_url = reverse(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6464,
                "line_range": [
                    6464,
                    6465,
                    6466
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6485         RelatedWithUUIDPKModel.objects.create(parent=parent)\n6486         self.admin_login(\n6487             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6488         )\n6489         change_url = reverse(\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6486,
                "line_range": [
                    6486,
                    6487,
                    6488
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6539         Person.objects.create(name=\"Grace Hopper\", gender=1, alive=False)\n6540         self.admin_login(\n6541             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6542         )\n6543         person_url = reverse(\"admin:admin_views_person_changelist\") + \"?q=Gui\"\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6540,
                "line_range": [
                    6540,
                    6541,
                    6542
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6562 \n6563         self.admin_login(\n6564             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6565         )\n6566         add_url = reverse(\"admin:admin_views_box_add\", current_app=site.name)\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6563,
                "line_range": [
                    6563,
                    6564,
                    6565
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6613 \n6614         self.admin_login(\n6615             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6616         )\n6617         add_url = reverse(\"admin:admin_views_box_add\", current_app=site.name)\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6614,
                "line_range": [
                    6614,
                    6615,
                    6616
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6647 \n6648         self.admin_login(\n6649             username=\"super\",\n6650             password=\"secret\",\n6651             login_url=reverse(\"admin:index\"),\n6652         )\n6653         self.selenium.get(self.live_server_url + reverse(\"admin:admin_views_story_add\"))\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6648,
                "line_range": [
                    6648,
                    6649,
                    6650,
                    6651,
                    6652
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6678 \n6679         self.admin_login(\n6680             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6681         )\n6682         add_url = reverse(\"admin:admin_views_traveler_add\")\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6679,
                "line_range": [
                    6679,
                    6680,
                    6681
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6828 \n6829         self.admin_login(\n6830             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6831         )\n6832         add_url = reverse(\"admin7:admin_views_section_add\")\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6829,
                "line_range": [
                    6829,
                    6830,
                    6831
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6849 \n6850         self.admin_login(\n6851             username=\"super\", password=\"secret\", login_url=reverse(\"admin:index\")\n6852         )\n6853         add_url = reverse(\"admin7:admin_views_section_add\")\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6850,
                "line_range": [
                    6850,
                    6851,
                    6852
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "6869     def setUpTestData(cls):\n6870         cls.superuser = User.objects.create_superuser(\n6871             username=\"super\", password=\"secret\", email=\"super@example.com\"\n6872         )\n6873 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 6870,
                "line_range": [
                    6870,
                    6871,
                    6872
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7150     def setUpTestData(cls):\n7151         cls.superuser = User.objects.create_superuser(\n7152             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7153         )\n7154 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7151,
                "line_range": [
                    7151,
                    7152,
                    7153
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7177     def setUpTestData(cls):\n7178         cls.superuser = User.objects.create_superuser(\n7179             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7180         )\n7181 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7178,
                "line_range": [
                    7178,
                    7179,
                    7180
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7273     def setUpTestData(cls):\n7274         cls.superuser = User.objects.create_superuser(\n7275             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7276         )\n7277         cls.adduser = User.objects.create_user(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7274,
                "line_range": [
                    7274,
                    7275,
                    7276
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7276         )\n7277         cls.adduser = User.objects.create_user(\n7278             username=\"adduser\", password=\"secret\", is_staff=True\n7279         )\n7280         cls.changeuser = User.objects.create_user(\n",
                "col_offset": 22,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7277,
                "line_range": [
                    7277,
                    7278,
                    7279
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7279         )\n7280         cls.changeuser = User.objects.create_user(\n7281             username=\"changeuser\", password=\"secret\", is_staff=True\n7282         )\n7283         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7280,
                "line_range": [
                    7280,
                    7281,
                    7282
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7501     def setUpTestData(cls):\n7502         cls.superuser = User.objects.create_superuser(\n7503             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7504         )\n7505 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7502,
                "line_range": [
                    7502,
                    7503,
                    7504
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7537     def setUpTestData(cls):\n7538         cls.superuser = User.objects.create_superuser(\n7539             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7540         )\n7541         cls.s1 = Section.objects.create(name=\"Test section\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7538,
                "line_range": [
                    7538,
                    7539,
                    7540
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7686     def setUpTestData(cls):\n7687         cls.superuser = User.objects.create_superuser(\n7688             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7689         )\n7690 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7687,
                "line_range": [
                    7687,
                    7688,
                    7689
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7775     def setUpTestData(cls):\n7776         cls.superuser = User.objects.create_superuser(\n7777             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7778         )\n7779 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7776,
                "line_range": [
                    7776,
                    7777,
                    7778
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7793     def setUpTestData(cls):\n7794         cls.superuser = User.objects.create_superuser(\n7795             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7796         )\n7797 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7794,
                "line_range": [
                    7794,
                    7795,
                    7796
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "7951     def setUpTestData(cls):\n7952         cls.superuser = User.objects.create_superuser(\n7953             username=\"super\", password=\"secret\", email=\"super@example.com\"\n7954         )\n7955 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 7952,
                "line_range": [
                    7952,
                    7953,
                    7954
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8027     def setUpTestData(cls):\n8028         cls.superuser = User.objects.create_superuser(\n8029             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8030         )\n8031 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8028,
                "line_range": [
                    8028,
                    8029,
                    8030
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8062     def setUpTestData(cls):\n8063         cls.superuser = User.objects.create_superuser(\n8064             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8065         )\n8066 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8063,
                "line_range": [
                    8063,
                    8064,
                    8065
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8128     def setUpTestData(cls):\n8129         cls.superuser = User.objects.create_superuser(\n8130             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8131         )\n8132         cls.joepublicuser = User.objects.create_user(\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8129,
                "line_range": [
                    8129,
                    8130,
                    8131
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8131         )\n8132         cls.joepublicuser = User.objects.create_user(\n8133             username=\"joepublic\", password=\"secret\"\n8134         )\n8135 \n",
                "col_offset": 28,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8132,
                "line_range": [
                    8132,
                    8133,
                    8134
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8334     def test_change_view_close_link(self):\n8335         viewuser = User.objects.create_user(\n8336             username=\"view\", password=\"secret\", is_staff=True\n8337         )\n8338         viewuser.user_permissions.add(\n",
                "col_offset": 19,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8335,
                "line_range": [
                    8335,
                    8336,
                    8337
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8434     def setUpTestData(cls):\n8435         cls.superuser = User.objects.create_superuser(\n8436             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8437         )\n8438 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8435,
                "line_range": [
                    8435,
                    8436,
                    8437
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8480     def setUpTestData(cls):\n8481         cls.superuser = User.objects.create_superuser(\n8482             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8483         )\n8484 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8481,
                "line_range": [
                    8481,
                    8482,
                    8483
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8682     def setUpTestData(cls):\n8683         cls.superuser = User.objects.create_superuser(\n8684             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8685         )\n8686 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8683,
                "line_range": [
                    8683,
                    8684,
                    8685
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8749     def setUpTestData(cls):\n8750         cls.superuser = User.objects.create_superuser(\n8751             username=\"super\", password=\"secret\", email=\"super@example.com\"\n8752         )\n8753 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8750,
                "line_range": [
                    8750,
                    8751,
                    8752
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8799     def setUpTestData(cls):\n8800         cls.staff_user = User.objects.create_user(\n8801             username=\"staff\",\n8802             password=\"secret\",\n8803             email=\"staff@example.com\",\n8804             is_staff=True,\n8805         )\n8806         cls.non_staff_user = User.objects.create_user(\n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8800,
                "line_range": [
                    8800,
                    8801,
                    8802,
                    8803,
                    8804,
                    8805
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "8805         )\n8806         cls.non_staff_user = User.objects.create_user(\n8807             username=\"user\",\n8808             password=\"secret\",\n8809             email=\"user@example.com\",\n8810             is_staff=False,\n8811         )\n8812 \n",
                "col_offset": 29,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_views\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 8806,
                "line_range": [
                    8806,
                    8807,
                    8808,
                    8809,
                    8810,
                    8811
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "58     def setUpTestData(cls):\n59         cls.superuser = User.objects.create_superuser(\n60             username=\"super\", password=\"secret\", email=None\n61         )\n62         cls.u2 = User.objects.create_user(username=\"testser\", password=\"secret\")\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 59,
                "line_range": [
                    59,
                    60,
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "61         )\n62         cls.u2 = User.objects.create_user(username=\"testser\", password=\"secret\")\n63         Car.objects.create(owner=cls.superuser, make=\"Volkswagen\", model=\"Passat\")\n",
                "col_offset": 17,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 62,
                "line_range": [
                    62
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "973     def setUp(self):\n974         self.u1 = User.objects.create_superuser(\n975             username=\"super\", password=\"secret\", email=\"super@example.com\"\n976         )\n977 \n",
                "col_offset": 18,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 974,
                "line_range": [
                    974,
                    975,
                    976
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "987 \n988         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n989         # Open a page that has a date and time picker widgets\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 988,
                "line_range": [
                    988
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1059 \n1060         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1061         # Open a page that has a date and time picker widgets\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1060,
                "line_range": [
                    1060
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1086 \n1087         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1088         # Open a page that has a date and time picker widgets\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1087,
                "line_range": [
                    1087
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1115 \n1116         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1117         # Open a page that has a date and time picker widgets\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1116,
                "line_range": [
                    1116
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1140 \n1141         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1142 \n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1141,
                "line_range": [
                    1141
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1192 \n1193         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1194 \n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1193,
                "line_range": [
                    1193
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1481         with self.small_screen_size():\n1482             self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1483             self.selenium.get(\n",
                "col_offset": 12,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1482,
                "line_range": [
                    1482
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1517         with self.small_screen_size():\n1518             self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1519             self.selenium.get(\n",
                "col_offset": 12,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1518,
                "line_range": [
                    1518
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1637         self.school.alumni.set([self.lisa, self.peter])\n1638         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1639         change_url = reverse(\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1638,
                "line_range": [
                    1638
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1668 \n1669         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1670         change_url = reverse(\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1669,
                "line_range": [
                    1669
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1696 \n1697         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1698         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1697,
                "line_range": [
                    1697
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1733 \n1734         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1735         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1734,
                "line_range": [
                    1734
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1784 \n1785         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1786         with self.wait_page_loaded():\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1785,
                "line_range": [
                    1785
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1869 \n1870         self.admin_login(username=\"super\", password=\"secret\", login_url=\"/\")\n1871         self.selenium.get(\n",
                "col_offset": 8,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\admin_widgets\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1870,
                "line_range": [
                    1870
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1 import datetime\n2 import pickle\n3 from decimal import Decimal\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\aggregation_regress\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "256         # subselect being (erroneously) added to the GROUP BY parameters\n257         qs = Publisher.objects.extra(\n258             select={\n259                 \"name_of_shortest_book\": shortest_book_sql,\n260             }\n261         ).annotate(total_books=Count(\"book\"))\n262         # force execution of the query\n",
                "col_offset": 13,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\aggregation_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 257,
                "line_range": [
                    257,
                    258,
                    259,
                    260,
                    261
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "1019         query = qs.query.get_compiler(qs.db).as_sql()[0]\n1020         qs2 = pickle.loads(pickle.dumps(qs))\n1021         self.assertEqual(\n",
                "col_offset": 14,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\tests\\aggregation_regress\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 1020,
                "line_range": [
                    1020
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "710                     DepartmentStore.objects.annotate(\n711                         annotation=RawSQL(sql, ()),\n712                     ).values_list(\"annotation\", flat=True),\n",
                "col_offset": 35,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\annotations\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 711,
                "line_range": [
                    711
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "20     async def test_aauthenticate(self):\n21         user = await aauthenticate(username=\"testuser\", password=\"testpw\")\n22         self.assertIsInstance(user, User)\n",
                "col_offset": 21,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_auth.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 21,
                "line_range": [
                    21
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "25         await user.asave()\n26         self.assertIsNone(await aauthenticate(username=\"testuser\", password=\"testpw\"))\n27 \n",
                "col_offset": 32,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_auth.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "76     async def test_alogout(self):\n77         await self.client.alogin(username=\"testuser\", password=\"testpw\")\n78         request = HttpRequest()\n",
                "col_offset": 14,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_auth.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 77,
                "line_range": [
                    77
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "84     async def test_client_alogout(self):\n85         await self.client.alogin(username=\"testuser\", password=\"testpw\")\n86         request = HttpRequest()\n",
                "col_offset": 14,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_auth.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 85,
                "line_range": [
                    85
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "92     async def test_change_password(self):\n93         await self.client.alogin(username=\"testuser\", password=\"testpw\")\n94         request = HttpRequest()\n",
                "col_offset": 14,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_auth.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 93,
                "line_range": [
                    93
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "102         self.assertEqual(\n103             await self.client.alogin(username=\"testuser\", password=\"\"), False\n104         )\n",
                "col_offset": 18,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_auth.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 103,
                "line_range": [
                    103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1 import json\n2 import xml.etree.ElementTree\n3 from datetime import datetime\n",
                "col_offset": 0,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_queryset.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b405-import-xml-etree",
                "test_id": "B405",
                "test_name": "blacklist"
            },
            {
                "code": "246                     try:\n247                         xml.etree.ElementTree.fromstring(result)\n248                     except xml.etree.ElementTree.ParseError as e:\n",
                "col_offset": 24,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\async\\test_async_queryset.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 247,
                "line_range": [
                    247
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree",
                "test_id": "B314",
                "test_name": "blacklist"
            },
            {
                "code": "39             Router.target_db = db\n40             cls.superusers[db] = User.objects.create_superuser(\n41                 username=\"admin\",\n42                 password=\"something\",\n43                 email=\"test@test.org\",\n44             )\n45 \n",
                "col_offset": 33,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_admin_multidb.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'something'",
                "line_number": 40,
                "line_range": [
                    40,
                    41,
                    42,
                    43,
                    44
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "466         username = getattr(self.user, self.UserModel.USERNAME_FIELD)\n467         authenticate(username=username, password=\"test\")\n468         self.assertEqual(CountingMD5PasswordHasher.calls, 1)\n",
                "col_offset": 8,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 467,
                "line_range": [
                    467
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "470         CountingMD5PasswordHasher.calls = 0\n471         authenticate(username=\"no_such_user\", password=\"test\")\n472         self.assertEqual(CountingMD5PasswordHasher.calls, 1)\n",
                "col_offset": 8,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 471,
                "line_range": [
                    471
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "484         username = getattr(self.user, self.UserModel.USERNAME_FIELD)\n485         await aauthenticate(username=username, password=\"test\")\n486         self.assertEqual(CountingMD5PasswordHasher.calls, 1)\n",
                "col_offset": 14,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 485,
                "line_range": [
                    485
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "488         CountingMD5PasswordHasher.calls = 0\n489         await aauthenticate(username=\"no_such_user\", password=\"test\")\n490         self.assertEqual(CountingMD5PasswordHasher.calls, 1)\n",
                "col_offset": 14,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 489,
                "line_range": [
                    489
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "519         )\n520         self.superuser = User.objects.create_superuser(\n521             username=\"test2\",\n522             email=\"test2@example.com\",\n523             password=\"test\",\n524         )\n525 \n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 520,
                "line_range": [
                    520,
                    521,
                    522,
                    523,
                    524
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "548         \"\"\"\n549         user = CustomUserWithoutIsActiveField.objects._create_user(\n550             username=\"test\",\n551             email=\"test@example.com\",\n552             password=\"test\",\n553         )\n554         self.assertEqual(authenticate(username=\"test\", password=\"test\"), user)\n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 549,
                "line_range": [
                    549,
                    550,
                    551,
                    552,
                    553
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "553         )\n554         self.assertEqual(authenticate(username=\"test\", password=\"test\"), user)\n555 \n",
                "col_offset": 25,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 554,
                "line_range": [
                    554
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "560         \"\"\"\n561         user = await CustomUserWithoutIsActiveField.objects._acreate_user(\n562             username=\"test\",\n563             email=\"test@example.com\",\n564             password=\"test\",\n565         )\n566         self.assertEqual(await aauthenticate(username=\"test\", password=\"test\"), user)\n",
                "col_offset": 21,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 561,
                "line_range": [
                    561,
                    562,
                    563,
                    564,
                    565
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "565         )\n566         self.assertEqual(await aauthenticate(username=\"test\", password=\"test\"), user)\n567 \n",
                "col_offset": 31,
                "end_col_offset": 78,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 566,
                "line_range": [
                    566
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "589     def create_users(self):\n590         self.user = ExtensionUser._default_manager.create_user(\n591             username=\"test\",\n592             email=\"test@example.com\",\n593             password=\"test\",\n594             date_of_birth=date(2006, 4, 25),\n595         )\n596         self.superuser = ExtensionUser._default_manager.create_superuser(\n",
                "col_offset": 20,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 590,
                "line_range": [
                    590,
                    591,
                    592,
                    593,
                    594,
                    595
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "595         )\n596         self.superuser = ExtensionUser._default_manager.create_superuser(\n597             username=\"test2\",\n598             email=\"test2@example.com\",\n599             password=\"test\",\n600             date_of_birth=date(1976, 11, 8),\n601         )\n602 \n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 596,
                "line_range": [
                    596,
                    597,
                    598,
                    599,
                    600,
                    601
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "616     def create_users(self):\n617         self.user = CustomPermissionsUser._default_manager.create_user(\n618             email=\"test@example.com\", password=\"test\", date_of_birth=date(2006, 4, 25)\n619         )\n620         self.superuser = CustomPermissionsUser._default_manager.create_superuser(\n",
                "col_offset": 20,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 617,
                "line_range": [
                    617,
                    618,
                    619
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "619         )\n620         self.superuser = CustomPermissionsUser._default_manager.create_superuser(\n621             email=\"test2@example.com\", password=\"test\", date_of_birth=date(1976, 11, 8)\n622         )\n623 \n",
                "col_offset": 25,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 620,
                "line_range": [
                    620,
                    621,
                    622
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "632     def test_authenticate(self):\n633         test_user = CustomUser._default_manager.create_user(\n634             email=\"test@example.com\", password=\"test\", date_of_birth=date(2006, 4, 25)\n635         )\n636         authenticated_user = authenticate(email=\"test@example.com\", password=\"test\")\n",
                "col_offset": 20,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 633,
                "line_range": [
                    633,
                    634,
                    635
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "635         )\n636         authenticated_user = authenticate(email=\"test@example.com\", password=\"test\")\n637         self.assertEqual(test_user, authenticated_user)\n",
                "col_offset": 29,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 636,
                "line_range": [
                    636
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "639     async def test_aauthenticate(self):\n640         test_user = await CustomUser._default_manager.acreate_user(\n641             email=\"test@example.com\", password=\"test\", date_of_birth=date(2006, 4, 25)\n642         )\n643         authenticated_user = await aauthenticate(\n",
                "col_offset": 26,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 640,
                "line_range": [
                    640,
                    641,
                    642
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "642         )\n643         authenticated_user = await aauthenticate(\n644             email=\"test@example.com\", password=\"test\"\n645         )\n646         self.assertEqual(test_user, authenticated_user)\n",
                "col_offset": 35,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 643,
                "line_range": [
                    643,
                    644,
                    645
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "654         \"\"\"\n655         user = UUIDUser.objects.create_user(username=\"uuid\", password=\"test\")\n656         self.assertTrue(self.client.login(username=\"uuid\", password=\"test\"))\n",
                "col_offset": 15,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 655,
                "line_range": [
                    655
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "655         user = UUIDUser.objects.create_user(username=\"uuid\", password=\"test\")\n656         self.assertTrue(self.client.login(username=\"uuid\", password=\"test\"))\n657         self.assertEqual(\n",
                "col_offset": 24,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 656,
                "line_range": [
                    656
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "662         \"\"\"See test_login()\"\"\"\n663         user = await UUIDUser.objects.acreate_user(username=\"uuid\", password=\"test\")\n664         self.assertTrue(await self.client.alogin(username=\"uuid\", password=\"test\"))\n",
                "col_offset": 21,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 663,
                "line_range": [
                    663
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "663         user = await UUIDUser.objects.acreate_user(username=\"uuid\", password=\"test\")\n664         self.assertTrue(await self.client.alogin(username=\"uuid\", password=\"test\"))\n665         session_key = await self.client.session.aget(SESSION_KEY)\n",
                "col_offset": 30,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 664,
                "line_range": [
                    664
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "923         \"user is not authenticated after a backend raises permission denied #2550\"\n924         self.assertIsNone(authenticate(username=\"test\", password=\"test\"))\n925         # user_login_failed signal is sent.\n",
                "col_offset": 26,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 924,
                "line_range": [
                    924
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "932     async def test_aauthenticate_permission_denied(self):\n933         self.assertIsNone(await aauthenticate(username=\"test\", password=\"test\"))\n934         # user_login_failed signal is sent.\n",
                "col_offset": 32,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 933,
                "line_range": [
                    933
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "941     def test_authenticates(self):\n942         self.assertEqual(authenticate(username=\"test\", password=\"test\"), self.user1)\n943 \n",
                "col_offset": 25,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 942,
                "line_range": [
                    942
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "946         self.assertEqual(\n947             await aauthenticate(username=\"test\", password=\"test\"), self.user1\n948         )\n",
                "col_offset": 18,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 947,
                "line_range": [
                    947
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1006     TEST_USERNAME = \"test_user\"\n1007     TEST_PASSWORD = \"test_password\"\n1008     TEST_EMAIL = \"test@example.com\"\n",
                "col_offset": 20,
                "end_col_offset": 35,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test_password'",
                "line_number": 1007,
                "line_range": [
                    1007
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1083     def setUp(self):\n1084         self.sensitive_password = \"mypassword\"\n1085 \n",
                "col_offset": 34,
                "end_col_offset": 46,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'mypassword'",
                "line_number": 1084,
                "line_range": [
                    1084
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1091         with self.assertRaises(TypeError):\n1092             authenticate(username=\"test\", password=\"test\")\n1093 \n",
                "col_offset": 12,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1092,
                "line_range": [
                    1092
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1270         \"\"\"\n1271         self.assertEqual(authenticate(username=\"test\", password=\"test\"), self.user1)\n1272 \n",
                "col_offset": 25,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1271,
                "line_range": [
                    1271
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1279     def test_skips_backends_with_decorated_method(self):\n1280         self.assertEqual(authenticate(username=\"test\", password=\"test\"), self.user1)\n1281 \n",
                "col_offset": 25,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1280,
                "line_range": [
                    1280
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1293     def setUp(self):\n1294         self.client.login(username=\"test\", password=\"test\")\n1295 \n",
                "col_offset": 8,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1294,
                "line_range": [
                    1294
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1332         username = \"username\"\n1333         password = \"password\"\n1334         User.objects.create_user(username, \"email\", password)\n",
                "col_offset": 19,
                "end_col_offset": 29,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 1333,
                "line_range": [
                    1333
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1344     username = \"username\"\n1345     password = \"password\"\n1346 \n",
                "col_offset": 15,
                "end_col_offset": 25,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_auth_backends.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 1345,
                "line_range": [
                    1345
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "156         )\n157         self.client.login(username=\"testuser\", password=\"testpw\")\n158         request = HttpRequest()\n",
                "col_offset": 8,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 157,
                "line_range": [
                    157
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "167         )\n168         self.client.login(username=\"testuser\", password=\"testpw\")\n169         request = HttpRequest()\n",
                "col_offset": 8,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 168,
                "line_range": [
                    168
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "171         prev_session_key = request.session.session_key\n172         with override_settings(\n173             SECRET_KEY=\"newsecret\",\n174             SECRET_KEY_FALLBACKS=[settings.SECRET_KEY],\n175         ):\n176             user = get_user(request)\n",
                "col_offset": 13,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'newsecret'",
                "line_number": 172,
                "line_range": [
                    172,
                    173,
                    174,
                    175
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "181         # The session hash should be updated using the current secret.\n182         with override_settings(SECRET_KEY=\"newsecret\"):\n183             user = get_user(request)\n",
                "col_offset": 13,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'newsecret'",
                "line_number": 182,
                "line_range": [
                    182
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "190         )\n191         await self.client.alogin(username=\"testuser\", password=\"testpw\")\n192         request = HttpRequest()\n",
                "col_offset": 14,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 191,
                "line_range": [
                    191
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "194         prev_session_key = request.session.session_key\n195         with override_settings(\n196             SECRET_KEY=\"newsecret\",\n197             SECRET_KEY_FALLBACKS=[settings.SECRET_KEY],\n198         ):\n199             user = await aget_user(request)\n",
                "col_offset": 13,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'newsecret'",
                "line_number": 195,
                "line_range": [
                    195,
                    196,
                    197,
                    198
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "204         # The session hash should be updated using the current secret.\n205         with override_settings(SECRET_KEY=\"newsecret\"):\n206             user = await aget_user(request)\n",
                "col_offset": 13,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_basic.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'newsecret'",
                "line_number": 205,
                "line_range": [
                    205
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "76     def setUpTestData(cls):\n77         cls.superuser = User.objects.create_superuser(\n78             username=\"super\", password=\"secret\", email=\"super@example.com\"\n79         )\n80 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_context_processors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 77,
                "line_range": [
                    77,
                    78,
                    79
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "99     def test_perms_attrs(self):\n100         u = User.objects.create_user(username=\"normal\", password=\"secret\")\n101         u.user_permissions.add(\n",
                "col_offset": 12,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_context_processors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 100,
                "line_range": [
                    100
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "113     def test_perm_in_perms_attrs(self):\n114         u = User.objects.create_user(username=\"normal\", password=\"secret\")\n115         u.user_permissions.add(\n",
                "col_offset": 12,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_context_processors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 114,
                "line_range": [
                    114
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "120         )\n121         self.client.login(username=\"normal\", password=\"secret\")\n122         response = self.client.get(\"/auth_processor_perm_in_perms/\")\n",
                "col_offset": 8,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_context_processors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 121,
                "line_range": [
                    121
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "138         # tests.\n139         self.client.login(username=\"super\", password=\"secret\")\n140         user = authenticate(username=\"super\", password=\"secret\")\n",
                "col_offset": 8,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_context_processors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 139,
                "line_range": [
                    139
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "139         self.client.login(username=\"super\", password=\"secret\")\n140         user = authenticate(username=\"super\", password=\"secret\")\n141         response = self.client.get(\"/auth_processor_user/\")\n",
                "col_offset": 15,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_context_processors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 140,
                "line_range": [
                    140
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "157     def setUpTestData(cls):\n158         cls.user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n159         # Add permissions auth.add_customuser and auth.change_customuser\n",
                "col_offset": 19,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_decorators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 158,
                "line_range": [
                    158
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "322     def setUpTestData(cls):\n323         cls.user_pass = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n324         cls.user_deny = models.User.objects.create(username=\"jim\", password=\"qwerty\")\n",
                "col_offset": 24,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_decorators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 323,
                "line_range": [
                    323
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "323         cls.user_pass = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n324         cls.user_deny = models.User.objects.create(username=\"jim\", password=\"qwerty\")\n325         models.Group.objects.create(name=\"Joe group\")\n",
                "col_offset": 24,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_decorators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 324,
                "line_range": [
                    324
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "48     def setUpTestData(cls):\n49         cls.u1 = User.objects.create_user(\n50             username=\"testclient\", password=\"password\", email=\"testclient@example.com\"\n51         )\n52         cls.u2 = User.objects.create_user(\n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 49,
                "line_range": [
                    49,
                    50,
                    51
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "51         )\n52         cls.u2 = User.objects.create_user(\n53             username=\"inactive\", password=\"password\", is_active=False\n54         )\n55         cls.u3 = User.objects.create_user(username=\"staff\", password=\"password\")\n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 52,
                "line_range": [
                    52,
                    53,
                    54
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "54         )\n55         cls.u3 = User.objects.create_user(username=\"staff\", password=\"password\")\n56         cls.u4 = User.objects.create(username=\"empty_password\", password=\"\")\n",
                "col_offset": 17,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 55,
                "line_range": [
                    55
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "55         cls.u3 = User.objects.create_user(username=\"staff\", password=\"password\")\n56         cls.u4 = User.objects.create(username=\"empty_password\", password=\"\")\n57         cls.u5 = User.objects.create(username=\"unmanageable_password\", password=\"$\")\n",
                "col_offset": 17,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 56,
                "line_range": [
                    56
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "56         cls.u4 = User.objects.create(username=\"empty_password\", password=\"\")\n57         cls.u5 = User.objects.create(username=\"unmanageable_password\", password=\"$\")\n58         cls.u6 = User.objects.create(username=\"unknown_password\", password=\"foo$bar\")\n",
                "col_offset": 17,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: '$'",
                "line_number": 57,
                "line_range": [
                    57
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "57         cls.u5 = User.objects.create(username=\"unmanageable_password\", password=\"$\")\n58         cls.u6 = User.objects.create(username=\"unknown_password\", password=\"foo$bar\")\n59         cls.u7 = User.objects.create(\n",
                "col_offset": 17,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo$bar'",
                "line_number": 58,
                "line_range": [
                    58
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "201         self.assertNotEqual(omega_username, ohm_username)\n202         User.objects.create_user(username=omega_username, password=\"pwd\")\n203         data = {\n",
                "col_offset": 8,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'pwd'",
                "line_number": 202,
                "line_range": [
                    202
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "442 \n443         ExtensionUser.objects.create_user(\n444             username=\"testclient\",\n445             password=\"password\",\n446             email=\"testclient@example.com\",\n447             date_of_birth=datetime.date(1984, 3, 5),\n448         )\n449         data = {\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 443,
                "line_range": [
                    443,
                    444,
                    445,
                    446,
                    447,
                    448
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "605     def test_unicode_username(self):\n606         User.objects.create_user(username=\"\u03a3\u03b1\u03c1\u03b1\", password=\"pwd\")\n607         data = {\n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'pwd'",
                "line_number": 606,
                "line_range": [
                    606
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "685 \n686         user = IntegerUsernameUser.objects.create_user(username=0, password=\"pwd\")\n687         data = {\n",
                "col_offset": 15,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'pwd'",
                "line_number": 686,
                "line_range": [
                    686
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1043         # password field.\n1044         post_data[\"password\"] = \"new password\"\n1045         form = UserChangeForm(instance=user, data=post_data)\n",
                "col_offset": 18,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'new password'",
                "line_number": 1044,
                "line_range": [
                    1044
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1074         ]\n1075         password_reset_link = r'<a class=\"button\" href=\"([^\"]*)\">([^<]*)</a>'\n1076         for username, expected_help_text, expected_button_label in cases:\n",
                "col_offset": 30,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_forms.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: '<a class=\"button\" href=\"([^\"]*)\">([^<]*)</a>'",
                "line_number": 1075,
                "line_range": [
                    1075
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "60             def mock_input(prompt):\n61                 assert \"__proxy__\" not in prompt\n62                 response = None\n",
                "col_offset": 16,
                "end_col_offset": 48,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_management.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 61,
                "line_range": [
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "168     def setUpTestData(cls):\n169         cls.user = User.objects.create_user(username=\"joe\", password=\"qwerty\")\n170 \n",
                "col_offset": 19,
                "end_col_offset": 78,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_management.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 169,
                "line_range": [
                    169
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "190         username = getpass.getuser()\n191         User.objects.create_user(username=username, password=\"qwerty\")\n192         call_command(\"changepassword\", stdout=self.stdout)\n",
                "col_offset": 8,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_management.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 191,
                "line_range": [
                    191
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "251         # 'Julia' with accented 'u':\n252         User.objects.create_user(username=\"J\\xfalia\", password=\"qwerty\")\n253         call_command(\"changepassword\", username=\"J\\xfalia\", stdout=self.stdout)\n",
                "col_offset": 8,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_management.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 252,
                "line_range": [
                    252
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "265         \"\"\"\n266         user = User.objects.db_manager(\"other\").create_user(\n267             username=\"joe\", password=\"qwerty\"\n268         )\n269         self.assertTrue(user.check_password(\"qwerty\"))\n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_management.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 266,
                "line_range": [
                    266,
                    267,
                    268
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "123         ]\n124         self.client.login(username=\"test_user\", password=\"test_password\")\n125         for path in paths:\n",
                "col_offset": 8,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_middleware.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test_password'",
                "line_number": 124,
                "line_range": [
                    124
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "56     def test_stacked_mixins_success(self):\n57         user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n58         perms = models.Permission.objects.filter(\n",
                "col_offset": 15,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_mixins.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 57,
                "line_range": [
                    57
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "73     def test_stacked_mixins_missing_permission(self):\n74         user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n75         perms = models.Permission.objects.filter(codename__in=(\"add_customuser\",))\n",
                "col_offset": 15,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_mixins.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 74,
                "line_range": [
                    74
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "88     def test_access_mixin_permission_denied_response(self):\n89         user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n90         # Authenticated users receive PermissionDenied.\n",
                "col_offset": 15,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_mixins.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 89,
                "line_range": [
                    89
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "117     def test_stacked_mixins_not_logged_in(self):\n118         user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n119         perms = models.Permission.objects.filter(\n",
                "col_offset": 15,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_mixins.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 118,
                "line_range": [
                    118
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "217     def setUpTestData(cls):\n218         cls.user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n219 \n",
                "col_offset": 19,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_mixins.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 218,
                "line_range": [
                    218
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "246     def setUpTestData(cls):\n247         cls.user = models.User.objects.create(username=\"joe\", password=\"qwerty\")\n248         perms = models.Permission.objects.filter(\n",
                "col_offset": 19,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_mixins.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'qwerty'",
                "line_number": 247,
                "line_range": [
                    247
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "159         ):\n160             User.objects.create_superuser(\n161                 username=\"test\",\n162                 email=\"test@test.com\",\n163                 password=\"test\",\n164                 is_superuser=False,\n165             )\n166 \n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 160,
                "line_range": [
                    160,
                    161,
                    162,
                    163,
                    164,
                    165
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "170         ):\n171             await User.objects.acreate_superuser(\n172                 username=\"test\",\n173                 email=\"test@test.com\",\n174                 password=\"test\",\n175                 is_superuser=False,\n176             )\n177 \n",
                "col_offset": 18,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 171,
                "line_range": [
                    171,
                    172,
                    173,
                    174,
                    175,
                    176
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "179         with self.assertRaisesMessage(ValueError, \"Superuser must have is_staff=True.\"):\n180             User.objects.create_superuser(\n181                 username=\"test\",\n182                 email=\"test@test.com\",\n183                 password=\"test\",\n184                 is_staff=False,\n185             )\n186 \n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 180,
                "line_range": [
                    180,
                    181,
                    182,
                    183,
                    184,
                    185
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "188         with self.assertRaisesMessage(ValueError, \"Superuser must have is_staff=True.\"):\n189             await User.objects.acreate_superuser(\n190                 username=\"test\",\n191                 email=\"test@test.com\",\n192                 password=\"test\",\n193                 is_staff=False,\n194             )\n195 \n",
                "col_offset": 18,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 189,
                "line_range": [
                    189,
                    190,
                    191,
                    192,
                    193,
                    194
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "198             UserModel = apps.get_model(\"auth\", \"User\")\n199             user = UserModel.objects.create_user(\"user1\", password=\"secure\")\n200             self.assertIsInstance(user, UserModel)\n",
                "col_offset": 19,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secure'",
                "line_number": 199,
                "line_range": [
                    199
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "226         \"\"\"\n227         self.assertIs(User(password=\"some-gibbberish\").has_usable_password(), True)\n228 \n",
                "col_offset": 22,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'some-gibbberish'",
                "line_number": 227,
                "line_range": [
                    227
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "285     def test_user_clean_normalize_email(self):\n286         user = User(username=\"user\", password=\"foo\", email=\"foo@BAR.com\")\n287         user.clean()\n",
                "col_offset": 15,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 286,
                "line_range": [
                    286
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "293         \"\"\"\n294         user = User.objects.create_user(username=\"user\", password=\"foo\")\n295         user.set_password(\"bar\")\n",
                "col_offset": 15,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 294,
                "line_range": [
                    294
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "309         \"\"\"\n310         user = User.objects.create_user(username=\"user\", password=\"foo\")\n311         initial_password = user.password\n",
                "col_offset": 15,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 310,
                "line_range": [
                    310
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "330     async def test_acheck_password_upgrade(self):\n331         user = await User.objects.acreate_user(username=\"user\", password=\"foo\")\n332         initial_password = user.password\n",
                "col_offset": 21,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 331,
                "line_range": [
                    331
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "249         # authenticated via another backend\n250         User.objects.create_user(username=\"modeluser\", password=\"foo\")\n251         self.client.login(username=\"modeluser\", password=\"foo\")\n",
                "col_offset": 8,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_remote_user.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 250,
                "line_range": [
                    250
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "250         User.objects.create_user(username=\"modeluser\", password=\"foo\")\n251         self.client.login(username=\"modeluser\", password=\"foo\")\n252         authenticate(username=\"modeluser\", password=\"foo\")\n",
                "col_offset": 8,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_remote_user.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 251,
                "line_range": [
                    251
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "251         self.client.login(username=\"modeluser\", password=\"foo\")\n252         authenticate(username=\"modeluser\", password=\"foo\")\n253         response = self.client.get(\"/remote_user/\")\n",
                "col_offset": 8,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_remote_user.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 252,
                "line_range": [
                    252
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "268         # authenticated via another backend\n269         await User.objects.acreate_user(username=\"modeluser\", password=\"foo\")\n270         await self.async_client.alogin(username=\"modeluser\", password=\"foo\")\n",
                "col_offset": 14,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_remote_user.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 269,
                "line_range": [
                    269
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "269         await User.objects.acreate_user(username=\"modeluser\", password=\"foo\")\n270         await self.async_client.alogin(username=\"modeluser\", password=\"foo\")\n271         await aauthenticate(username=\"modeluser\", password=\"foo\")\n",
                "col_offset": 14,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_remote_user.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 270,
                "line_range": [
                    270
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "270         await self.async_client.alogin(username=\"modeluser\", password=\"foo\")\n271         await aauthenticate(username=\"modeluser\", password=\"foo\")\n272         response = await self.async_client.get(\"/remote_user/\")\n",
                "col_offset": 14,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_remote_user.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 271,
                "line_range": [
                    271
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "14     def setUpTestData(cls):\n15         cls.u1 = User.objects.create_user(username=\"testclient\", password=\"password\")\n16         cls.u3 = User.objects.create_user(username=\"staff\", password=\"password\")\n",
                "col_offset": 17,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_signals.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 15,
                "line_range": [
                    15
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "15         cls.u1 = User.objects.create_user(username=\"testclient\", password=\"password\")\n16         cls.u3 = User.objects.create_user(username=\"staff\", password=\"password\")\n17 \n",
                "col_offset": 17,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_signals.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 16,
                "line_range": [
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "42         # Only a successful login will trigger the success signal.\n43         self.client.login(username=\"testclient\", password=\"bad\")\n44         self.assertEqual(len(self.logged_in), 0)\n",
                "col_offset": 8,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_signals.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'bad'",
                "line_number": 43,
                "line_range": [
                    43
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "51         # Like this:\n52         self.client.login(username=\"testclient\", password=\"password\")\n53         self.assertEqual(len(self.logged_in), 1)\n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_signals.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 52,
                "line_range": [
                    52
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "66     def test_logout(self):\n67         self.client.login(username=\"testclient\", password=\"password\")\n68         self.client.post(\"/logout/next_page/\")\n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_signals.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "84     def test_failed_login_without_request(self):\n85         authenticate(username=\"testclient\", password=\"bad\")\n86         self.assertIsNone(self.login_failed[0][\"request\"])\n",
                "col_offset": 8,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_signals.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'bad'",
                "line_number": 85,
                "line_range": [
                    85
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "27         user = User.objects.create_user(\"jsmith\", \"jsmith@example.com\", \"pass\")\n28         user = authenticate(username=user.username, password=\"pass\")\n29         request = cls.request_factory.get(\"/somepath/\")\n",
                "col_offset": 15,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_templates.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'pass'",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "49             with self.subTest(model=model.__qualname__, email=email):\n50                 user = model.objects.create_user(\n51                     \"changeemailuser\",\n52                     email=email,\n53                     password=\"testpw\",\n54                 )\n55                 p0 = PasswordResetTokenGenerator()\n",
                "col_offset": 23,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 50,
                "line_range": [
                    50,
                    51,
                    52,
                    53,
                    54
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "100         user = User.objects.create_user(\"tokentestuser\", \"test2@example.com\", \"testpw\")\n101         new_secret = \"abcdefghijkl\"\n102         # Create and check a token with a different secret.\n",
                "col_offset": 21,
                "end_col_offset": 35,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'abcdefghijkl'",
                "line_number": 101,
                "line_range": [
                    101
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "117         class CustomPasswordResetTokenGenerator(PasswordResetTokenGenerator):\n118             secret = \"test-secret\"\n119 \n",
                "col_offset": 21,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test-secret'",
                "line_number": 118,
                "line_range": [
                    118
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "135 \n136     @override_settings(SECRET_KEY=\"\")\n137     def test_secret_lazy_validation(self):\n",
                "col_offset": 5,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 136,
                "line_range": [
                    136
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "145         p1 = PasswordResetTokenGenerator()\n146         p1.secret = \"secret\"\n147         tk = p1.make_token(user)\n",
                "col_offset": 20,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 146,
                "line_range": [
                    146
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "148         p2 = PasswordResetTokenGenerator()\n149         p2.secret = \"newsecret\"\n150         p2.secret_fallbacks = [\"secret\"]\n",
                "col_offset": 20,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'newsecret'",
                "line_number": 149,
                "line_range": [
                    149
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "160         p1 = PasswordResetTokenGenerator()\n161         p1.secret = \"oldsecret\"\n162         tk = p1.make_token(user)\n",
                "col_offset": 20,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'oldsecret'",
                "line_number": 161,
                "line_range": [
                    161
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "153 \n154     @override_settings(\n155         SECRET_KEY=\"secret\",\n156         SECRET_KEY_FALLBACKS=[\"oldsecret\"],\n157     )\n158     def test_check_token_secret_key_fallbacks(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 154,
                "line_range": [
                    154,
                    155,
                    156,
                    157
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "172         p1 = PasswordResetTokenGenerator()\n173         p1.secret = \"oldsecret\"\n174         tk = p1.make_token(user)\n",
                "col_offset": 20,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'oldsecret'",
                "line_number": 173,
                "line_range": [
                    173
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "165 \n166     @override_settings(\n167         SECRET_KEY=\"secret\",\n168         SECRET_KEY_FALLBACKS=[\"oldsecret\"],\n169     )\n170     def test_check_token_secret_key_fallbacks_override(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_tokens.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 166,
                "line_range": [
                    166,
                    167,
                    168,
                    169
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "163     def test_validate(self):\n164         user = User.objects.create_user(\n165             username=\"testclient\",\n166             password=\"password\",\n167             email=\"testclient@example.com\",\n168             first_name=\"Test\",\n169             last_name=\"Client\",\n170         )\n171         expected_error = \"The password is too similar to the %s.\"\n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_validators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 164,
                "line_range": [
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "234 \n235         user = User.objects.create_user(\n236             username=\"testclient\",\n237             password=\"password\",\n238             email=\"testclient@example.com\",\n239             first_name=\"Test\",\n240             last_name=\"Client\",\n241         )\n242 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_validators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 235,
                "line_range": [
                    235,
                    236,
                    237,
                    238,
                    239,
                    240,
                    241
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "252 \n253         user = User.objects.create_user(\n254             username=\"testclient\",\n255             password=\"password\",\n256             email=\"testclient@example.com\",\n257             first_name=\"Test\",\n258             last_name=\"Client\",\n259         )\n260 \n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_validators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 253,
                "line_range": [
                    253,
                    254,
                    255,
                    256,
                    257,
                    258,
                    259
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "71     def setUpTestData(cls):\n72         cls.u1 = User.objects.create_user(\n73             username=\"testclient\", password=\"password\", email=\"testclient@example.com\"\n74         )\n75         cls.u3 = User.objects.create_user(\n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 72,
                "line_range": [
                    72,
                    73,
                    74
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "74         )\n75         cls.u3 = User.objects.create_user(\n76             username=\"staff\", password=\"password\", email=\"staffmember@example.com\"\n77         )\n78 \n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 75,
                "line_range": [
                    75,
                    76,
                    77
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "78 \n79     def login(self, username=\"testclient\", password=\"password\", url=\"/login/\"):\n80         response = self.client.post(\n81             url,\n82             {\n83                 \"username\": username,\n84                 \"password\": password,\n85             },\n86         )\n87         self.assertIn(SESSION_KEY, self.client.session)\n88         return response\n89 \n",
                "col_offset": 4,
                "end_col_offset": 23,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 79,
                "line_range": [
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b107_hardcoded_password_default.html",
                "test_id": "B107",
                "test_name": "hardcoded_password_default"
            },
            {
                "code": "382         path = path.replace(\"/reset/\", \"/reset/custom/token/\")\n383         self.client.reset_url_token = \"set-passwordcustom\"\n384         response = self.client.post(\n",
                "col_offset": 38,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'set-passwordcustom'",
                "line_number": 383,
                "line_range": [
                    383
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "546         # instead of fixture\n547         UUIDUser.objects.create_user(\n548             email=self.user_email,\n549             username=\"foo\",\n550             password=\"foo\",\n551         )\n552         return super()._test_confirm_start()\n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 547,
                "line_range": [
                    547,
                    548,
                    549,
                    550,
                    551
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "621         self.fail_login()\n622         self.login(password=\"password1\")\n623 \n",
                "col_offset": 8,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password1'",
                "line_number": 622,
                "line_range": [
                    622
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "915 \n916         self.login(password=\"foobar\")\n917         self.assertNotEqual(original_session_key, self.client.session.session_key)\n",
                "col_offset": 8,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foobar'",
                "line_number": 916,
                "line_range": [
                    916
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1555         self.logout()\n1556         self.login(password=\"password1\")\n1557 \n",
                "col_offset": 8,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password1'",
                "line_number": 1556,
                "line_range": [
                    1556
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1577         # No password change yet.\n1578         self.login(password=\"password1\")\n1579 \n",
                "col_offset": 8,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password1'",
                "line_number": 1578,
                "line_range": [
                    1578
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1599         with self.assertRaises(AssertionError):\n1600             self.login(password=\"password1\")\n1601         self.admin.refresh_from_db()\n",
                "col_offset": 12,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password1'",
                "line_number": 1600,
                "line_range": [
                    1600
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1708         data = self.get_user_data(u)\n1709         data[\"password\"] = \"shouldnotchange\"\n1710         change_url = reverse(\"auth_test_admin:auth_user_change\", args=(u.pk,))\n",
                "col_offset": 13,
                "end_col_offset": 23,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'shouldnotchange'",
                "line_number": 1709,
                "line_range": [
                    1709
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1722     def test_admin_password_change(self):\n1723         u = UUIDUser.objects.create_superuser(\n1724             username=\"uuid\", email=\"foo@bar.com\", password=\"test\"\n1725         )\n1726         self.assertTrue(self.client.login(username=\"uuid\", password=\"test\"))\n",
                "col_offset": 12,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1723,
                "line_range": [
                    1723,
                    1724,
                    1725
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1725         )\n1726         self.assertTrue(self.client.login(username=\"uuid\", password=\"test\"))\n1727 \n",
                "col_offset": 24,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\test_views.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1726,
                "line_range": [
                    1726
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "23     def __init__(self, request, *args, **kwargs):\n24         assert isinstance(request, HttpRequest)\n25         super().__init__(request, *args, **kwargs)\n",
                "col_offset": 8,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\urls.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "182         \"reset/custom/token/<uidb64>/<token>/\",\n183         views.PasswordResetConfirmView.as_view(reset_url_token=\"set-passwordcustom\"),\n184     ),\n",
                "col_offset": 8,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\tests\\auth_tests\\urls.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'set-passwordcustom'",
                "line_number": 183,
                "line_range": [
                    183
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "125         # by putting a false condition in the WHERE clause.\n126         sql = \"DELETE FROM {} WHERE 0=1 AND 0=%s\".format(Square._meta.db_table)\n127         if params is None:\n",
                "col_offset": 14,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\tests\\backends\\base\\test_base.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 126,
                "line_range": [
                    126
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "1 import subprocess\n2 import unittest\n3 from io import StringIO\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\backends\\mysql\\test_creation.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "47             cursor.execute(\n48                 f\"CREATE VIEW {person_view} \"\n49                 f\"AS SELECT {first_name_column} FROM {person_table}\"\n50             )\n",
                "col_offset": 16,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\backends\\oracle\\test_introspection.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 48,
                "line_range": [
                    48,
                    49
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "73             cursor.execute(\n74                 f\"CREATE MATERIALIZED VIEW {person_mview} \"\n75                 f\"DEFAULT COLLATION {collation} \"\n76                 f\"AS SELECT {first_name_column} FROM {person_table}\"\n77             )\n",
                "col_offset": 16,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\backends\\oracle\\test_introspection.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 74,
                "line_range": [
                    74,
                    75,
                    76
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "109         old_password = connection.settings_dict[\"PASSWORD\"]\n110         connection.settings_dict[\"PASSWORD\"] = \"p@ssword\"\n111         try:\n",
                "col_offset": 33,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\backends\\oracle\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'p@ssword'",
                "line_number": 110,
                "line_range": [
                    110
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "34             cursor.execute(\n35                 \"SELECT {fields} FROM pg_cursors;\".format(fields=self.cursor_fields)\n36             )\n",
                "col_offset": 16,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\backends\\postgresql\\test_server_side_cursors.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 35,
                "line_range": [
                    35
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "86         \"\"\"last_executed_query() returns a string.\"\"\"\n87         data = RawData.objects.filter(raw_data=b\"\\x00\\x46  \\xFE\").extra(\n88             select={\"f\u00f6\u00f6\": 1}\n89         )\n90         sql, params = data.query.sql_with_params()\n",
                "col_offset": 15,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 87,
                "line_range": [
                    87,
                    88,
                    89
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "116         square_opts = Square._meta\n117         sql = \"INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(square)s)\" % (\n118             connection.introspection.identifier_converter(square_opts.db_table),\n119             connection.ops.quote_name(square_opts.get_field(\"root\").column),\n120             connection.ops.quote_name(square_opts.get_field(\"square\").column),\n121         )\n122         with connection.cursor() as cursor:\n",
                "col_offset": 14,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 117,
                "line_range": [
                    117,
                    118,
                    119,
                    120,
                    121
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "132         square_opts = Square._meta\n133         sql = \"INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(root2)s)\" % (\n134             connection.introspection.identifier_converter(square_opts.db_table),\n135             connection.ops.quote_name(square_opts.get_field(\"root\").column),\n136             connection.ops.quote_name(square_opts.get_field(\"square\").column),\n137         )\n138         with connection.cursor() as cursor:\n",
                "col_offset": 14,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 133,
                "line_range": [
                    133,
                    134,
                    135,
                    136,
                    137
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "150         root_column = connection.ops.quote_name(square_opts.get_field(\"root\").column)\n151         sql = f\"UPDATE {table} SET {root_column} = %s + %s WHERE {id_column} = %s\"\n152         with connection.cursor() as cursor:\n",
                "col_offset": 14,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 151,
                "line_range": [
                    151
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "159                 last_executed_query,\n160                 f\"UPDATE {table} SET {root_column} = 42 + 42 WHERE {id_column} = 1\",\n161             )\n",
                "col_offset": 16,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 160,
                "line_range": [
                    160
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "170         with connection.cursor() as cursor:\n171             query = \"INSERT INTO %s (%s, %s) VALUES (%%s, %%s)\" % (\n172                 connection.introspection.identifier_converter(\"backends_square\"),\n173                 connection.ops.quote_name(\"root\"),\n174                 connection.ops.quote_name(\"square\"),\n175             )\n176             with self.assertRaises(Exception):\n",
                "col_offset": 20,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 171,
                "line_range": [
                    171,
                    172,
                    173,
                    174,
                    175
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "311         if paramstyle == \"format\":\n312             query = \"INSERT INTO %s (%s, %s) VALUES (%%s, %%s)\" % (tbl, f1, f2)\n313         elif paramstyle == \"pyformat\":\n",
                "col_offset": 20,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 312,
                "line_range": [
                    312
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "313         elif paramstyle == \"pyformat\":\n314             query = \"INSERT INTO %s (%s, %s) VALUES (%%(root)s, %%(square)s)\" % (\n315                 tbl,\n316                 f1,\n317                 f2,\n318             )\n319         else:\n",
                "col_offset": 20,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 314,
                "line_range": [
                    314,
                    315,
                    316,
                    317,
                    318
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "394             cursor.execute(\n395                 \"SELECT %s, %s FROM %s ORDER BY %s\"\n396                 % (\n397                     qn(f3.column),\n398                     qn(f4.column),\n399                     connection.introspection.identifier_converter(opts2.db_table),\n400                     qn(f3.column),\n401                 )\n402             )\n",
                "col_offset": 16,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 395,
                "line_range": [
                    395,
                    396,
                    397,
                    398,
                    399,
                    400,
                    401
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "412         old_password = connection.settings_dict[\"PASSWORD\"]\n413         connection.settings_dict[\"PASSWORD\"] = \"fran\u00e7ois\"\n414         try:\n",
                "col_offset": 33,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'fran\u00e7ois'",
                "line_number": 413,
                "line_range": [
                    413
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "493                 connection.close()\n494             except Exception:\n495                 pass\n496 \n",
                "col_offset": 12,
                "end_col_offset": 20,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 494,
                "line_range": [
                    494,
                    495
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "514 \n515         sql = \"INSERT INTO %s (%s, %s) VALUES (%%s, %%s)\" % (\n516             connection.introspection.identifier_converter(\"backends_square\"),\n517             connection.ops.quote_name(\"root\"),\n518             connection.ops.quote_name(\"square\"),\n519         )\n520         with connection.cursor() as cursor:\n",
                "col_offset": 14,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\backends\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 515,
                "line_range": [
                    515,
                    516,
                    517,
                    518,
                    519
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "23 \n24         assert isinstance(data, bytes), \"write() argument must be bytestring\"\n25 \n",
                "col_offset": 8,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\builtin_server\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "127     file_field = models.FileField(null=True, default=\"file.txt\")\n128     file_path_field = models.FilePathField(path=\"/tmp\", null=True, default=\"file.txt\")\n129     generic_ip_address_field = models.GenericIPAddressField(\n",
                "col_offset": 48,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\tests\\bulk_create\\models.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 128,
                "line_range": [
                    128
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "5 import os\n6 import pickle\n7 import re\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\cache\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 6,
                "line_range": [
                    6
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "1573             cache.set(\"small_value\", large_value)\n1574         except Exception:\n1575             # Most clients (e.g. pymemcache or pylibmc) raise when the value is\n1576             # too large. This test is primarily checking that the key was\n1577             # deleted, so the return/exception behavior for the set() itself is\n1578             # not important.\n1579             pass\n1580         # small_value should be deleted, or set if configured to accept larger values\n",
                "col_offset": 8,
                "end_col_offset": 16,
                "filename": "open_source_repos\\django\\tests\\cache\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Try, Except, Pass detected.",
                "line_number": 1574,
                "line_range": [
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1579
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b110_try_except_pass.html",
                "test_id": "B110",
                "test_name": "try_except_pass"
            },
            {
                "code": "418 \n419     @override_settings(SECRET_KEY=\"\")\n420     def test_empty_secret_key(self):\n",
                "col_offset": 5,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\check_framework\\test_security.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 419,
                "line_range": [
                    419
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "38 # This is a test (unmasked) CSRF cookie / secret.\n39 TEST_SECRET = \"lcccccccX2kcccccccY2jcccccccssIC\"\n40 # Two masked versions of TEST_SECRET for testing purposes.\n",
                "col_offset": 14,
                "end_col_offset": 48,
                "filename": "open_source_repos\\django\\tests\\csrf_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'lcccccccX2kcccccccY2jcccccccssIC'",
                "line_number": 39,
                "line_range": [
                    39
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "269         if token_header is None:\n270             token_header = \"HTTP_X_CSRFTOKEN\"\n271         req = self._get_request(\n",
                "col_offset": 27,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\csrf_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'HTTP_X_CSRFTOKEN'",
                "line_number": 270,
                "line_range": [
                    270
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "421         )\n422         self._check_bad_or_missing_token(\n423             expected,\n424             meta_token=16 * \"a\",\n425             token_header=\"HTTP_X_CSRFTOKEN_CUSTOMIZED\",\n426         )\n427 \n",
                "col_offset": 8,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\csrf_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'HTTP_X_CSRFTOKEN_CUSTOMIZED'",
                "line_number": 422,
                "line_range": [
                    422,
                    423,
                    424,
                    425,
                    426
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "463         \"\"\"\n464         req = self._get_POST_csrf_cookie_request(\n465             meta_token=self._csrf_id_token,\n466             token_header=\"HTTP_X_CSRFTOKEN_CUSTOMIZED\",\n467         )\n468         mw = CsrfViewMiddleware(post_form_view)\n",
                "col_offset": 14,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\csrf_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'HTTP_X_CSRFTOKEN_CUSTOMIZED'",
                "line_number": 464,
                "line_range": [
                    464,
                    465,
                    466,
                    467
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2 import signal\n3 import subprocess\n4 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\dbshell\\test_mysql.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "221         with self.assertRaises(subprocess.CalledProcessError) as ctx:\n222             subprocess.run(args, check=True, env=env)\n223         self.assertNotIn(\"somepassword\", str(ctx.exception))\n",
                "col_offset": 12,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\dbshell\\test_mysql.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 222,
                "line_range": [
                    222
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "2 import signal\n3 import subprocess\n4 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\dbshell\\test_postgresql.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "137         username = \"r\u00f4le\"\n138         password = \"s\u00e9same\"\n139         self.assertEqual(\n",
                "col_offset": 19,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\dbshell\\test_postgresql.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 's\u00e9same'",
                "line_number": 138,
                "line_range": [
                    138
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "185         with self.assertRaises(subprocess.CalledProcessError) as ctx:\n186             subprocess.run(args, check=True, env=env)\n187         self.assertNotIn(\"somepassword\", str(ctx.exception))\n",
                "col_offset": 12,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\dbshell\\test_postgresql.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 186,
                "line_range": [
                    186
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "1 import subprocess\n2 from pathlib import Path\n3 from unittest import mock, skipUnless\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\dbshell\\test_sqlite.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "12 \n13 CSRF_TOKEN = \"1bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD\"\n14 \n",
                "col_offset": 13,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\tests\\decorators\\test_csrf.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: '1bcdefghij2bcdefghij3bcdefghij4bcdefghij5bcdefghij6bcdefghijABCD'",
                "line_number": 13,
                "line_range": [
                    13
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "86         qs = Primary.objects.all()\n87         self.assert_delayed(qs.defer(\"name\").extra(select={\"a\": 1})[0], 1)\n88         self.assert_delayed(qs.extra(select={\"a\": 1}).defer(\"name\")[0], 1)\n",
                "col_offset": 28,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\defer\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 87,
                "line_range": [
                    87
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "87         self.assert_delayed(qs.defer(\"name\").extra(select={\"a\": 1})[0], 1)\n88         self.assert_delayed(qs.extra(select={\"a\": 1}).defer(\"name\")[0], 1)\n89 \n",
                "col_offset": 28,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\defer\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 88,
                "line_range": [
                    88
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "1 import datetime\n2 import pickle\n3 import unittest\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\expressions\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "1006         expr.convert_value  # populate cached property\n1007         self.assertEqual(pickle.loads(pickle.dumps(expr)), expr)\n1008 \n",
                "col_offset": 25,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\expressions\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 1007,
                "line_range": [
                    1007
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "11     def setUpTestData(cls):\n12         cls.u = User.objects.create_user(\n13             username=\"fred\", password=\"secret\", email=\"fred@example.com\"\n14         )\n15 \n",
                "col_offset": 16,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 12,
                "line_range": [
                    12,
                    13,
                    14
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "36         # Queryset to match most recent revision:\n37         qs = RevisionableModel.objects.extra(\n38             where=[\n39                 \"%(table)s.id IN \"\n40                 \"(SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)\"\n41                 % {\n42                     \"table\": RevisionableModel._meta.db_table,\n43                 }\n44             ]\n45         )\n46 \n",
                "col_offset": 13,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 37,
                "line_range": [
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "38             where=[\n39                 \"%(table)s.id IN \"\n40                 \"(SELECT MAX(rev.id) FROM %(table)s rev GROUP BY rev.base_id)\"\n41                 % {\n42                     \"table\": RevisionableModel._meta.db_table,\n43                 }\n44             ]\n",
                "col_offset": 16,
                "end_col_offset": 78,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 39,
                "line_range": [
                    39,
                    40,
                    41,
                    42,
                    43
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "79         )\n80         qs = qs.extra(select={\"beta\": 4})\n81         qs = qs.extra(select={\"alpha\": \"%s\"}, select_params=[5])\n",
                "col_offset": 13,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 80,
                "line_range": [
                    80
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "156         self.assertSequenceEqual(\n157             User.objects.filter(pk=self.u.id)\n158             .extra(select={\"extra_field\": 1})\n159             .distinct(),\n",
                "col_offset": 12,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 157,
                "line_range": [
                    157,
                    158
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "162         self.assertSequenceEqual(\n163             User.objects.filter(pk=self.u.id).extra(\n164                 select={\"extra_field\": 1}, order_by=[\"extra_field\"]\n165             ),\n166             [self.u],\n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 163,
                "line_range": [
                    163,
                    164,
                    165
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "168         self.assertSequenceEqual(\n169             User.objects.filter(pk=self.u.id)\n170             .extra(select={\"extra_field\": 1}, order_by=[\"extra_field\"])\n171             .distinct(),\n",
                "col_offset": 12,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 169,
                "line_range": [
                    169,
                    170
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "396         self.assertEqual(\n397             list(TestObject.objects.extra(select={\"extra\": 1}).values(\"pk\")),\n398             [{\"pk\": obj.pk}],\n",
                "col_offset": 17,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 397,
                "line_range": [
                    397
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "402             TestObject.objects.filter(\n403                 pk__in=TestObject.objects.extra(select={\"extra\": 1}).values(\"pk\")\n404             ),\n",
                "col_offset": 23,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 403,
                "line_range": [
                    403
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "408         self.assertEqual(\n409             list(TestObject.objects.values(\"pk\").extra(select={\"extra\": 1})),\n410             [{\"pk\": obj.pk}],\n",
                "col_offset": 17,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 409,
                "line_range": [
                    409
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "414             TestObject.objects.filter(\n415                 pk__in=TestObject.objects.values(\"pk\").extra(select={\"extra\": 1})\n416             ),\n",
                "col_offset": 23,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\tests\\extra_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 415,
                "line_range": [
                    415
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "46         # to make sure it only gets called once.\n47         return \"%s/%s\" % (random.randint(100, 999), filename)\n48 \n",
                "col_offset": 26,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\file_storage\\models.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 47,
                "line_range": [
                    47
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "73         candidates = [\n74             (\"/tmp/..\", \"..\"),\n75             (\"\\\\tmp\\\\..\", \"..\"),\n",
                "col_offset": 13,
                "end_col_offset": 22,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 74,
                "line_range": [
                    74
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "75             (\"\\\\tmp\\\\..\", \"..\"),\n76             (\"/tmp/.\", \".\"),\n77             (\"\\\\tmp\\\\.\", \".\"),\n",
                "col_offset": 13,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 76,
                "line_range": [
                    76
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "99             (\"tmp\\\\..\\\\path\", \"tmp/..\"),\n100             (\"/tmp/../path\", \"/tmp/..\"),\n101             (\"\\\\tmp\\\\..\\\\path\", \"/tmp/..\"),\n",
                "col_offset": 13,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 100,
                "line_range": [
                    100
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "99             (\"tmp\\\\..\\\\path\", \"tmp/..\"),\n100             (\"/tmp/../path\", \"/tmp/..\"),\n101             (\"\\\\tmp\\\\..\\\\path\", \"/tmp/..\"),\n",
                "col_offset": 29,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 100,
                "line_range": [
                    100
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "100             (\"/tmp/../path\", \"/tmp/..\"),\n101             (\"\\\\tmp\\\\..\\\\path\", \"/tmp/..\"),\n102         ]\n",
                "col_offset": 32,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 101,
                "line_range": [
                    101
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "138         candidates = [\n139             \"/tmp/path\",\n140             \"/tmp/../path\",\n141         ]\n142         for file_name in candidates:\n143             msg = f\"Detected path traversal attempt in '{file_name}'\"\n",
                "col_offset": 12,
                "end_col_offset": 23,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 139,
                "line_range": [
                    138,
                    139,
                    140,
                    141
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "139             \"/tmp/path\",\n140             \"/tmp/../path\",\n141         ]\n142         for file_name in candidates:\n143             msg = f\"Detected path traversal attempt in '{file_name}'\"\n144             with self.subTest(file_name=file_name):\n",
                "col_offset": 12,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 140,
                "line_range": [
                    138,
                    139,
                    140,
                    141
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "170         candidates = [\n171             \"/tmp/.\",\n172             \"/tmp/..\",\n173             \"/tmp/../path\",\n174             \"/tmp/path\",\n175             \"some/folder/\",\n176             \"some/folder/.\",\n177             \"some/folder/..\",\n178             \"some/folder/???\",\n179             \"some/folder/$.$.$\",\n180             \"some/../test.txt\",\n181             \"\",\n182         ]\n183         for file_name in candidates:\n184             with self.subTest(file_name=file_name):\n",
                "col_offset": 12,
                "end_col_offset": 20,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 171,
                "line_range": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "171             \"/tmp/.\",\n172             \"/tmp/..\",\n173             \"/tmp/../path\",\n174             \"/tmp/path\",\n175             \"some/folder/\",\n176             \"some/folder/.\",\n177             \"some/folder/..\",\n178             \"some/folder/???\",\n179             \"some/folder/$.$.$\",\n180             \"some/../test.txt\",\n181             \"\",\n182         ]\n183         for file_name in candidates:\n184             with self.subTest(file_name=file_name):\n185                 self.assertEqual(f.generate_filename(None, file_name), \"test.txt\")\n",
                "col_offset": 12,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 172,
                "line_range": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "172             \"/tmp/..\",\n173             \"/tmp/../path\",\n174             \"/tmp/path\",\n175             \"some/folder/\",\n176             \"some/folder/.\",\n177             \"some/folder/..\",\n178             \"some/folder/???\",\n179             \"some/folder/$.$.$\",\n180             \"some/../test.txt\",\n181             \"\",\n182         ]\n183         for file_name in candidates:\n184             with self.subTest(file_name=file_name):\n185                 self.assertEqual(f.generate_filename(None, file_name), \"test.txt\")\n186 \n",
                "col_offset": 12,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 173,
                "line_range": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "173             \"/tmp/../path\",\n174             \"/tmp/path\",\n175             \"some/folder/\",\n176             \"some/folder/.\",\n177             \"some/folder/..\",\n178             \"some/folder/???\",\n179             \"some/folder/$.$.$\",\n180             \"some/../test.txt\",\n181             \"\",\n182         ]\n183         for file_name in candidates:\n184             with self.subTest(file_name=file_name):\n185                 self.assertEqual(f.generate_filename(None, file_name), \"test.txt\")\n186 \n187     def test_filefield_generate_filename_upload_to_absolute_path(self):\n",
                "col_offset": 12,
                "end_col_offset": 23,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 174,
                "line_range": [
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "188         def upload_to(instance, filename):\n189             return \"/tmp/\" + filename\n190 \n",
                "col_offset": 19,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 189,
                "line_range": [
                    189
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "205         def upload_to(instance, filename):\n206             return \"/tmp/\" + filename\n207 \n",
                "col_offset": 19,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\tests\\file_storage\\test_generate_filename.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 206,
                "line_range": [
                    206
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "1252         \"\"\"\n1253         file_like_object = urlopen(self.live_server_url + \"/\")\n1254         f = File(file_like_object)\n",
                "col_offset": 27,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\file_storage\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 1253,
                "line_range": [
                    1253
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "1256 \n1257         remote_file = urlopen(self.live_server_url + \"/\")\n1258         with self.storage.open(stored_filename) as stored_file:\n",
                "col_offset": 22,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\file_storage\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 1257,
                "line_range": [
                    1257
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "49         if isinstance(value, UploadedFile):\n50             new_hash = hashlib.sha1(value.read()).hexdigest()\n51         else:\n",
                "col_offset": 23,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\tests\\file_uploads\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 50,
                "line_range": [
                    50
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "51         else:\n52             new_hash = hashlib.sha1(value.encode()).hexdigest()\n53         if new_hash != submitted_hash:\n",
                "col_offset": 23,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\file_uploads\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 52,
                "line_range": [
                    52
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "2 import datetime\n3 import pickle\n4 from operator import attrgetter\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\foreign_object\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "694         self.assertIn(\"path_infos\", foreign_object_rel.__dict__)\n695         foreign_object_rel_restored = pickle.loads(pickle.dumps(foreign_object_rel))\n696         self.assertNotIn(\"path_infos\", foreign_object_rel_restored.__dict__)\n",
                "col_offset": 38,
                "end_col_offset": 84,
                "filename": "open_source_repos\\django\\tests\\foreign_object\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 695,
                "line_range": [
                    695
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "711         self.assertIn(\"reverse_path_infos\", foreign_object.__dict__)\n712         foreign_object_restored = pickle.loads(pickle.dumps(foreign_object))\n713         self.assertIn(\"path_infos\", foreign_object_restored.__dict__)\n",
                "col_offset": 34,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\foreign_object\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 712,
                "line_range": [
                    712
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1 import pickle\n2 \n3 from django.core.exceptions import ValidationError\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\field_tests\\test_booleanfield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "41     def test_boolean_picklable(self):\n42         self.assertIsInstance(pickle.loads(pickle.dumps(BooleanField())), BooleanField)\n43 \n",
                "col_offset": 30,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\field_tests\\test_booleanfield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 42,
                "line_range": [
                    42
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1 import pickle\n2 import unittest\n3 \n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\field_tests\\test_filefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "120     def test_file_picklable(self):\n121         self.assertIsInstance(pickle.loads(pickle.dumps(FileField())), FileField)\n122 \n",
                "col_offset": 30,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\field_tests\\test_filefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 121,
                "line_range": [
                    121
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "242                     return \"\"\n243                 return mark_safe(\n244                     '<div class=\"error\">%s</div>'\n245                     % \"\".join(\"<p>%s</p>\" % e for e in self)\n246                 )\n247 \n",
                "col_offset": 23,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_error_messages.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 243,
                "line_range": [
                    243,
                    244,
                    245,
                    246
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "242                     return \"\"\n243                 return mark_safe(\n244                     '<div class=\"error\">%s</div>'\n245                     % \"\".join(\"<p>%s</p>\" % e for e in self)\n246                 )\n247 \n",
                "col_offset": 23,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_error_messages.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 243,
                "line_range": [
                    243,
                    244,
                    245,
                    246
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "1391             special_name = CharField(label=\"<em>Special</em> Field\")\n1392             special_safe_name = CharField(label=mark_safe(\"<em>Special</em> Field\"))\n1393 \n",
                "col_offset": 48,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_forms.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 1392,
                "line_range": [
                    1392
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "1400                 raise ValidationError(\n1401                     mark_safe(\n1402                         \"'<b>%s</b>' is a safe string\"\n1403                         % self.cleaned_data[\"special_safe_name\"]\n1404                     )\n1405                 )\n",
                "col_offset": 20,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_forms.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 1401,
                "line_range": [
                    1401,
                    1402,
                    1403,
                    1404
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "1400                 raise ValidationError(\n1401                     mark_safe(\n1402                         \"'<b>%s</b>' is a safe string\"\n1403                         % self.cleaned_data[\"special_safe_name\"]\n1404                     )\n1405                 )\n",
                "col_offset": 20,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_forms.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 1401,
                "line_range": [
                    1401,
                    1402,
                    1403,
                    1404
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "4088             ((\"custom&\",), {}, '<%(tag)s for=\"id_field\">custom&amp;:</%(tag)s>'),\n4089             ((mark_safe(\"custom&\"),), {}, '<%(tag)s for=\"id_field\">custom&:</%(tag)s>'),\n4090             # Passing attrs to add extra attributes on the <label>\n",
                "col_offset": 14,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_forms.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 4089,
                "line_range": [
                    4089
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "147         self.assertHTMLEqual(\n148             str(ErrorList([mark_safe(example)])),\n149             '<ul class=\"errorlist\"><li>Example of link: '\n",
                "col_offset": 27,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 148,
                "line_range": [
                    148
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "158         self.assertHTMLEqual(\n159             str(ErrorDict({\"name\": mark_safe(example)})),\n160             '<ul class=\"errorlist\"><li>nameExample of link: '\n",
                "col_offset": 35,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\tests\\test_utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 159,
                "line_range": [
                    159
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "258     def test_choices_escaping(self):\n259         choices = ((\"bad\", \"you & me\"), (\"good\", mark_safe(\"you &gt; me\")))\n260         html = \"\"\"\n",
                "col_offset": 49,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\widget_tests\\test_radioselect.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 259,
                "line_range": [
                    259
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "201     def test_choices_escaping(self):\n202         choices = ((\"bad\", \"you & me\"), (\"good\", mark_safe(\"you &gt; me\")))\n203         self.check_html(\n",
                "col_offset": 49,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\widget_tests\\test_select.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 202,
                "line_range": [
                    202
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "58             \"msg\",\n59             mark_safe(\"pre &quot;quoted&quot; value\"),\n60             html=(\n",
                "col_offset": 12,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\widget_tests\\test_textarea.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 59,
                "line_range": [
                    59
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "108     def test_attrs_safestring(self):\n109         widget = TextInput(attrs={\"onBlur\": mark_safe(\"function('foo')\")})\n110         self.check_html(\n",
                "col_offset": 44,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\forms_tests\\widget_tests\\test_textinput.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 109,
                "line_range": [
                    109
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25     def setUpTestData(cls):\n26         cls.superuser = User.objects.create_superuser(\n27             username=\"super\", password=\"secret\", email=\"super@example.com\"\n28         )\n29 \n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\generic_inline_admin\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 26,
                "line_range": [
                    26,
                    27,
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "261             def dispatch(self, request, *args, **kwargs):\n262                 assert hasattr(self, \"attr\")\n263                 return super().dispatch(request, *args, **kwargs)\n",
                "col_offset": 16,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\tests\\generic_views\\test_base.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 262,
                "line_range": [
                    262
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1 import json\n2 import pickle\n3 \n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\gdal_tests\\test_geom.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "494         g1 = OGRGeometry(\"LINESTRING(1 1 1,2 2 2,3 3 3)\", \"WGS84\")\n495         g2 = pickle.loads(pickle.dumps(g1))\n496         self.assertEqual(g1, g2)\n",
                "col_offset": 13,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\gdal_tests\\test_geom.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 495,
                "line_range": [
                    495
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1 from xml.dom import minidom\n2 \n3 from django.conf import settings\n",
                "col_offset": 0,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_feeds.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "27         # Uses `GEOSGeometry` in `item_geometry`\n28         doc1 = minidom.parseString(self.client.get(\"/feeds/rss1/\").content)\n29         # Uses a 2-tuple in `item_geometry`\n",
                "col_offset": 15,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_feeds.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "29         # Uses a 2-tuple in `item_geometry`\n30         doc2 = minidom.parseString(self.client.get(\"/feeds/rss2/\").content)\n31         feed1, feed2 = doc1.firstChild, doc2.firstChild\n",
                "col_offset": 15,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_feeds.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 30,
                "line_range": [
                    30
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "65         \"Testing geographic feeds using GeoRSS over Atom.\"\n66         doc1 = minidom.parseString(self.client.get(\"/feeds/atom1/\").content)\n67         doc2 = minidom.parseString(self.client.get(\"/feeds/atom2/\").content)\n",
                "col_offset": 15,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_feeds.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 66,
                "line_range": [
                    66
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "66         doc1 = minidom.parseString(self.client.get(\"/feeds/atom1/\").content)\n67         doc2 = minidom.parseString(self.client.get(\"/feeds/atom2/\").content)\n68         feed1, feed2 = doc1.firstChild, doc2.firstChild\n",
                "col_offset": 15,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_feeds.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "90         \"Testing geographic feeds using W3C Geo.\"\n91         doc = minidom.parseString(self.client.get(\"/feeds/w3cgeo1/\").content)\n92         feed = doc.firstChild\n",
                "col_offset": 14,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_feeds.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 91,
                "line_range": [
                    91
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "2 from io import BytesIO\n3 from xml.dom import minidom\n4 \n",
                "col_offset": 0,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_sitemaps.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "29         for kml_type in (\"kml\", \"kmz\"):\n30             doc = minidom.parseString(\n31                 self.client.get(\"/sitemaps/%s.xml\" % kml_type).content\n32             )\n33 \n",
                "col_offset": 18,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_sitemaps.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 30,
                "line_range": [
                    30,
                    31,
                    32
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "53                 if kml_type == \"kml\":\n54                     kml_doc = minidom.parseString(self.client.get(kml_url).content)\n55                 elif kml_type == \"kmz\":\n",
                "col_offset": 30,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_sitemaps.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 54,
                "line_range": [
                    54
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "60                         self.assertEqual(\"doc.kml\", zf.filelist[0].filename)\n61                         kml_doc = minidom.parseString(zf.read(\"doc.kml\"))\n62 \n",
                "col_offset": 34,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\test_sitemaps.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 61,
                "line_range": [
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "208             City.objects.raw(\n209                 \"select id, name, %s as point from geoapp_city\" % point_select\n210             )\n",
                "col_offset": 16,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geoapp\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 209,
                "line_range": [
                    209
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "4 import math\n5 import pickle\n6 import random\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geos_tests\\test_geos.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 5,
                "line_range": [
                    5
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "994                 pnt = mp[i]\n995                 new = Point(random.randint(21, 100), random.randint(21, 100))\n996                 # Testing the assignment\n",
                "col_offset": 28,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geos_tests\\test_geos.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 995,
                "line_range": [
                    995
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "994                 pnt = mp[i]\n995                 new = Point(random.randint(21, 100), random.randint(21, 100))\n996                 # Testing the assignment\n",
                "col_offset": 53,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geos_tests\\test_geos.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 995,
                "line_range": [
                    995
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "1369             s1 = pickle.dumps(geom)\n1370             g1 = pickle.loads(s1)\n1371             self.assertEqual(geom, g1)\n",
                "col_offset": 17,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\tests\\gis_tests\\geos_tests\\test_geos.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 1370,
                "line_range": [
                    1370
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "14         # TemplateResponse-based exception response.\n15         assert response.content\n16         return response\n",
                "col_offset": 8,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\handlers\\tests_custom_error_handlers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 15,
                "line_range": [
                    15
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "3 import os\n4 import pickle\n5 import unittest\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\httpwrappers\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 4,
                "line_range": [
                    4
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "229         q = QueryDict()\n230         q1 = pickle.loads(pickle.dumps(q, 2))\n231         self.assertEqual(q, q1)\n",
                "col_offset": 13,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\httpwrappers\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 230,
                "line_range": [
                    230
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "232         q = QueryDict(\"a=b&c=d\")\n233         q1 = pickle.loads(pickle.dumps(q, 2))\n234         self.assertEqual(q, q1)\n",
                "col_offset": 13,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\httpwrappers\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 233,
                "line_range": [
                    233
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "235         q = QueryDict(\"a=b&c=d&a=1\")\n236         q1 = pickle.loads(pickle.dumps(q, 2))\n237         self.assertEqual(q, q1)\n",
                "col_offset": 13,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\httpwrappers\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 236,
                "line_range": [
                    236
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "972         for proto in range(pickle.HIGHEST_PROTOCOL + 1):\n973             C1 = pickle.loads(pickle.dumps(C, protocol=proto))\n974             self.assertEqual(C1.output(), expected_output)\n",
                "col_offset": 17,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\httpwrappers\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 973,
                "line_range": [
                    973
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "510         result_list_with_tz_support = result_list[:]\n511         assert result_list_with_tz_support[-4] == \"2\\xa0days, 6\\xa0hours from now\"\n512         result_list_with_tz_support[-4] == \"2\\xa0days, 5\\xa0hours from now\"\n",
                "col_offset": 8,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\tests\\humanize_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 511,
                "line_range": [
                    511
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "6 from pathlib import Path\n7 from subprocess import run\n8 from unittest import mock\n",
                "col_offset": 0,
                "end_col_offset": 26,
                "filename": "open_source_repos\\django\\tests\\i18n\\test_compilation.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 7,
                "line_range": [
                    7
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "268             \"django.core.management.utils.run\",\n269             lambda *args, **kwargs: run(*args, env=env, **kwargs),\n270         ):\n",
                "col_offset": 36,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\i18n\\test_compilation.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 269,
                "line_range": [
                    269
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "4 import os\n5 import pickle\n6 import re\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 5,
                "line_range": [
                    5
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "254         self.assertEqual(str(s1), \"test\")\n255         s2 = pickle.loads(pickle.dumps(s1))\n256         self.assertEqual(str(s2), \"test\")\n",
                "col_offset": 13,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 255,
                "line_range": [
                    255
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "391         self.assertEqual(s1 % 8, \"8 good results\")\n392         s2 = pickle.loads(pickle.dumps(s1))\n393         self.assertEqual(s2 % 1, \"1 good result\")\n",
                "col_offset": 13,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 392,
                "line_range": [
                    392
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "411             self.assertEqual(\"\", gettext(\"\"))\n412             s = mark_safe(\"\")\n413             self.assertEqual(s, gettext(s))\n",
                "col_offset": 16,
                "end_col_offset": 29,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 412,
                "line_range": [
                    412
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "422         trans_real._translations = {}\n423         s1 = mark_safe(\"Password\")\n424         s2 = mark_safe(\"May\")\n",
                "col_offset": 13,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 423,
                "line_range": [
                    423
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "423         s1 = mark_safe(\"Password\")\n424         s2 = mark_safe(\"May\")\n425         with translation.override(\"de\", deactivate=True):\n",
                "col_offset": 13,
                "end_col_offset": 29,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 424,
                "line_range": [
                    424
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "429         self.assertEqual(\"Passworda\", s1 + SafeString(\"a\"))\n430         self.assertEqual(\"Passworda\", s1 + mark_safe(\"a\"))\n431         self.assertEqual(\"aPassword\", mark_safe(\"a\") + s1)\n",
                "col_offset": 43,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 430,
                "line_range": [
                    430
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "430         self.assertEqual(\"Passworda\", s1 + mark_safe(\"a\"))\n431         self.assertEqual(\"aPassword\", mark_safe(\"a\") + s1)\n432         self.assertEqual(\"as\", mark_safe(\"a\") + mark_safe(\"s\"))\n",
                "col_offset": 38,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 431,
                "line_range": [
                    431
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "431         self.assertEqual(\"aPassword\", mark_safe(\"a\") + s1)\n432         self.assertEqual(\"as\", mark_safe(\"a\") + mark_safe(\"s\"))\n433 \n",
                "col_offset": 31,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 432,
                "line_range": [
                    432
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "431         self.assertEqual(\"aPassword\", mark_safe(\"a\") + s1)\n432         self.assertEqual(\"as\", mark_safe(\"a\") + mark_safe(\"s\"))\n433 \n",
                "col_offset": 48,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\i18n\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 432,
                "line_range": [
                    432
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "206             def __init__(self, *args, **kwargs):\n207                 assert \"poet\" in self._meta.fields\n208                 super().__init__(*args, **kwargs)\n",
                "col_offset": 16,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\inline_formsets\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 207,
                "line_range": [
                    207
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "408         self.assertSequenceEqual(\n409             Article.objects.filter(id=self.a1.id).extra(select=data).values(*data),\n410             [\n",
                "col_offset": 12,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\lookup\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 409,
                "line_range": [
                    409
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "1568         \"\"\"\n1569         conn = mail.get_connection(username=\"\", password=\"\")\n1570         conn.close()\n",
                "col_offset": 15,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 1569,
                "line_range": [
                    1569
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1577         closed = [False]\n1578         conn = mail.get_connection(username=\"\", password=\"\")\n1579 \n",
                "col_offset": 15,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 1578,
                "line_range": [
                    1578
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1829 \n1830     @override_settings(\n1831         EMAIL_HOST_USER=\"not empty username\",\n1832         EMAIL_HOST_PASSWORD=\"not empty password\",\n1833     )\n1834     def test_email_authentication_use_settings(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'not empty password'",
                "line_number": 1830,
                "line_range": [
                    1830,
                    1831,
                    1832,
                    1833
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1843     def test_email_authentication_override_settings(self):\n1844         backend = smtp.EmailBackend(username=\"username\", password=\"password\")\n1845         self.assertEqual(backend.username, \"username\")\n",
                "col_offset": 18,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 1844,
                "line_range": [
                    1844
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1838 \n1839     @override_settings(\n1840         EMAIL_HOST_USER=\"not empty username\",\n1841         EMAIL_HOST_PASSWORD=\"not empty password\",\n1842     )\n1843     def test_email_authentication_override_settings(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'not empty password'",
                "line_number": 1839,
                "line_range": [
                    1839,
                    1840,
                    1841,
                    1842
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1852     def test_email_disabled_authentication(self):\n1853         backend = smtp.EmailBackend(username=\"\", password=\"\")\n1854         self.assertEqual(backend.username, \"\")\n",
                "col_offset": 18,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 1853,
                "line_range": [
                    1853
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1847 \n1848     @override_settings(\n1849         EMAIL_HOST_USER=\"not empty username\",\n1850         EMAIL_HOST_PASSWORD=\"not empty password\",\n1851     )\n1852     def test_email_disabled_authentication(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'not empty password'",
                "line_number": 1848,
                "line_range": [
                    1848,
                    1849,
                    1850,
                    1851
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1861         \"\"\"\n1862         backend = smtp.EmailBackend(\n1863             username=\"not empty username\", password=\"not empty password\"\n1864         )\n1865         with self.assertRaisesMessage(\n",
                "col_offset": 18,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'not empty password'",
                "line_number": 1862,
                "line_range": [
                    1862,
                    1863,
                    1864
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1874         \"\"\"\n1875         backend = smtp.EmailBackend(username=\"\", password=\"\")\n1876         self.assertIsNone(backend.connection)\n",
                "col_offset": 18,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 1875,
                "line_range": [
                    1875
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2059         super().setUpClass()\n2060         cls.backend = smtp.EmailBackend(username=\"\", password=\"\")\n2061         cls.smtp_controller.stop()\n",
                "col_offset": 22,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\mail\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 2060,
                "line_range": [
                    2060
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "295             (\n296                 Article.objects.filter(reporter__first_name__exact=\"John\").extra(\n297                     where=[\"many_to_one_reporter.last_name='%s'\" % \"Smith\"]\n298                 )\n299             ),\n",
                "col_offset": 16,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\many_to_one\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 296,
                "line_range": [
                    296,
                    297,
                    298
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "189         self.assertIsInstance(\n190             self.encode_decode(mark_safe(\"<b>Hello Django!</b>\")).message,\n191             SafeData,\n",
                "col_offset": 31,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\messages_tests\\test_cookie.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 190,
                "line_range": [
                    190
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "60         storage = self.get_storage()\n61         message = Message(constants.DEBUG, mark_safe(\"<b>Hello Django!</b>\"))\n62         set_session_data(storage, [message])\n",
                "col_offset": 43,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\messages_tests\\test_session.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 61,
                "line_range": [
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "847     incompressible_string = b\"\".join(\n848         int2byte(random.randint(0, 255)) for _ in range(500)\n849     )\n",
                "col_offset": 17,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\middleware\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 330,
                    "link": "https://cwe.mitre.org/data/definitions/330.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
                "line_number": 848,
                "line_range": [
                    848
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b311-random",
                "test_id": "B311",
                "test_name": "blacklist"
            },
            {
                "code": "111 \n112         sql = \"\"\"\n113         INSERT INTO {0}_pony (pink, weight) VALUES (1, 3.55);\n114         INSERT INTO {0}_pony (pink, weight) VALUES (3, 5.0);\n115         \"\"\".format(\n116             app_label\n",
                "col_offset": 14,
                "end_col_offset": 11,
                "filename": "open_source_repos\\django\\tests\\migrations\\test_multidb.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 112,
                "line_range": [
                    112,
                    113,
                    114,
                    115
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "1929         test_name = \"related_models_app\"\n1930         assert not (abstract and proxy)\n1931         meta_contents = {\n",
                "col_offset": 8,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\migrations\\test_state.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 1930,
                "line_range": [
                    1930
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "266         try:\n267             exec(string, globals(), d)\n268         except Exception as e:\n",
                "col_offset": 12,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\tests\\migrations\\test_writer.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of exec detected.",
                "line_number": 267,
                "line_range": [
                    267
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html",
                "test_id": "B102",
                "test_name": "exec_used"
            },
            {
                "code": "1 import os\n2 import pickle\n3 import sys\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_filefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "161                         dump = pickle.dumps(document)\n162                         loaded_document = pickle.loads(dump)\n163                         self.assertEqual(document.myfile, loaded_document.myfile)\n",
                "col_offset": 42,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_filefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 162,
                "line_range": [
                    162
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "180                         myfile_dump = pickle.dumps(document.myfile)\n181                         loaded_myfile = pickle.loads(myfile_dump)\n182                         self.assertEqual(document.myfile, loaded_myfile)\n",
                "col_offset": 40,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_filefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 181,
                "line_range": [
                    181
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "174         \"\"\"\n175         import pickle\n176 \n",
                "col_offset": 8,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_imagefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 175,
                "line_range": [
                    175
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "180 \n181         loaded_p = pickle.loads(dump)\n182         self.assertEqual(p.mugshot, loaded_p.mugshot)\n",
                "col_offset": 19,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_imagefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 181,
                "line_range": [
                    181
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "188         mugshot_dump = pickle.dumps(p.mugshot)\n189         loaded_mugshot = pickle.loads(mugshot_dump)\n190         self.assertEqual(p.mugshot, loaded_mugshot)\n",
                "col_offset": 25,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_imagefield.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 189,
                "line_range": [
                    189
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "436     def test_key_transform_raw_expression(self):\n437         expr = RawSQL(self.raw_sql, ['{\"x\": \"bar\"}'])\n438         self.assertSequenceEqual(\n",
                "col_offset": 15,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_jsonfield.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 437,
                "line_range": [
                    437
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "443     def test_nested_key_transform_raw_expression(self):\n444         expr = RawSQL(self.raw_sql, ['{\"x\": {\"y\": \"bar\"}}'])\n445         self.assertSequenceEqual(\n",
                "col_offset": 15,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_jsonfield.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 444,
                "line_range": [
                    444
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "1067                     \"x\",\n1068                     RawSQL(\n1069                         self.raw_sql,\n1070                         ['{\"x\": {\"a\": \"b\", \"c\": 1, \"d\": \"e\"}}'],\n1071                     ),\n1072                 ),\n",
                "col_offset": 20,
                "end_col_offset": 21,
                "filename": "open_source_repos\\django\\tests\\model_fields\\test_jsonfield.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 1068,
                "line_range": [
                    1068,
                    1069,
                    1070,
                    1071
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "1 import pickle\n2 \n3 from django import forms\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\model_fields\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "151         been_here = getattr(self, \"been_saved\", False)\n152         assert not been_here, \"save_form_data called more than once\"\n153         setattr(self, \"been_saved\", True)\n",
                "col_offset": 8,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\model_forms\\models.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 152,
                "line_range": [
                    152
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "33         # Ensure author is always accessible in clean method\n34         assert self.author.name is not None\n35 \n",
                "col_offset": 8,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\model_formsets\\models.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 34,
                "line_range": [
                    34
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1 import pickle\n2 \n3 import django\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\model_regress\\test_pickle.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "26         with self.assertRaisesMessage(RuntimeWarning, msg):\n27             pickle.loads(pickle.dumps(p))\n28 \n",
                "col_offset": 12,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\model_regress\\test_pickle.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 27,
                "line_range": [
                    27
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "49         with self.assertRaisesMessage(RuntimeWarning, msg):\n50             pickle.loads(pickle.dumps(p))\n51 \n",
                "col_offset": 12,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\model_regress\\test_pickle.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 50,
                "line_range": [
                    50
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "66         self.assertEqual(m.dont_pickle, 1)\n67         reloaded = pickle.loads(dumped)\n68         self.assertFalse(hasattr(reloaded, \"dont_pickle\"))\n",
                "col_offset": 19,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\model_regress\\test_pickle.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "11     def setUpTestData(cls):\n12         cls.superuser = User.objects.create_superuser(\n13             username=\"super\", password=\"secret\", email=\"super@example.com\"\n14         )\n15         content_type = ContentType.objects.get_for_model(Band)\n",
                "col_offset": 24,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\modeladmin\\test_actions.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 12,
                "line_range": [
                    12,
                    13,
                    14
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "20             username = \"%suser\" % user_type\n21             user = User.objects.create_user(\n22                 username=username, password=\"secret\", is_staff=True\n23             )\n24             permission = Permission.objects.get(\n",
                "col_offset": 19,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\modeladmin\\test_actions.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 21,
                "line_range": [
                    21,
                    22,
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "296         )\n297         request_band_name_filter.user = User.objects.create_superuser(\n298             username=\"bob\", email=\"bob@test.com\", password=\"test\"\n299         )\n300         with self.assertWarnsMessage(RemovedInDjango60Warning, msg):\n",
                "col_offset": 40,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\modeladmin\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 297,
                "line_range": [
                    297,
                    298,
                    299
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1026         mock_request = MockRequest()\n1027         mock_request.user = User.objects.create_superuser(\n1028             username=\"bob\", email=\"bob@test.com\", password=\"test\"\n1029         )\n1030         self.site.register(Band, ModelAdmin)\n",
                "col_offset": 28,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\modeladmin\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1027,
                "line_range": [
                    1027,
                    1028,
                    1029
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1048         mock_request = MockRequest()\n1049         mock_request.user = User.objects.create_superuser(\n1050             username=\"bob\", email=\"bob@test.com\", password=\"test\"\n1051         )\n1052 \n",
                "col_offset": 28,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\modeladmin\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'test'",
                "line_number": 1049,
                "line_range": [
                    1049,
                    1050,
                    1051
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1 import datetime\n2 import pickle\n3 from io import StringIO\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\multiple_database\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "2056             qs = Book.objects.all()\n2057             self.assertEqual(qs.db, pickle.loads(pickle.dumps(qs)).db)\n2058 \n",
                "col_offset": 36,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\tests\\multiple_database\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 2057,
                "line_range": [
                    2057
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "2554     def test_reverse_one_to_one_relation(self):\n2555         user = User(username=\"Someone\", password=\"fake_hash\")\n2556         profile = UserProfile()\n",
                "col_offset": 15,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\multiple_database\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'fake_hash'",
                "line_number": 2555,
                "line_range": [
                    2555
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1 SECRET_KEY = \"abcdefg\"\n2 \n3 INSTALLED_APPS = [\n",
                "col_offset": 13,
                "end_col_offset": 22,
                "filename": "open_source_repos\\django\\tests\\postgres_tests\\integration_settings.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'abcdefg'",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1 import os\n2 import subprocess\n3 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\postgres_tests\\test_integration.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "13         test_environ[\"PYTHONPATH\"] = os.path.join(os.path.dirname(__file__), \"../../\")\n14         result = subprocess.run(\n15             [\n16                 sys.executable,\n17                 \"-m\",\n18                 \"django\",\n19                 \"check\",\n20                 \"--settings\",\n21                 \"integration_settings\",\n22             ],\n23             stdout=subprocess.DEVNULL,\n24             stderr=subprocess.PIPE,\n25             cwd=os.path.dirname(__file__),\n26             env=test_environ,\n27             encoding=\"utf-8\",\n28         )\n29         self.assertEqual(result.returncode, 0, msg=result.stderr)\n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\postgres_tests\\test_integration.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 14,
                "line_range": [
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "414         # Ticket #23721\n415         assert False, \"type checking should happen without calling model __iter__\"\n416 \n",
                "col_offset": 8,
                "end_col_offset": 82,
                "filename": "open_source_repos\\django\\tests\\queries\\models.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 415,
                "line_range": [
                    415
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "253                 models = [\n254                     CustomDbColumn.objects.create(ip_address=\"0.0.0.0\")\n255                     for _ in range(10)\n",
                "col_offset": 61,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\queries\\test_bulk_update.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 605,
                    "link": "https://cwe.mitre.org/data/definitions/605.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible binding to all interfaces.",
                "line_number": 254,
                "line_range": [
                    254
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
                "test_id": "B104",
                "test_name": "hardcoded_bind_all_interfaces"
            },
            {
                "code": "2 import unittest\n3 import xml.etree.ElementTree\n4 \n",
                "col_offset": 0,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\queries\\test_explain.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b405-import-xml-etree",
                "test_id": "B405",
                "test_name": "blacklist"
            },
            {
                "code": "50                             try:\n51                                 xml.etree.ElementTree.fromstring(result)\n52                             except xml.etree.ElementTree.ParseError as e:\n",
                "col_offset": 32,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\queries\\test_explain.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 51,
                "line_range": [
                    51
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree",
                "test_id": "B314",
                "test_name": "blacklist"
            },
            {
                "code": "296         qs1 = (\n297             Number.objects.filter(num=1)\n298             .extra(\n299                 select={\"count\": 0},\n300             )\n301             .values_list(\"num\", \"count\")\n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\queries\\test_qs_combinators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 297,
                "line_range": [
                    297,
                    298,
                    299,
                    300
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "302         )\n303         qs2 = Number.objects.filter(num=2).extra(select={\"count\": 1})\n304         self.assertCountEqual(qs1.union(qs2), [(1, 0), (2, 1)])\n",
                "col_offset": 14,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\queries\\test_qs_combinators.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 303,
                "line_range": [
                    303
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "171             sql = f\"CASE WHEN {sql} THEN 1 ELSE 0 END\"\n172         query.add_annotation(RawSQL(sql, (1,), BooleanField()), \"_check\")\n173         result = query.get_compiler(using=DEFAULT_DB_ALIAS).execute_sql(SINGLE)\n",
                "col_offset": 29,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\queries\\test_query.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of RawSQL potential SQL attack vector.",
                "line_number": 172,
                "line_range": [
                    172
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b611_django_rawsql_used.html",
                "test_id": "B611",
                "test_name": "django_rawsql_used"
            },
            {
                "code": "1 import datetime\n2 import pickle\n3 import sys\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "755         self.assertSequenceEqual(\n756             Item.objects.datetimes(\"created\", \"day\").extra(select={\"a\": 1}),\n757             [\n",
                "col_offset": 12,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 756,
                "line_range": [
                    756
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "762         self.assertSequenceEqual(\n763             Item.objects.extra(select={\"a\": 1}).datetimes(\"created\", \"day\"),\n764             [\n",
                "col_offset": 12,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 763,
                "line_range": [
                    763
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "853         query = qs.query.get_compiler(qs.db).as_sql()[0]\n854         query2 = pickle.loads(pickle.dumps(qs.query))\n855         self.assertEqual(query2.get_compiler(qs.db).as_sql()[0], query)\n",
                "col_offset": 17,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 854,
                "line_range": [
                    854
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "859         qs = Item.objects.defer(\"name\", \"creator\")\n860         q2 = pickle.loads(pickle.dumps(qs))\n861         self.assertEqual(list(qs), list(q2))\n",
                "col_offset": 13,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 860,
                "line_range": [
                    860
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "861         self.assertEqual(list(qs), list(q2))\n862         q3 = pickle.loads(pickle.dumps(qs, pickle.HIGHEST_PROTOCOL))\n863         self.assertEqual(list(qs), list(q3))\n",
                "col_offset": 13,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 862,
                "line_range": [
                    862
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "911         qs = Item.objects.datetimes(\"created\", \"month\")\n912         pickle.loads(pickle.dumps(qs))\n913 \n",
                "col_offset": 8,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 912,
                "line_range": [
                    912
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1878         sql = \"case when %s > 2 then 1 else 0 end\" % connection.ops.quote_name(\"rank\")\n1879         qs = Ranking.objects.extra(select={\"good\": sql})\n1880         self.assertEqual(\n",
                "col_offset": 13,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 1879,
                "line_range": [
                    1879
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "1896         sql = \"case when %s > 2 then 1 else 0 end\" % connection.ops.quote_name(\"rank\")\n1897         qs = Ranking.objects.extra(select={\"good\": sql})\n1898         dicts = qs.values().order_by(\"id\")\n",
                "col_offset": 13,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 1897,
                "line_range": [
                    1897
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "1981         with self.assertRaisesMessage(ValueError, msg):\n1982             Note.objects.extra(select={crafted_alias: \"1\"})\n1983 \n",
                "col_offset": 12,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of extra potential SQL attack vector.",
                "line_number": 1982,
                "line_range": [
                    1982
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b610_django_extra_used.html",
                "test_id": "B610",
                "test_name": "django_extra_used"
            },
            {
                "code": "2821         self.assertEqual(value, (72, None))\n2822         self.assertEqual(pickle.loads(pickle.dumps(value)), value)\n2823 \n",
                "col_offset": 25,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\queries\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 2822,
                "line_range": [
                    2822
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1 import datetime\n2 import pickle\n3 \n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "26     def assert_pickles(self, qs):\n27         self.assertEqual(list(pickle.loads(pickle.dumps(qs))), list(qs))\n28 \n",
                "col_offset": 30,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 27,
                "line_range": [
                    27
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "57         original = Event.DoesNotExist(\"Doesn't exist\")\n58         unpickled = pickle.loads(pickle.dumps(original))\n59 \n",
                "col_offset": 20,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 58,
                "line_range": [
                    58
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "66         klass = Event.DoesNotExist\n67         self.assertIs(pickle.loads(pickle.dumps(klass)), klass)\n68 \n",
                "col_offset": 22,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "70         klass = Event.MultipleObjectsReturned\n71         self.assertIs(pickle.loads(pickle.dumps(klass)), klass)\n72 \n",
                "col_offset": 22,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 71,
                "line_range": [
                    71
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "75         klass = Event.group.RelatedObjectDoesNotExist\n76         self.assertIs(pickle.loads(pickle.dumps(klass)), klass)\n77         # ForwardOneToOneDescriptor\n",
                "col_offset": 22,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 76,
                "line_range": [
                    76
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "78         klass = Happening.event.RelatedObjectDoesNotExist\n79         self.assertIs(pickle.loads(pickle.dumps(klass)), klass)\n80 \n",
                "col_offset": 22,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 79,
                "line_range": [
                    79
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "82         klass = Event.happening.RelatedObjectDoesNotExist\n83         self.assertIs(pickle.loads(pickle.dumps(klass)), klass)\n84 \n",
                "col_offset": 22,
                "end_col_offset": 55,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 83,
                "line_range": [
                    83
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "85     def test_manager_pickle(self):\n86         pickle.loads(pickle.dumps(Happening.objects))\n87 \n",
                "col_offset": 8,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 86,
                "line_range": [
                    86
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "93         dumped = pickle.dumps(original)\n94         reloaded = pickle.loads(dumped)\n95         self.assertEqual(original, reloaded)\n",
                "col_offset": 19,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 94,
                "line_range": [
                    94
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "99         dumped = pickle.dumps(original)\n100         reloaded = pickle.loads(dumped)\n101         self.assertEqual(original, reloaded)\n",
                "col_offset": 19,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 100,
                "line_range": [
                    100
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "113         dumped = pickle.dumps(original)\n114         reloaded = pickle.loads(dumped)\n115         self.assertEqual(original, reloaded)\n",
                "col_offset": 19,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 114,
                "line_range": [
                    114
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "127         dumped = pickle.dumps(original)\n128         reloaded = pickle.loads(dumped)\n129         self.assertEqual(original, reloaded)\n",
                "col_offset": 19,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 128,
                "line_range": [
                    128
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "146         # First pickling\n147         groups = pickle.loads(pickle.dumps(groups))\n148         self.assertSequenceEqual(groups, [g])\n",
                "col_offset": 17,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 147,
                "line_range": [
                    147
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "150         # Second pickling\n151         groups = pickle.loads(pickle.dumps(groups))\n152         self.assertSequenceEqual(groups, [g])\n",
                "col_offset": 17,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 151,
                "line_range": [
                    151
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "160         with self.assertNumQueries(1):\n161             events2 = pickle.loads(pickle.dumps(events))\n162         with self.assertNumQueries(0):\n",
                "col_offset": 22,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 161,
                "line_range": [
                    161
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "169         )\n170         groups2 = pickle.loads(pickle.dumps(groups))\n171         self.assertSequenceEqual(groups2.filter(id__gte=0), [g])\n",
                "col_offset": 18,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 170,
                "line_range": [
                    170
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "179         with self.assertNumQueries(0):\n180             pickle.loads(pickle.dumps(groups))\n181 \n",
                "col_offset": 12,
                "end_col_offset": 46,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 180,
                "line_range": [
                    180
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "192         m2ms = M2MModel.objects.prefetch_related(\"groups\")\n193         m2ms = pickle.loads(pickle.dumps(m2ms))\n194         self.assertSequenceEqual(m2ms, [m2m])\n",
                "col_offset": 15,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 193,
                "line_range": [
                    193
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "205         )\n206         groups2 = pickle.loads(pickle.dumps(groups))\n207         self.assertSequenceEqual(groups2, [group])\n",
                "col_offset": 18,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 206,
                "line_range": [
                    206
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "216         )\n217         groups2 = pickle.loads(pickle.dumps(groups))\n218         self.assertSequenceEqual(groups2.filter(has_event=True), [group])\n",
                "col_offset": 18,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 217,
                "line_range": [
                    217
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "271         ).annotate(sum_number=models.Sum(\"big_events__happening__number1\"))\n272         groups_query = pickle.loads(pickle.dumps(groups.query))\n273         groups = Group.objects.all()\n",
                "col_offset": 23,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 272,
                "line_range": [
                    272
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "286         ).annotate(count_groups=models.Count(\"first_m2mmodels__groups\"))\n287         groups_query = pickle.loads(pickle.dumps(groups.query))\n288         groups = Group.objects.all()\n",
                "col_offset": 23,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 287,
                "line_range": [
                    287
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "299         reloaded = Happening.objects.all()\n300         reloaded.query = pickle.loads(pickle.dumps(qs.query))\n301         self.assertEqual(\n",
                "col_offset": 25,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 300,
                "line_range": [
                    300
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "315                 reloaded = Happening.objects.all()\n316                 reloaded.query = pickle.loads(pickle.dumps(qs.query))\n317                 self.assertEqual(reloaded.get(), {\"name\": \"test\"})\n",
                "col_offset": 33,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 316,
                "line_range": [
                    316
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "332         with self.assertRaisesMessage(RuntimeWarning, msg):\n333             pickle.loads(pickle.dumps(qs))\n334 \n",
                "col_offset": 12,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 333,
                "line_range": [
                    333
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "345         with self.assertRaisesMessage(RuntimeWarning, msg):\n346             pickle.loads(pickle.dumps(qs))\n347 \n",
                "col_offset": 12,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 346,
                "line_range": [
                    346
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "372         with self.assertNumQueries(0):\n373             reloaded = pickle.loads(dumped)\n374             reloaded_events = Event.objects.none()\n",
                "col_offset": 23,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 373,
                "line_range": [
                    373
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "385         with self.assertNumQueries(0):\n386             reloaded = pickle.loads(dumped)\n387             reloaded_events = Event.objects.none()\n",
                "col_offset": 23,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\queryset_pickle\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 386,
                "line_range": [
                    386
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "14         for k in kwargs:\n15             assert k in [f.attname for f in self._meta.fields], (\n16                 \"Author.__init__ got an unexpected parameter: %s\" % k\n17             )\n18 \n",
                "col_offset": 12,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\raw_query\\models.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 15,
                "line_range": [
                    15,
                    16,
                    17
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "186         for select in selects:\n187             query = \"SELECT %s FROM raw_query_author\" % select\n188             authors = Author.objects.all()\n",
                "col_offset": 20,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\raw_query\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 187,
                "line_range": [
                    187
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "9 import socket\n10 import subprocess\n11 import sys\n",
                "col_offset": 0,
                "end_col_offset": 17,
                "filename": "open_source_repos\\django\\tests\\runtests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 10,
                "line_range": [
                    10
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "188             if not start_at:\n189                 assert start_after\n190                 # Skip the current one before starting.\n",
                "col_offset": 16,
                "end_col_offset": 34,
                "filename": "open_source_repos\\django\\tests\\runtests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 189,
                "line_range": [
                    189
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "478         print(\"***** Test labels: %s\" % \" \".join(test_labels_a))\n479         failures_a = subprocess.run(subprocess_args + test_labels_a)\n480 \n",
                "col_offset": 21,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\runtests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 479,
                "line_range": [
                    479
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "483         print(\"\")\n484         failures_b = subprocess.run(subprocess_args + test_labels_b)\n485 \n",
                "col_offset": 21,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\runtests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 484,
                "line_range": [
                    484
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "525         )\n526         failures = subprocess.call(subprocess_args + [label, paired_test])\n527         if failures:\n",
                "col_offset": 19,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\tests\\runtests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "subprocess call - check for execution of untrusted input.",
                "line_number": 526,
                "line_range": [
                    526
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b603_subprocess_without_shell_equals_true.html",
                "test_id": "B603",
                "test_name": "subprocess_without_shell_equals_true"
            },
            {
                "code": "65         self.cursor = self.new_connection.cursor()\n66         sql = \"SELECT * FROM %(db_table)s %(for_update)s;\" % {\n67             \"db_table\": Person._meta.db_table,\n68             \"for_update\": self.new_connection.ops.for_update_sql(),\n69         }\n70         self.cursor.execute(sql, ())\n",
                "col_offset": 14,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\select_for_update\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 66,
                "line_range": [
                    66,
                    67,
                    68,
                    69
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "612                     Person.objects.raw(\n613                         \"SELECT * FROM %s %s\"\n614                         % (\n615                             Person._meta.db_table,\n616                             connection.ops.for_update_sql(nowait=True),\n617                         )\n618                     )\n",
                "col_offset": 24,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\select_for_update\\tests.py",
                "issue_confidence": "LOW",
                "issue_cwe": {
                    "id": 89,
                    "link": "https://cwe.mitre.org/data/definitions/89.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible SQL injection vector through string-based query construction.",
                "line_number": 613,
                "line_range": [
                    613,
                    614,
                    615,
                    616,
                    617
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
                "test_id": "B608",
                "test_name": "hardcoded_sql_expressions"
            },
            {
                "code": "27         models = [Domain, Kingdom, Phylum, Klass, Order, Family, Genus, Species]\n28         assert len(names) == len(models), (names, models)\n29 \n",
                "col_offset": 8,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\select_related\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "1 from xml.dom import minidom\n2 \n3 from django.core import serializers\n",
                "col_offset": 0,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\tests\\serializers\\test_xml.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "35         try:\n36             minidom.parseString(serial_str)\n37         except Exception:\n",
                "col_offset": 12,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\serializers\\test_xml.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 36,
                "line_range": [
                    36
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "44         ret_list = []\n45         dom = minidom.parseString(serial_str)\n46         fields = dom.getElementsByTagName(\"object\")\n",
                "col_offset": 14,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\serializers\\test_xml.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 45,
                "line_range": [
                    45
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "53         ret_list = []\n54         dom = minidom.parseString(serial_str)\n55         fields = dom.getElementsByTagName(\"field\")\n",
                "col_offset": 14,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\serializers\\test_xml.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 54,
                "line_range": [
                    54
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "42     def urlopen(self, url):\n43         return urlopen(self.live_server_url + url)\n44 \n",
                "col_offset": 15,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\servers\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 43,
                "line_range": [
                    43
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "38 def subview_calling_view(request):\n39     with urlopen(request.GET[\"url\"] + \"/subview/\") as response:\n40         return HttpResponse(\"subview calling view: {}\".format(response.read().decode()))\n",
                "col_offset": 9,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\servers\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 39,
                "line_range": [
                    39
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "43 def check_model_instance_from_subview(request):\n44     with urlopen(request.GET[\"url\"] + \"/create_model_instance/\"):\n45         pass\n",
                "col_offset": 9,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\servers\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 44,
                "line_range": [
                    44
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "45         pass\n46     with urlopen(request.GET[\"url\"] + \"/model_view/\") as response:\n47         return HttpResponse(\"subview calling view: {}\".format(response.read().decode()))\n",
                "col_offset": 9,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\servers\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 46,
                "line_range": [
                    46
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "297 \n298     @override_settings(SECRET_KEY=\"\")\n299     def test_no_secret_key(self):\n",
                "col_offset": 5,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: ''",
                "line_number": 298,
                "line_range": [
                    298
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "418         s = LazySettings()\n419         s.configure(SECRET_KEY=\"foo\")\n420 \n",
                "col_offset": 8,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 419,
                "line_range": [
                    419
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "424         settings_module = ModuleType(\"fake_settings_module\")\n425         settings_module.SECRET_KEY = \"foo\"\n426         settings_module.USE_TZ = False\n",
                "col_offset": 37,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 425,
                "line_range": [
                    425
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "482         settings_module = ModuleType(\"fake_settings_module\")\n483         settings_module.SECRET_KEY = \"foo\"\n484         msg = \"The %s setting must be a list or a tuple.\"\n",
                "col_offset": 37,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'foo'",
                "line_number": 483,
                "line_range": [
                    483
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "557         with self.assertRaises(SettingChangeEnterException):\n558             with override_settings(SETTING_PASS=\"BOTH\", SETTING_BOTH=\"BOTH\"):\n559                 pass\n",
                "col_offset": 17,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'BOTH'",
                "line_number": 558,
                "line_range": [
                    558
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "567         with self.assertRaises(SettingChangeEnterException):\n568             with override_settings(SETTING_PASS=\"ENTER\", SETTING_ENTER=\"ENTER\"):\n569                 pass\n",
                "col_offset": 17,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'ENTER'",
                "line_number": 568,
                "line_range": [
                    568
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "577         with self.assertRaises(SettingChangeExitException):\n578             with override_settings(SETTING_PASS=\"EXIT\", SETTING_EXIT=\"EXIT\"):\n579                 pass\n",
                "col_offset": 17,
                "end_col_offset": 76,
                "filename": "open_source_repos\\django\\tests\\settings_tests\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'EXIT'",
                "line_number": 578,
                "line_range": [
                    578
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "195 \n196     @override_settings(\n197         SECRET_KEY=\"secret\",\n198         SECRET_KEY_FALLBACKS=[\"oldsecret\"],\n199     )\n200     def test_sign_unsign_ignore_secret_key_fallbacks(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\signing\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 196,
                "line_range": [
                    196,
                    197,
                    198,
                    199
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "206 \n207     @override_settings(\n208         SECRET_KEY=\"secret\",\n209         SECRET_KEY_FALLBACKS=[\"oldsecret\"],\n210     )\n211     def test_default_keys_verification(self):\n",
                "col_offset": 5,
                "end_col_offset": 5,
                "filename": "open_source_repos\\django\\tests\\signing\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 207,
                "line_range": [
                    207,
                    208,
                    209,
                    210
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "94     def _get_file(self, filepath):\n95         assert filepath, \"filepath is empty.\"\n96         filepath = os.path.join(settings.STATIC_ROOT, filepath)\n",
                "col_offset": 8,
                "end_col_offset": 45,
                "filename": "open_source_repos\\django\\tests\\staticfiles_tests\\cases.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 703,
                    "link": "https://cwe.mitre.org/data/definitions/703.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                "line_number": 95,
                "line_range": [
                    95
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b101_assert_used.html",
                "test_id": "B101",
                "test_name": "assert_used"
            },
            {
                "code": "67     def urlopen(self, url):\n68         return urlopen(self.live_server_url + url)\n69 \n",
                "col_offset": 15,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\staticfiles_tests\\test_liveserver.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 22,
                    "link": "https://cwe.mitre.org/data/definitions/22.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
                "line_number": 68,
                "line_range": [
                    68
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b310-urllib-urlopen",
                "test_id": "B310",
                "test_name": "blacklist"
            },
            {
                "code": "1 import datetime\n2 from xml.dom import minidom\n3 \n",
                "col_offset": 0,
                "end_col_offset": 27,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "98         response = self.client.get(\"/syndication/rss2/\")\n99         doc = minidom.parseString(response.content)\n100 \n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 99,
                "line_range": [
                    99
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "204         response = self.client.get(\"/syndication/rss2/with-callable-object/\")\n205         doc = minidom.parseString(response.content)\n206         chan = doc.getElementsByTagName(\"rss\")[0].getElementsByTagName(\"channel\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 205,
                "line_range": [
                    205
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "210         response = self.client.get(\"/syndication/rss2/with-decorated-methods/\")\n211         doc = minidom.parseString(response.content)\n212         chan = doc.getElementsByTagName(\"rss\")[0].getElementsByTagName(\"channel\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 211,
                "line_range": [
                    211
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "247         response = self.client.get(\"/syndication/rss2/guid_ispermalink_false/\")\n248         doc = minidom.parseString(response.content)\n249         chan = doc.getElementsByTagName(\"rss\")[0].getElementsByTagName(\"channel\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 248,
                "line_range": [
                    248
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "264         response = self.client.get(\"/syndication/rss2/guid_ispermalink_true/\")\n265         doc = minidom.parseString(response.content)\n266         chan = doc.getElementsByTagName(\"rss\")[0].getElementsByTagName(\"channel\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 265,
                "line_range": [
                    265
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "277         response = self.client.get(\"/syndication/rss2/single-enclosure/\")\n278         doc = minidom.parseString(response.content)\n279         chan = doc.getElementsByTagName(\"rss\")[0].getElementsByTagName(\"channel\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 278,
                "line_range": [
                    278
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "297         response = self.client.get(\"/syndication/rss091/\")\n298         doc = minidom.parseString(response.content)\n299 \n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 298,
                "line_range": [
                    298
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "362         response = self.client.get(\"/syndication/atom/\")\n363         feed = minidom.parseString(response.content).firstChild\n364 \n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 363,
                "line_range": [
                    363
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "412         response = self.client.get(\"/syndication/atom/\")\n413         feed = minidom.parseString(response.content).firstChild\n414         entries = feed.getElementsByTagName(\"entry\")\n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 413,
                "line_range": [
                    413
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "422         response = self.client.get(\"/syndication/atom/single-enclosure/\")\n423         feed = minidom.parseString(response.content).firstChild\n424         items = feed.getElementsByTagName(\"entry\")\n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 423,
                "line_range": [
                    423
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "431         response = self.client.get(\"/syndication/atom/multiple-enclosure/\")\n432         feed = minidom.parseString(response.content).firstChild\n433         items = feed.getElementsByTagName(\"entry\")\n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 432,
                "line_range": [
                    432
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "445         response = self.client.get(\"/syndication/atom/\")\n446         feed = minidom.parseString(response.content).firstChild\n447         updated = feed.getElementsByTagName(\"updated\")[0].firstChild.wholeText\n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 446,
                "line_range": [
                    446
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "455         response = self.client.get(\"/syndication/latest/\")\n456         feed = minidom.parseString(response.content).firstChild\n457         updated = feed.getElementsByTagName(\"updated\")[0].firstChild.wholeText\n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 456,
                "line_range": [
                    456
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "465         response = self.client.get(\"/syndication/custom/\")\n466         feed = minidom.parseString(response.content).firstChild\n467 \n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 466,
                "line_range": [
                    466
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "509         response = self.client.get(\"/syndication/language/\")\n510         feed = minidom.parseString(response.content).firstChild\n511         self.assertEqual(\n",
                "col_offset": 15,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 510,
                "line_range": [
                    510
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "520         response = self.client.get(\"/syndication/rss2/\")\n521         doc = minidom.parseString(response.content)\n522         for item in doc.getElementsByTagName(\"item\"):\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 521,
                "line_range": [
                    521
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "534         response = self.client.get(\"/syndication/naive-dates/\")\n535         doc = minidom.parseString(response.content)\n536         updated = doc.getElementsByTagName(\"updated\")[0].firstChild.wholeText\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 535,
                "line_range": [
                    535
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "547         response = self.client.get(\"/syndication/aware-dates/\")\n548         doc = minidom.parseString(response.content)\n549         published = doc.getElementsByTagName(\"published\")[0].firstChild.wholeText\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 548,
                "line_range": [
                    548
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "639         response = self.client.get(\"/syndication/stylesheet/\")\n640         doc = minidom.parseString(response.content)\n641         self.assertEqual(doc.childNodes[0].nodeName, \"xml-stylesheet\")\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 640,
                "line_range": [
                    640
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "714         response = self.client.get(\"/syndication/feedurl/\")\n715         doc = minidom.parseString(response.content)\n716         for link in doc.getElementsByTagName(\"link\"):\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 715,
                "line_range": [
                    715
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "731         )\n732         doc = minidom.parseString(response.content)\n733         chan = doc.getElementsByTagName(\"channel\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 732,
                "line_range": [
                    732
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "759         response = self.client.get(\"/syndication/template/\")\n760         doc = minidom.parseString(response.content)\n761         feed = doc.getElementsByTagName(\"rss\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 760,
                "line_range": [
                    760
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "779         response = self.client.get(\"/syndication/template_context/\")\n780         doc = minidom.parseString(response.content)\n781         feed = doc.getElementsByTagName(\"rss\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 780,
                "line_range": [
                    780
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "825         response = self.client.get(\"/syndication/rss2/articles/%s/\" % self.e1.pk)\n826         doc = minidom.parseString(response.content)\n827         feed = doc.getElementsByTagName(\"rss\")[0]\n",
                "col_offset": 14,
                "end_col_offset": 51,
                "filename": "open_source_repos\\django\\tests\\syndication_tests\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 826,
                "line_range": [
                    826
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "18         output = self.engine.render_to_string(\n19             \"addslashes01\", {\"a\": \"<a>'\", \"b\": mark_safe(\"<a>'\")}\n20         )\n",
                "col_offset": 47,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_addslashes.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"addslashes02\", {\"a\": \"<a>'\", \"b\": mark_safe(\"<a>'\")}\n27         )\n",
                "col_offset": 47,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_addslashes.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "18         output = self.engine.render_to_string(\n19             \"capfirst01\", {\"a\": \"fred>\", \"b\": mark_safe(\"fred&gt;\")}\n20         )\n",
                "col_offset": 46,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_capfirst.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"capfirst02\", {\"a\": \"fred>\", \"b\": mark_safe(\"fred&gt;\")}\n27         )\n",
                "col_offset": 46,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_capfirst.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "18         output = self.engine.render_to_string(\n19             \"center01\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n20         )\n",
                "col_offset": 42,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_center.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"center02\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n27         )\n",
                "col_offset": 42,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_center.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "14         output = self.engine.render_to_string(\n15             \"chaining01\", {\"a\": \"a < b\", \"b\": mark_safe(\"a < b\")}\n16         )\n",
                "col_offset": 46,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_chaining.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 15,
                "line_range": [
                    15
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "28         output = self.engine.render_to_string(\n29             \"chaining02\", {\"a\": \"a < b\", \"b\": mark_safe(\"a < b\")}\n30         )\n",
                "col_offset": 46,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_chaining.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 29,
                "line_range": [
                    29
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "36         output = self.engine.render_to_string(\n37             \"chaining03\", {\"a\": \"a < b\", \"b\": mark_safe(\"a < b\")}\n38         )\n",
                "col_offset": 46,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_chaining.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 37,
                "line_range": [
                    37
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "50         output = self.engine.render_to_string(\n51             \"chaining04\", {\"a\": \"a < b\", \"b\": mark_safe(\"a < b\")}\n52         )\n",
                "col_offset": 46,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_chaining.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 51,
                "line_range": [
                    51
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "17         output = self.engine.render_to_string(\n18             \"cut01\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&amp;y\")}\n19         )\n",
                "col_offset": 39,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_cut.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 18,
                "line_range": [
                    18
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "24         output = self.engine.render_to_string(\n25             \"cut02\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&amp;y\")}\n26         )\n",
                "col_offset": 39,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_cut.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 25,
                "line_range": [
                    25
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "37         output = self.engine.render_to_string(\n38             \"cut03\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&amp;y\")}\n39         )\n",
                "col_offset": 39,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_cut.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 38,
                "line_range": [
                    38
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "44         output = self.engine.render_to_string(\n45             \"cut04\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&amp;y\")}\n46         )\n",
                "col_offset": 39,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_cut.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 45,
                "line_range": [
                    45
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "59         output = self.engine.render_to_string(\n60             \"cut05\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&amp;y\")}\n61         )\n",
                "col_offset": 39,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_cut.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 60,
                "line_range": [
                    60
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "66         output = self.engine.render_to_string(\n67             \"cut06\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&amp;y\")}\n68         )\n",
                "col_offset": 39,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_cut.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 67,
                "line_range": [
                    67
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "28     def test_default03(self):\n29         output = self.engine.render_to_string(\"default03\", {\"a\": mark_safe(\"x>\")})\n30         self.assertEqual(output, \"x>\")\n",
                "col_offset": 65,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_default.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 29,
                "line_range": [
                    29
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "33     def test_default04(self):\n34         output = self.engine.render_to_string(\"default04\", {\"a\": mark_safe(\"x>\")})\n35         self.assertEqual(output, \"x>\")\n",
                "col_offset": 65,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_default.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 34,
                "line_range": [
                    34
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "5 class User:\n6     password = \"abc\"\n7 \n",
                "col_offset": 15,
                "end_col_offset": 20,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_dictsort.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'abc'",
                "line_number": 6,
                "line_range": [
                    6
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "17         output = self.engine.render_to_string(\n18             \"escape01\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&y\")}\n19         )\n",
                "col_offset": 42,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_escape.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 18,
                "line_range": [
                    18
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "30         output = self.engine.render_to_string(\n31             \"escape02\", {\"a\": \"x&y\", \"b\": mark_safe(\"x&y\")}\n32         )\n",
                "col_offset": 42,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_escape.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 31,
                "line_range": [
                    31
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "22             \"escapeseq_basic\",\n23             {\"a\": [\"x&y\", \"<p>\"], \"b\": [mark_safe(\"x&y\"), mark_safe(\"<p>\")]},\n24         )\n",
                "col_offset": 40,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_escapeseq.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 23,
                "line_range": [
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "22             \"escapeseq_basic\",\n23             {\"a\": [\"x&y\", \"<p>\"], \"b\": [mark_safe(\"x&y\"), mark_safe(\"<p>\")]},\n24         )\n",
                "col_offset": 58,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_escapeseq.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 23,
                "line_range": [
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "38             \"escapeseq_autoescape_off\",\n39             {\"a\": [\"x&y\", \"<p>\"], \"b\": [mark_safe(\"x&y\"), mark_safe(\"<p>\")]},\n40         )\n",
                "col_offset": 40,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_escapeseq.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 39,
                "line_range": [
                    39
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "38             \"escapeseq_autoescape_off\",\n39             {\"a\": [\"x&y\", \"<p>\"], \"b\": [mark_safe(\"x&y\"), mark_safe(\"<p>\")]},\n40         )\n",
                "col_offset": 58,
                "end_col_offset": 74,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_escapeseq.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 39,
                "line_range": [
                    39
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "11         output = self.engine.render_to_string(\n12             \"first01\", {\"a\": [\"a&b\", \"x\"], \"b\": [mark_safe(\"a&b\"), \"x\"]}\n13         )\n",
                "col_offset": 49,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_first.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 12,
                "line_range": [
                    12
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "24         output = self.engine.render_to_string(\n25             \"first02\", {\"a\": [\"a&b\", \"x\"], \"b\": [mark_safe(\"a&b\"), \"x\"]}\n26         )\n",
                "col_offset": 49,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_first.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 25,
                "line_range": [
                    25
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "22         output = self.engine.render_to_string(\n23             \"floatformat01\", {\"a\": \"1.42\", \"b\": mark_safe(\"1.42\")}\n24         )\n",
                "col_offset": 48,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_floatformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 23,
                "line_range": [
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "29         output = self.engine.render_to_string(\n30             \"floatformat02\", {\"a\": \"1.42\", \"b\": mark_safe(\"1.42\")}\n31         )\n",
                "col_offset": 48,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_floatformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 30,
                "line_range": [
                    30
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "27         output = self.engine.render_to_string(\n28             \"iriencode03\", {\"url\": mark_safe(\"?test=1&me=2\")}\n29         )\n",
                "col_offset": 35,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_iriencode.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "36         output = self.engine.render_to_string(\n37             \"iriencode04\", {\"url\": mark_safe(\"?test=1&me=2\")}\n38         )\n",
                "col_offset": 35,
                "end_col_offset": 60,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_iriencode.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 37,
                "line_range": [
                    37
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "39         output = self.engine.render_to_string(\n40             \"join06\", {\"a\": [\"alpha\", \"beta & me\"], \"var\": mark_safe(\" & \")}\n41         )\n",
                "col_offset": 59,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_join.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 40,
                "line_range": [
                    40
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "53         output = self.engine.render_to_string(\n54             \"join08\", {\"a\": [\"Alpha\", \"Beta & me\"], \"var\": mark_safe(\" & \")}\n55         )\n",
                "col_offset": 59,
                "end_col_offset": 75,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_join.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 54,
                "line_range": [
                    54
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "10         output = self.engine.render_to_string(\n11             \"last01\", {\"a\": [\"x\", \"a&b\"], \"b\": [\"x\", mark_safe(\"a&b\")]}\n12         )\n",
                "col_offset": 53,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_last.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 11,
                "line_range": [
                    11
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "19         output = self.engine.render_to_string(\n20             \"last02\", {\"a\": [\"x\", \"a&b\"], \"b\": [\"x\", mark_safe(\"a&b\")]}\n21         )\n",
                "col_offset": 53,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_last.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 20,
                "line_range": [
                    20
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "33         output = self.engine.render_to_string(\n34             \"length05\", {\"string\": mark_safe(\"django\")}\n35         )\n",
                "col_offset": 35,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_length.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 34,
                "line_range": [
                    34
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "54     def test_safestring(self):\n55         self.assertEqual(length(mark_safe(\"1234\")), 4)\n56 \n",
                "col_offset": 32,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_length.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 55,
                "line_range": [
                    55
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "17         output = self.engine.render_to_string(\n18             \"linebreaks01\", {\"a\": \"x&\\ny\", \"b\": mark_safe(\"x&\\ny\")}\n19         )\n",
                "col_offset": 48,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_linebreaks.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 18,
                "line_range": [
                    18
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "31         output = self.engine.render_to_string(\n32             \"linebreaks02\", {\"a\": \"x&\\ny\", \"b\": mark_safe(\"x&\\ny\")}\n33         )\n",
                "col_offset": 48,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_linebreaks.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 32,
                "line_range": [
                    32
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "16         output = self.engine.render_to_string(\n17             \"linebreaksbr01\", {\"a\": \"x&\\ny\", \"b\": mark_safe(\"x&\\ny\")}\n18         )\n",
                "col_offset": 50,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_linebreaksbr.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 17,
                "line_range": [
                    17
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "30         output = self.engine.render_to_string(\n31             \"linebreaksbr02\", {\"a\": \"x&\\ny\", \"b\": mark_safe(\"x&\\ny\")}\n32         )\n",
                "col_offset": 50,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_linebreaksbr.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 31,
                "line_range": [
                    31
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "17             \"linenumbers01\",\n18             {\"a\": \"one\\n<two>\\nthree\", \"b\": mark_safe(\"one\\n&lt;two&gt;\\nthree\")},\n19         )\n",
                "col_offset": 44,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_linenumbers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 18,
                "line_range": [
                    18
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "34             \"linenumbers02\",\n35             {\"a\": \"one\\n<two>\\nthree\", \"b\": mark_safe(\"one\\n&lt;two&gt;\\nthree\")},\n36         )\n",
                "col_offset": 44,
                "end_col_offset": 80,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_linenumbers.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 35,
                "line_range": [
                    35
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "18         output = self.engine.render_to_string(\n19             \"ljust01\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n20         )\n",
                "col_offset": 41,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_ljust.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"ljust02\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n27         )\n",
                "col_offset": 41,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_ljust.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "17         output = self.engine.render_to_string(\n18             \"lower01\", {\"a\": \"Apple & banana\", \"b\": mark_safe(\"Apple &amp; banana\")}\n19         )\n",
                "col_offset": 52,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_lower.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 18,
                "line_range": [
                    18
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "24         output = self.engine.render_to_string(\n25             \"lower02\", {\"a\": \"Apple & banana\", \"b\": mark_safe(\"Apple &amp; banana\")}\n26         )\n",
                "col_offset": 52,
                "end_col_offset": 83,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_lower.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 25,
                "line_range": [
                    25
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "15     def test_make_list01(self):\n16         output = self.engine.render_to_string(\"make_list01\", {\"a\": mark_safe(\"&\")})\n17         self.assertEqual(output, \"['&']\")\n",
                "col_offset": 67,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_make_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 16,
                "line_range": [
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "20     def test_make_list02(self):\n21         output = self.engine.render_to_string(\"make_list02\", {\"a\": mark_safe(\"&\")})\n22         self.assertEqual(output, \"[&#x27;&amp;&#x27;]\")\n",
                "col_offset": 67,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_make_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 21,
                "line_range": [
                    21
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "32     def test_make_list03(self):\n33         output = self.engine.render_to_string(\"make_list03\", {\"a\": mark_safe(\"&\")})\n34         self.assertEqual(output, \"['&']\")\n",
                "col_offset": 67,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_make_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 33,
                "line_range": [
                    33
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "37     def test_make_list04(self):\n38         output = self.engine.render_to_string(\"make_list04\", {\"a\": mark_safe(\"&\")})\n39         self.assertEqual(output, \"['&']\")\n",
                "col_offset": 67,
                "end_col_offset": 81,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_make_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 38,
                "line_range": [
                    38
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "12             \"phone2numeric01\",\n13             {\"a\": \"<1-800-call-me>\", \"b\": mark_safe(\"<1-800-call-me>\")},\n14         )\n",
                "col_offset": 42,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_phone2numeric.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 13,
                "line_range": [
                    13
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "27             \"phone2numeric02\",\n28             {\"a\": \"<1-800-call-me>\", \"b\": mark_safe(\"<1-800-call-me>\")},\n29         )\n",
                "col_offset": 42,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_phone2numeric.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "10         output = self.engine.render_to_string(\n11             \"random01\", {\"a\": [\"a&b\", \"a&b\"], \"b\": [mark_safe(\"a&b\"), mark_safe(\"a&b\")]}\n12         )\n",
                "col_offset": 52,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_random.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 11,
                "line_range": [
                    11
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "10         output = self.engine.render_to_string(\n11             \"random01\", {\"a\": [\"a&b\", \"a&b\"], \"b\": [mark_safe(\"a&b\"), mark_safe(\"a&b\")]}\n12         )\n",
                "col_offset": 70,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_random.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 11,
                "line_range": [
                    11
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "23         output = self.engine.render_to_string(\n24             \"random02\", {\"a\": [\"a&b\", \"a&b\"], \"b\": [mark_safe(\"a&b\"), mark_safe(\"a&b\")]}\n25         )\n",
                "col_offset": 52,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_random.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "23         output = self.engine.render_to_string(\n24             \"random02\", {\"a\": [\"a&b\", \"a&b\"], \"b\": [mark_safe(\"a&b\"), mark_safe(\"a&b\")]}\n25         )\n",
                "col_offset": 70,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_random.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "18         output = self.engine.render_to_string(\n19             \"rjust01\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n20         )\n",
                "col_offset": 41,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_rjust.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"rjust02\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n27         )\n",
                "col_offset": 41,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_rjust.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "11         output = self.engine.render_to_string(\n12             \"slice01\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n13         )\n",
                "col_offset": 41,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_slice.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 12,
                "line_range": [
                    12
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"slice02\", {\"a\": \"a&b\", \"b\": mark_safe(\"a&b\")}\n27         )\n",
                "col_offset": 41,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_slice.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "23         output = self.engine.render_to_string(\n24             \"slugify01\", {\"a\": \"a & b\", \"b\": mark_safe(\"a &amp; b\")}\n25         )\n",
                "col_offset": 45,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_slugify.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "30         output = self.engine.render_to_string(\n31             \"slugify02\", {\"a\": \"a & b\", \"b\": mark_safe(\"a &amp; b\")}\n32         )\n",
                "col_offset": 45,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_slugify.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 31,
                "line_range": [
                    31
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "23         output = self.engine.render_to_string(\n24             \"stringformat01\", {\"a\": \"a<b\", \"b\": mark_safe(\"a<b\")}\n25         )\n",
                "col_offset": 48,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_stringformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "32         output = self.engine.render_to_string(\n33             \"stringformat02\", {\"a\": \"a<b\", \"b\": mark_safe(\"a<b\")}\n34         )\n",
                "col_offset": 48,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_stringformat.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 33,
                "line_range": [
                    33
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "15                 \"a\": \"<a>x</a> <p><b>y</b></p>\",\n16                 \"b\": mark_safe(\"<a>x</a> <p><b>y</b></p>\"),\n17             },\n",
                "col_offset": 21,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_striptags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 16,
                "line_range": [
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "33                 \"a\": \"<a>x</a> <p><b>y</b></p>\",\n34                 \"b\": mark_safe(\"<a>x</a> <p><b>y</b></p>\"),\n35             },\n",
                "col_offset": 21,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_striptags.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 34,
                "line_range": [
                    34
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "19             \"truncatewords01\",\n20             {\"a\": \"alpha & bravo\", \"b\": mark_safe(\"alpha &amp; bravo\")},\n21         )\n",
                "col_offset": 40,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_truncatewords.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 20,
                "line_range": [
                    20
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "27             \"truncatewords02\",\n28             {\"a\": \"alpha & bravo\", \"b\": mark_safe(\"alpha &amp; bravo\")},\n29         )\n",
                "col_offset": 40,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_truncatewords.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 28,
                "line_range": [
                    28
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "30         output = self.engine.render_to_string(\n31             \"unordered_list03\", {\"a\": [\"x>\", [mark_safe(\"<y\")]]}\n32         )\n",
                "col_offset": 46,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_unordered_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 31,
                "line_range": [
                    31
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "45         output = self.engine.render_to_string(\n46             \"unordered_list04\", {\"a\": [\"x>\", [mark_safe(\"<y\")]]}\n47         )\n",
                "col_offset": 46,
                "end_col_offset": 61,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_unordered_list.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 46,
                "line_range": [
                    46
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "22         output = self.engine.render_to_string(\n23             \"upper01\", {\"a\": \"a & b\", \"b\": mark_safe(\"a &amp; b\")}\n24         )\n",
                "col_offset": 43,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_upper.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 23,
                "line_range": [
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "29         output = self.engine.render_to_string(\n30             \"upper02\", {\"a\": \"a & b\", \"b\": mark_safe(\"a &amp; b\")}\n31         )\n",
                "col_offset": 43,
                "end_col_offset": 65,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_upper.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 30,
                "line_range": [
                    30
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "21                 \"a\": \"http://example.com/?x=&y=\",\n22                 \"b\": mark_safe(\"http://example.com?x=&amp;y=&lt;2&gt;\"),\n23             },\n",
                "col_offset": 21,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_urlize.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "38                 \"a\": \"http://example.com/?x=&y=\",\n39                 \"b\": mark_safe(\"http://example.com?x=&amp;y=\"),\n40             },\n",
                "col_offset": 21,
                "end_col_offset": 62,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_urlize.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 39,
                "line_range": [
                    39
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "51     def test_urlize03(self):\n52         output = self.engine.render_to_string(\"urlize03\", {\"a\": mark_safe(\"a &amp; b\")})\n53         self.assertEqual(output, \"a &amp; b\")\n",
                "col_offset": 64,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_urlize.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 52,
                "line_range": [
                    52
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "56     def test_urlize04(self):\n57         output = self.engine.render_to_string(\"urlize04\", {\"a\": mark_safe(\"a &amp; b\")})\n58         self.assertEqual(output, \"a &amp; b\")\n",
                "col_offset": 64,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_urlize.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 57,
                "line_range": [
                    57
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "21                 \"a\": '\"Unsafe\" http://example.com/x=&y=',\n22                 \"b\": mark_safe(\"&quot;Safe&quot; http://example.com?x=&amp;y=\"),\n23             },\n",
                "col_offset": 21,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_urlizetrunc.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "38                 \"a\": '\"Unsafe\" http://example.com/x=&y=',\n39                 \"b\": mark_safe(\"&quot;Safe&quot; http://example.com?x=&amp;y=\"),\n40             },\n",
                "col_offset": 21,
                "end_col_offset": 79,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_urlizetrunc.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 39,
                "line_range": [
                    39
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "18         output = self.engine.render_to_string(\n19             \"wordcount01\", {\"a\": \"a & b\", \"b\": mark_safe(\"a &amp; b\")}\n20         )\n",
                "col_offset": 47,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_wordcount.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 19,
                "line_range": [
                    19
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "25         output = self.engine.render_to_string(\n26             \"wordcount02\", {\"a\": \"a & b\", \"b\": mark_safe(\"a &amp; b\")}\n27         )\n",
                "col_offset": 47,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_wordcount.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 26,
                "line_range": [
                    26
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "19         output = self.engine.render_to_string(\n20             \"wordwrap01\", {\"a\": \"a & b\", \"b\": mark_safe(\"a & b\")}\n21         )\n",
                "col_offset": 46,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_wordwrap.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 20,
                "line_range": [
                    20
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "26         output = self.engine.render_to_string(\n27             \"wordwrap02\", {\"a\": \"a & b\", \"b\": mark_safe(\"a & b\")}\n28         )\n",
                "col_offset": 46,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\template_tests\\filter_tests\\test_wordwrap.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 27,
                "line_range": [
                    27
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "201     def test_i18n21(self):\n202         output = self.engine.render_to_string(\"i18n21\", {\"andrew\": mark_safe(\"a & b\")})\n203         self.assertEqual(output, \"a & b\")\n",
                "col_offset": 67,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\template_tests\\syntax_tests\\i18n\\test_blocktranslate.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 202,
                "line_range": [
                    202
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "81     def test_i18n22(self):\n82         output = self.engine.render_to_string(\"i18n22\", {\"andrew\": mark_safe(\"a & b\")})\n83         self.assertEqual(output, \"a & b\")\n",
                "col_offset": 67,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\template_tests\\syntax_tests\\i18n\\test_translate.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 82,
                "line_range": [
                    82
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "52         output = self.engine.render_to_string(\n53             \"autoescape-tag06\", {\"first\": mark_safe(\"<b>first</b>\")}\n54         )\n",
                "col_offset": 42,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\template_tests\\syntax_tests\\test_autoescape.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 53,
                "line_range": [
                    53
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "59         output = self.engine.render_to_string(\n60             \"autoescape-tag07\", {\"first\": mark_safe(\"<b>Apple</b>\")}\n61         )\n",
                "col_offset": 42,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\template_tests\\syntax_tests\\test_autoescape.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 60,
                "line_range": [
                    60
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "223             tmppath = os.path.join(tmpdir, tmpfile.name)\n224             os.chmod(tmppath, 0o0222)\n225             with self.set_dirs([tmpdir]):\n",
                "col_offset": 12,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_loaders.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 732,
                    "link": "https://cwe.mitre.org/data/definitions/732.html"
                },
                "issue_severity": "HIGH",
                "issue_text": "Chmod setting a permissive mask 0o222 on file (tmppath).",
                "line_number": 224,
                "line_range": [
                    224
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b103_set_bad_file_permissions.html",
                "test_id": "B103",
                "test_name": "set_bad_file_permissions"
            },
            {
                "code": "1 import pickle\n2 import time\n3 from datetime import datetime\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "187         pickled_response = pickle.dumps(response)\n188         unpickled_response = pickle.loads(pickled_response)\n189 \n",
                "col_offset": 29,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 188,
                "line_range": [
                    188
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "219         pickled_response = pickle.dumps(response)\n220         unpickled_response = pickle.loads(pickled_response)\n221         pickle.dumps(unpickled_response)\n",
                "col_offset": 29,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 220,
                "line_range": [
                    220
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "235         pickled_response = pickle.dumps(response, pickle.HIGHEST_PROTOCOL)\n236         unpickled_response = pickle.loads(pickled_response)\n237 \n",
                "col_offset": 29,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 236,
                "line_range": [
                    236
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "325         pickled_response = pickle.dumps(response)\n326         unpickled_response = pickle.loads(pickled_response)\n327 \n",
                "col_offset": 29,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 326,
                "line_range": [
                    326
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "362         pickled_response = pickle.dumps(response)\n363         unpickled_response = pickle.loads(pickled_response)\n364         pickle.dumps(unpickled_response)\n",
                "col_offset": 29,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\template_tests\\test_response.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 363,
                "line_range": [
                    363
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "184     def __str__(self):\n185         return mark_safe(\"you &gt; me\")\n",
                "col_offset": 15,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\template_tests\\utils.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 185,
                "line_range": [
                    185
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "67     def setUpTestData(cls):\n68         cls.u1 = User.objects.create_user(username=\"testclient\", password=\"password\")\n69         cls.u2 = User.objects.create_user(\n",
                "col_offset": 17,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 68,
                "line_range": [
                    68
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "68         cls.u1 = User.objects.create_user(username=\"testclient\", password=\"password\")\n69         cls.u2 = User.objects.create_user(\n70             username=\"inactive\", password=\"password\", is_active=False\n71         )\n72 \n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 69,
                "line_range": [
                    69,
                    70,
                    71
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "551         # Log in\n552         login = self.client.login(username=\"testclient\", password=\"password\")\n553         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 552,
                "line_range": [
                    552
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "590         # Log in\n591         login = self.client.login(username=\"testclient\", password=\"password\")\n592         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 591,
                "line_range": [
                    591
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "628         # Log in\n629         login = self.client.login(username=\"testclient\", password=\"password\")\n630         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 629,
                "line_range": [
                    629
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "659 \n660         login = self.client.login(username=\"otheruser\", password=\"nopassword\")\n661         self.assertFalse(login)\n",
                "col_offset": 16,
                "end_col_offset": 78,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'nopassword'",
                "line_number": 660,
                "line_range": [
                    660
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "702         # Log in\n703         self.client.login(username=\"testclient\", password=\"password\")\n704 \n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 703,
                "line_range": [
                    703
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "803         # Log in\n804         login = self.client.login(username=\"testclient\", password=\"password\")\n805         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 804,
                "line_range": [
                    804
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "825         # Log in\n826         login = self.client.login(username=\"testclient\", password=\"password\")\n827         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 826,
                "line_range": [
                    826
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "842         # Log in\n843         login = self.client.login(username=\"testclient\", password=\"password\")\n844         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 843,
                "line_range": [
                    843
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "2 from urllib.parse import urlencode\n3 from xml.dom.minidom import parseString\n4 \n",
                "col_offset": 0,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\test_client\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 3,
                "line_range": [
                    3
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "138     if request.method == \"POST\":\n139         root = parseString(request.body)\n140         first_book = root.firstChild.firstChild\n",
                "col_offset": 15,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\tests\\test_client\\views.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 139,
                "line_range": [
                    139
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "31     def setUpTestData(cls):\n32         cls.u1 = User.objects.create_user(username=\"testclient\", password=\"password\")\n33         cls.staff = User.objects.create_user(\n",
                "col_offset": 17,
                "end_col_offset": 85,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 32,
                "line_range": [
                    32
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "32         cls.u1 = User.objects.create_user(username=\"testclient\", password=\"password\")\n33         cls.staff = User.objects.create_user(\n34             username=\"staff\", password=\"password\", is_staff=True\n35         )\n36 \n",
                "col_offset": 20,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 33,
                "line_range": [
                    33,
                    34,
                    35
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "694         c = Client()\n695         login = c.login(username=\"testclient\", password=\"password\")\n696         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 67,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 695,
                "line_range": [
                    695
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "712         \"A session engine that modifies the session key can be used to log in\"\n713         login = self.client.login(username=\"testclient\", password=\"password\")\n714         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 713,
                "line_range": [
                    713
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "755 \n756         login = self.client.login(username=\"testclient\", password=\"password\")\n757         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 756,
                "line_range": [
                    756
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "763         # This next operation should be successful; if it isn't we have a problem.\n764         login = self.client.login(username=\"staff\", password=\"password\")\n765         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 764,
                "line_range": [
                    764
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "905         # Log in\n906         login = self.client.login(username=\"testclient\", password=\"password\")\n907         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 906,
                "line_range": [
                    906
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "924         self.client.logout()\n925         login = self.client.login(username=\"testclient\", password=\"password\")\n926         self.assertTrue(login, \"Could not log in\")\n",
                "col_offset": 16,
                "end_col_offset": 77,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 925,
                "line_range": [
                    925
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "939         user_logged_out.connect(listener)\n940         self.client.login(username=\"testclient\", password=\"password\")\n941         self.client.logout()\n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 940,
                "line_range": [
                    940
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "958         user_logged_out.connect(listener)\n959         self.client.login(username=\"test@test.com\", password=\"password\")\n960         self.client.logout()\n",
                "col_offset": 8,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 959,
                "line_range": [
                    959
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "982         user_logged_out.connect(listener)\n983         self.client.login(username=\"test@test.com\", password=\"password\")\n984         self.client.logout()\n",
                "col_offset": 8,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 983,
                "line_range": [
                    983
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "997         user_logged_out.connect(listener)\n998         self.client.login(username=\"incorrect\", password=\"password\")\n999         self.client.logout()\n",
                "col_offset": 8,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 998,
                "line_range": [
                    998
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1013         user_logged_in.connect(listener)\n1014         self.client.login(username=\"testclient\", password=\"password\")\n1015         user_logged_out.disconnect(listener)\n",
                "col_offset": 8,
                "end_col_offset": 69,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 1014,
                "line_range": [
                    1014
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1027         user_logged_in.connect(listener)\n1028         self.client.login(username=\"incorrect\", password=\"password\")\n1029         user_logged_in.disconnect(listener)\n",
                "col_offset": 8,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\test_client_regress\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'password'",
                "line_number": 1028,
                "line_range": [
                    1028
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "1 import pickle\n2 import sys\n3 import unittest\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\test_runner\\test_parallel.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "158         result = RemoteTestResult()\n159         loaded_result = pickle.loads(pickle.dumps(result))\n160         self.assertEqual(result.events, loaded_result.events)\n",
                "col_offset": 24,
                "end_col_offset": 58,
                "filename": "open_source_repos\\django\\tests\\test_runner\\test_parallel.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 159,
                "line_range": [
                    159
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "23 \n24 SECRET_KEY = \"django_tests_secret_key\"\n25 \n",
                "col_offset": 13,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\tests\\test_sqlite.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'django_tests_secret_key'",
                "line_number": 24,
                "line_range": [
                    24
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
                "test_id": "B105",
                "test_name": "hardcoded_password_string"
            },
            {
                "code": "1 import pickle\n2 from functools import wraps\n3 \n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\test_utils\\test_testcase.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "24         self.non_picklable = lambda: 0\n25         self.assertEqual(self, pickle.loads(pickle.dumps(self)))\n26 \n",
                "col_offset": 31,
                "end_col_offset": 63,
                "filename": "open_source_repos\\django\\tests\\test_utils\\test_testcase.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 25,
                "line_range": [
                    25
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "1851         \"\"\"\n1852         with self.settings(STATIC_ROOT=\"/tmp/test\"):\n1853             self.assertEqual(staticfiles_storage.location, os.path.abspath(\"/tmp/test\"))\n",
                "col_offset": 39,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\test_utils\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 1852,
                "line_range": [
                    1852
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "1852         with self.settings(STATIC_ROOT=\"/tmp/test\"):\n1853             self.assertEqual(staticfiles_storage.location, os.path.abspath(\"/tmp/test\"))\n1854 \n",
                "col_offset": 75,
                "end_col_offset": 86,
                "filename": "open_source_repos\\django\\tests\\test_utils\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 1853,
                "line_range": [
                    1853
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "1884         finder = get_finder(\"django.contrib.staticfiles.finders.FileSystemFinder\")\n1885         test_path = \"/tmp/test\"\n1886         expected_location = (\"\", test_path)\n",
                "col_offset": 20,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\test_utils\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 1885,
                "line_range": [
                    1885
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "6 from unittest import SkipTest, skipIf\n7 from xml.dom.minidom import parseString\n8 \n",
                "col_offset": 0,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\timezones\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.",
                "line_number": 7,
                "line_range": [
                    7
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b408-import-xml-minidom",
                "test_id": "B408",
                "test_name": "blacklist"
            },
            {
                "code": "738     def assert_xml_contains_datetime(self, xml, dt):\n739         field = parseString(xml).getElementsByTagName(\"field\")[0]\n740         self.assertXMLEqual(field.childNodes[0].wholeText, dt)\n",
                "col_offset": 16,
                "end_col_offset": 32,
                "filename": "open_source_repos\\django\\tests\\timezones\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 20,
                    "link": "https://cwe.mitre.org/data/definitions/20.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called",
                "line_number": 739,
                "line_range": [
                    739
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom",
                "test_id": "B318",
                "test_name": "blacklist"
            },
            {
                "code": "1336     def setUpTestData(cls):\n1337         cls.u1 = User.objects.create_user(\n1338             password=\"secret\",\n1339             last_login=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),\n1340             is_superuser=True,\n1341             username=\"super\",\n1342             first_name=\"Super\",\n1343             last_name=\"User\",\n1344             email=\"super@example.com\",\n1345             is_staff=True,\n1346             is_active=True,\n1347             date_joined=datetime.datetime(2007, 5, 30, 13, 20, 10, tzinfo=UTC),\n1348         )\n1349 \n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\timezones\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'secret'",
                "line_number": 1337,
                "line_range": [
                    1337,
                    1338,
                    1339,
                    1340,
                    1341,
                    1342,
                    1343,
                    1344,
                    1345,
                    1346,
                    1347,
                    1348
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "4 \n5 import pickle\n6 import sys\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\urlpatterns_reverse\\tests.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 5,
                "line_range": [
                    5
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "693     def test_user_permission_with_lazy_reverse(self):\n694         alfred = User.objects.create_user(\n695             \"alfred\", \"alfred@example.com\", password=\"testpw\"\n696         )\n697         response = self.client.get(\"/login_required_view/\")\n",
                "col_offset": 17,
                "end_col_offset": 9,
                "filename": "open_source_repos\\django\\tests\\urlpatterns_reverse\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 259,
                    "link": "https://cwe.mitre.org/data/definitions/259.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Possible hardcoded password: 'testpw'",
                "line_number": 694,
                "line_range": [
                    694,
                    695,
                    696
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b106_hardcoded_password_funcarg.html",
                "test_id": "B106",
                "test_name": "hardcoded_password_funcarg"
            },
            {
                "code": "84             (\"traversal.tar\", \"..\"),\n85             (\"traversal_absolute.tar\", \"/tmp/evil.py\"),\n86         ]\n",
                "col_offset": 39,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_archive.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 85,
                "line_range": [
                    85
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "14 from pathlib import Path\n15 from subprocess import CompletedProcess\n16 from unittest import mock, skip, skipIf\n",
                "col_offset": 0,
                "end_col_offset": 39,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_autoreload.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with the subprocess module.",
                "line_number": 15,
                "line_range": [
                    15
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b404-import-subprocess",
                "test_id": "B404",
                "test_name": "blacklist"
            },
            {
                "code": "31                 (\"salt\", \"value\"),\n32                 {\"secret\": \"x\" * hashlib.sha1().block_size},\n33                 \"bd3749347b412b1b0a9ea65220e55767ac8e96b0\",\n",
                "col_offset": 33,
                "end_col_offset": 47,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_crypto.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 327,
                    "link": "https://cwe.mitre.org/data/definitions/327.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
                "line_number": 32,
                "line_range": [
                    32
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b303-md5",
                "test_id": "B303",
                "test_name": "blacklist"
            },
            {
                "code": "6 import copy\n7 import pickle\n8 \n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_datastructures.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 7,
                "line_range": [
                    7
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "142         x = MultiValueDict({\"a\": [\"1\", \"2\"], \"b\": [\"3\"]})\n143         self.assertEqual(x, pickle.loads(pickle.dumps(x)))\n144 \n",
                "col_offset": 28,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_datastructures.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 143,
                "line_range": [
                    143
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "62                 \"< Dangerous >\",\n63                 mark_safe(\"<b>safe</b>\"),\n64                 third=\"< dangerous again\",\n",
                "col_offset": 16,
                "end_col_offset": 40,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 63,
                "line_range": [
                    63
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "64                 third=\"< dangerous again\",\n65                 fourth=mark_safe(\"<i>safe again</i>\"),\n66             ),\n",
                "col_offset": 23,
                "end_col_offset": 53,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 65,
                "line_range": [
                    65
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "296         self.assertEqual(conditional_escape(s), \"&lt;h1&gt;interop&lt;/h1&gt;\")\n297         self.assertEqual(conditional_escape(mark_safe(s)), s)\n298         self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)\n",
                "col_offset": 44,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 297,
                "line_range": [
                    297
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "297         self.assertEqual(conditional_escape(mark_safe(s)), s)\n298         self.assertEqual(conditional_escape(lazystr(mark_safe(s))), s)\n299 \n",
                "col_offset": 52,
                "end_col_offset": 64,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_html.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 298,
                "line_range": [
                    298
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "1 import copy\n2 import pickle\n3 import sys\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_lazyobject.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 2,
                "line_range": [
                    2
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "228         pickled = pickle.dumps(obj)\n229         unpickled = pickle.loads(pickled)\n230         self.assertIsInstance(unpickled, Foo)\n",
                "col_offset": 20,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_lazyobject.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 229,
                "line_range": [
                    229
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "484                 pickled = pickle.dumps(obj, protocol)\n485                 unpickled = pickle.loads(pickled)\n486                 self.assertEqual(unpickled, obj)\n",
                "col_offset": 28,
                "end_col_offset": 49,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_lazyobject.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 485,
                "line_range": [
                    485
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "502                 self.assertEqual(\n503                     pickle.loads(pickle.dumps(lazy_category, protocol)), category\n504                 )\n",
                "col_offset": 20,
                "end_col_offset": 71,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_lazyobject.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 503,
                "line_range": [
                    503
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "505                 self.assertEqual(\n506                     pickle.loads(pickle.dumps(lazy_category_2, protocol)), category\n507                 )\n",
                "col_offset": 20,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_lazyobject.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 506,
                "line_range": [
                    506
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "33     def test_to_path(self):\n34         for path in (\"/tmp/some_file.txt\", Path(\"/tmp/some_file.txt\")):\n35             with self.subTest(path):\n",
                "col_offset": 21,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_os_utils.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 34,
                "line_range": [
                    34
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "33     def test_to_path(self):\n34         for path in (\"/tmp/some_file.txt\", Path(\"/tmp/some_file.txt\")):\n35             with self.subTest(path):\n",
                "col_offset": 48,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_os_utils.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 34,
                "line_range": [
                    34
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "35             with self.subTest(path):\n36                 self.assertEqual(to_path(path), Path(\"/tmp/some_file.txt\"))\n37 \n",
                "col_offset": 53,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_os_utils.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 377,
                    "link": "https://cwe.mitre.org/data/definitions/377.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Probable insecure usage of temp file/directory.",
                "line_number": 36,
                "line_range": [
                    36
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b108_hardcoded_tmp_directory.html",
                "test_id": "B108",
                "test_name": "hardcoded_tmp_directory"
            },
            {
                "code": "22     def test_mark_safe(self):\n23         s = mark_safe(\"a&b\")\n24 \n",
                "col_offset": 12,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 23,
                "line_range": [
                    23
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "31         \"\"\"\n32         s = mark_safe(\"a&b\")\n33         self.assertIsInstance(str(s), type(s))\n",
                "col_offset": 12,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 32,
                "line_range": [
                    32
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "36         e = customescape(\"<a&b>\")\n37         s = mark_safe(e)\n38         self.assertIs(s, e)\n",
                "col_offset": 12,
                "end_col_offset": 24,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 37,
                "line_range": [
                    37
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "36         e = customescape(\"<a&b>\")\n37         s = mark_safe(e)\n38         self.assertIs(s, e)\n",
                "col_offset": 12,
                "end_col_offset": 24,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 37,
                "line_range": [
                    37
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "43     def test_mark_safe_lazy(self):\n44         safe_s = mark_safe(lazystr(\"a&b\"))\n45 \n",
                "col_offset": 17,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 44,
                "line_range": [
                    44
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "43     def test_mark_safe_lazy(self):\n44         safe_s = mark_safe(lazystr(\"a&b\"))\n45 \n",
                "col_offset": 17,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 44,
                "line_range": [
                    44
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "50     def test_mark_safe_lazy_i18n(self):\n51         s = mark_safe(gettext_lazy(\"name\"))\n52         tpl = Template(\"{{ s }}\")\n",
                "col_offset": 12,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 51,
                "line_range": [
                    51
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "50     def test_mark_safe_lazy_i18n(self):\n51         s = mark_safe(gettext_lazy(\"name\"))\n52         tpl = Template(\"{{ s }}\")\n",
                "col_offset": 12,
                "end_col_offset": 43,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 51,
                "line_range": [
                    51
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "60 \n61         s = mark_safe(Obj())\n62 \n",
                "col_offset": 12,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 61,
                "line_range": [
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "60 \n61         s = mark_safe(Obj())\n62 \n",
                "col_offset": 12,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 61,
                "line_range": [
                    61
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "65     def test_mark_safe_result_implements_dunder_html(self):\n66         self.assertEqual(mark_safe(\"a&b\").__html__(), \"a&b\")\n67 \n",
                "col_offset": 25,
                "end_col_offset": 41,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 66,
                "line_range": [
                    66
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "68     def test_mark_safe_lazy_result_implements_dunder_html(self):\n69         self.assertEqual(mark_safe(lazystr(\"a&b\")).__html__(), \"a&b\")\n70 \n",
                "col_offset": 25,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 69,
                "line_range": [
                    69
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "68     def test_mark_safe_lazy_result_implements_dunder_html(self):\n69         self.assertEqual(mark_safe(lazystr(\"a&b\")).__html__(), \"a&b\")\n70 \n",
                "col_offset": 25,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 69,
                "line_range": [
                    69
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "72         s = html.escape(lazystr(\"a\"))\n73         s += mark_safe(\"&b\")\n74         self.assertRenderEqual(\"{{ s }}\", \"a&b\", s=s)\n",
                "col_offset": 13,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 73,
                "line_range": [
                    73
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "76         s = html.escapejs(lazystr(\"a\"))\n77         s += mark_safe(\"&b\")\n78         self.assertRenderEqual(\"{{ s }}\", \"a&b\", s=s)\n",
                "col_offset": 13,
                "end_col_offset": 28,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 77,
                "line_range": [
                    77
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "88 \n89         self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())\n90 \n",
                "col_offset": 25,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 89,
                "line_range": [
                    89
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "88 \n89         self.assertEqual(mark_safe(clean_string_provider)(), clean_string_provider())\n90 \n",
                "col_offset": 25,
                "end_col_offset": 57,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 89,
                "line_range": [
                    89
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "99 \n100         self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)\n101 \n",
                "col_offset": 22,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 100,
                "line_range": [
                    100
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "99 \n100         self.assertIs(mark_safe(SafeStringContainer), SafeStringContainer)\n101 \n",
                "col_offset": 22,
                "end_col_offset": 52,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 100,
                "line_range": [
                    100
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "110         lazy_str = lazy(html_str, str)()\n111         self.assertEqual(mark_safe(lazy_str), html_str())\n112 \n",
                "col_offset": 25,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 111,
                "line_range": [
                    111
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "110         lazy_str = lazy(html_str, str)()\n111         self.assertEqual(mark_safe(lazy_str), html_str())\n112 \n",
                "col_offset": 25,
                "end_col_offset": 44,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 111,
                "line_range": [
                    111
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "146             def __add__(self, other):\n147                 return mark_safe(base_str) + other\n148 \n",
                "col_offset": 23,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 147,
                "line_range": [
                    147
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "146             def __add__(self, other):\n147                 return mark_safe(base_str) + other\n148 \n",
                "col_offset": 23,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 147,
                "line_range": [
                    147
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "154             def __radd__(self, other):\n155                 return other + mark_safe(base_str)\n156 \n",
                "col_offset": 31,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 80,
                    "link": "https://cwe.mitre.org/data/definitions/80.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Potential XSS on mark_safe function.",
                "line_number": 155,
                "line_range": [
                    155
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b703_django_mark_safe.html",
                "test_id": "B703",
                "test_name": "django_mark_safe"
            },
            {
                "code": "154             def __radd__(self, other):\n155                 return other + mark_safe(base_str)\n156 \n",
                "col_offset": 31,
                "end_col_offset": 50,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 155,
                "line_range": [
                    155
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "161             (Add(), add_str, left_add_expected, str),\n162             (Add(), mark_safe(add_str), left_add_expected, str),\n163             (AddSafe(), add_str, left_add_expected, str),\n",
                "col_offset": 20,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 162,
                "line_range": [
                    162
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "163             (AddSafe(), add_str, left_add_expected, str),\n164             (AddSafe(), mark_safe(add_str), left_add_expected, SafeString),\n165             # Right-add test cases.\n",
                "col_offset": 24,
                "end_col_offset": 42,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 164,
                "line_range": [
                    164
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "166             (add_str, Radd(), right_add_expected, str),\n167             (mark_safe(add_str), Radd(), right_add_expected, str),\n168             (add_str, Radd(), right_add_expected, str),\n",
                "col_offset": 13,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 167,
                "line_range": [
                    167
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "168             (add_str, Radd(), right_add_expected, str),\n169             (mark_safe(add_str), RaddSafe(), right_add_expected, SafeString),\n170         ]\n",
                "col_offset": 13,
                "end_col_offset": 31,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_safestring.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 169,
                "line_range": [
                    169
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "1 import pickle\n2 \n3 from django.contrib.auth.models import User\n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\utils_tests\\test_simplelazyobject.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "1 import pickle\n2 from unittest import TestCase\n3 \n",
                "col_offset": 0,
                "end_col_offset": 13,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "LOW",
                "issue_text": "Consider possible security implications associated with pickle module.",
                "line_number": 1,
                "line_range": [
                    1
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
                "test_id": "B403",
                "test_name": "blacklist"
            },
            {
                "code": "9         original = ValidationError(\"a\", code=\"something\")\n10         unpickled = pickle.loads(pickle.dumps(original))\n11         self.assertIs(unpickled, unpickled.error_list[0])\n",
                "col_offset": 20,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 10,
                "line_range": [
                    10
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "15         original = ValidationError(\"a\", code=\"something\")\n16         unpickled = pickle.loads(pickle.dumps(ValidationError(original)))\n17         self.assertIs(unpickled, unpickled.error_list[0])\n",
                "col_offset": 20,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 16,
                "line_range": [
                    16
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "21         original = ValidationError([\"a\", \"b\"])\n22         unpickled = pickle.loads(pickle.dumps(original))\n23         self.assertEqual(\n",
                "col_offset": 20,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 22,
                "line_range": [
                    22
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "30         original = ValidationError([\"a\", \"b\"])\n31         unpickled = pickle.loads(pickle.dumps(ValidationError(original)))\n32         self.assertEqual(\n",
                "col_offset": 20,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 31,
                "line_range": [
                    31
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "39         original = ValidationError([ValidationError(\"a\"), ValidationError(\"b\")])\n40         unpickled = pickle.loads(pickle.dumps(original))\n41         self.assertIs(unpickled.args[0][0], unpickled.error_list[0])\n",
                "col_offset": 20,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 40,
                "line_range": [
                    40
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "50         original = ValidationError(message_dict)\n51         unpickled = pickle.loads(pickle.dumps(original))\n52         self.assertEqual(unpickled.message_dict, message_dict)\n",
                "col_offset": 20,
                "end_col_offset": 56,
                "filename": "open_source_repos\\django\\tests\\validation\\test_picklable.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 502,
                    "link": "https://cwe.mitre.org/data/definitions/502.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
                "line_number": 51,
                "line_range": [
                    51
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
                "test_id": "B301",
                "test_name": "blacklist"
            },
            {
                "code": "364     (validate_ipv4_address, \"255.0.0.0\", None),\n365     (validate_ipv4_address, \"0.0.0.0\", None),\n366     (validate_ipv4_address, \"256.1.1.1\", ValidationError),\n",
                "col_offset": 28,
                "end_col_offset": 37,
                "filename": "open_source_repos\\django\\tests\\validators\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 605,
                    "link": "https://cwe.mitre.org/data/definitions/605.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible binding to all interfaces.",
                "line_number": 365,
                "line_range": [
                    365
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
                "test_id": "B104",
                "test_name": "hardcoded_bind_all_interfaces"
            },
            {
                "code": "390     (validate_ipv46_address, \"255.0.0.0\", None),\n391     (validate_ipv46_address, \"0.0.0.0\", None),\n392     (validate_ipv46_address, \"fe80::1\", None),\n",
                "col_offset": 29,
                "end_col_offset": 38,
                "filename": "open_source_repos\\django\\tests\\validators\\tests.py",
                "issue_confidence": "MEDIUM",
                "issue_cwe": {
                    "id": 605,
                    "link": "https://cwe.mitre.org/data/definitions/605.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Possible binding to all interfaces.",
                "line_number": 391,
                "line_range": [
                    391
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
                "test_id": "B104",
                "test_name": "hardcoded_bind_all_interfaces"
            },
            {
                "code": "706                 err.add_note(\"Second Note\")\n707                 err.add_note(mark_safe(\"<script>alert(1);</script>\"))\n708                 raise err\n",
                "col_offset": 29,
                "end_col_offset": 68,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 707,
                "line_range": [
                    707
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "769             try:\n770                 raise AttributeError(mark_safe(\"<p>Top level</p>\"))\n771             except AttributeError as explicit:\n",
                "col_offset": 37,
                "end_col_offset": 66,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 770,
                "line_range": [
                    770
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "772                 try:\n773                     raise ValueError(mark_safe(\"<p>Second exception</p>\")) from explicit\n774                 except ValueError:\n",
                "col_offset": 37,
                "end_col_offset": 73,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 773,
                "line_range": [
                    773
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "774                 except ValueError:\n775                     raise IndexError(mark_safe(\"<p>Final exception</p>\"))\n776         except Exception:\n",
                "col_offset": 37,
                "end_col_offset": 72,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 775,
                "line_range": [
                    775
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "816                 try:\n817                     raise ValueError(mark_safe(\"<p>2nd exception</p>\")) from explicit\n818                 except ValueError:\n",
                "col_offset": 37,
                "end_col_offset": 70,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 817,
                "line_range": [
                    817
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "881             code = compile(source, \"generated\", \"exec\")\n882             exec(code, namespace)\n883         except Exception:\n",
                "col_offset": 12,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of exec detected.",
                "line_number": 882,
                "line_range": [
                    882
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html",
                "test_id": "B102",
                "test_name": "exec_used"
            },
            {
                "code": "916             code = compile(source, \"generated\", \"exec\")\n917             exec(code, namespace)\n918         except Exception:\n",
                "col_offset": 12,
                "end_col_offset": 33,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 78,
                    "link": "https://cwe.mitre.org/data/definitions/78.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of exec detected.",
                "line_number": 917,
                "line_range": [
                    917
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b102_exec_used.html",
                "test_id": "B102",
                "test_name": "exec_used"
            },
            {
                "code": "1048         try:\n1049             local = mark_safe(\"<p>Local variable</p>\")\n1050             raise ValueError(local)\n",
                "col_offset": 20,
                "end_col_offset": 54,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 1049,
                "line_range": [
                    1049
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            },
            {
                "code": "1102         try:\n1103             mark_safe(\"abcdefghijkl<p>mn\u1f40p</p>qrstuwxyz\").encode(\"ascii\")\n1104         except Exception:\n",
                "col_offset": 12,
                "end_col_offset": 59,
                "filename": "open_source_repos\\django\\tests\\view_tests\\tests\\test_debug.py",
                "issue_confidence": "HIGH",
                "issue_cwe": {
                    "id": 79,
                    "link": "https://cwe.mitre.org/data/definitions/79.html"
                },
                "issue_severity": "MEDIUM",
                "issue_text": "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
                "line_number": 1103,
                "line_range": [
                    1103
                ],
                "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b308-mark-safe",
                "test_id": "B308",
                "test_name": "blacklist"
            }
        ]
    },
    "safety": {
        "status": "failed",
        "error": "Placeholder requirements.txt"
    }
}